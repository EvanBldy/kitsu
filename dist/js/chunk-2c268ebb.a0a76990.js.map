{"version":3,"sources":["webpack:///./src/components/pages/Task.vue?97db","webpack:///./src/components/pages/Task.vue?1380","webpack:///src/components/pages/Task.vue","webpack:///./src/components/pages/Task.vue?b5f0","webpack:///./src/components/pages/Task.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","currentTaskType","currentProduction","id","_e","currentTaskPreviews","length","preview_file_id","taskEntityPath","currentTask","title","_v","_s","$t","assignees","_l","personId","key","personMap","get","formatPriority","priority","isAssigned","isSubscribed","on","toggleSubscribe","ref","previewOptions","model","value","callback","$$v","selectedPreviewId","expression","isPreviews","isCurrentUserManager","class","button","loading","setPreview","errors","entity","currentPreviewId","currentPreview","previews","taskTypeMap","taskEntityPreviews","isCurrentUserArtist","lastFivePreviews","onAnnotationChanged","onAddExtraPreviewClicked","onRemoveExtraPreviewClicked","changeCurrentPreview","onTimeUpdated","estimation","formatDuration","duration","retake_count","formatSimpleDate","start_date","due_date","addComment","addCommentMaxRetakes","isMovie","user","currentTeam","taskStatusForCurrentUser","previewForms","parseInt","currentFps","currentTime","currentRevision","onAddPreviewClicked","onDuplicateComment","selectFile","clearPreviewFiles","extractAnnotationSnapshots","onPreviewFormRemoved","currentTaskComments","comment","index","person","isCurrentUserAdmin","pinnedCount","isStatusChange","ackComment","onPinComment","onEditComment","onDeleteComment","saveComment","timeCodeClicked","modals","addPreview","addPreviewFormData","entity_name","task_type_id","name","$event","closeAddPreviewModal","addExtraPreview","addExtraPreviewFormData","hideExtraPreviewModal","createExtraPreview","editComment","commentToEdit","confirmEditTaskComment","onCancelEditComment","deleteComment","confirmDeleteTaskComment","onCancelDeleteComment","deleteExtraPreview","hideRemoveExtraPreviewModal","confirmDeleteTaskPreview","staticRenderFns","mixins","format","components","AddComment","AddPreviewModal","ComboboxStyled","Comment","DeleteModal","EditCommentModal","EntityThumbnail","ImageIcon","PageSubtitle","PageTitle","PeopleAvatar","PreviewPlayer","Spinner","SubscribeButton","TaskTypeName","ValidationTag","data","selectedTab","taskLoading","isLoading","isError","deleteTask","created","clearSelectedTasks","loadTaskData","mounted","reset","$nextTick","window","scrollTo","beforeDestroy","$refs","drafts","computed","map","label","preview","isPreviewButtonVisible","extension","find","previewId","productionMap","project_id","fps","revision","isCommentingAllowed","taskTypeBorder","border","task_type_color","deleteTaskPath","taskPath","slice","entityList","displayedShots","displayedAssets","previousEntity","nextEntity","isTVShow","type","entityName","windowTitle","deleteText","some","assigneeId","team","filter","methods","task","loadTaskComments","loadTask","getCurrentTask","taskMap","route","params","task_id","getCurrentComment","comment_id","getTaskComment","getCurrentTaskComments","getTaskComments","getCurrentTaskPreviews","getTaskPreviews","taskId","taskStatusId","checklist","attachment","action","$store","dispatch","draft","text","setTimeout","loadPreviewFileFormData","forms","concat","isHighlighted","findIndex","addCommentExtraPreview","commentId","resetPreview","changeRoute","$router","push","previewPath","entityId","editTaskComment","deleteTaskComment","displayFirst","deleteTaskPreview","currentExtraPreviewId","onPreviewAdded","commit","unsubscribeFromTask","subscribeToTask","episode_id","section","production_id","currentEpisode","preview_id","updatePreviewAnnotation","showRemoveExtraPreviewModal","setValue","pinComment","time","onRemoteAcknowledge","isPreviewPlayerReadOnly","isCurrentUserClient","departments","taskType","department_id","includes","watch","$route","socket","events","eventData","refreshPreview","validation_status","replies","reply","refreshComment","isValid","previewPlayer","notSaved","reloadAnnotations","loadAnnotation","metaInfo","component"],"mappings":"kHAAA,W,oECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,MAAM,CAACE,YAAY,2BAA2B,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAAEN,EAAe,YAAEI,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAAEN,EAAmB,gBAAEI,EAAG,iBAAiB,CAACE,YAAY,+BAA+BC,MAAM,CAAC,YAAYP,EAAIQ,gBAAgB,gBAAgBR,EAAIS,kBAAkBC,MAAMV,EAAIW,KAAKP,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACF,EAAG,mBAAmB,CAACE,YAAY,mBAAmBC,MAAM,CAAC,OAASP,EAAIY,qBAAuBZ,EAAIY,oBAAoBC,OAAS,EAC9nB,CAAEC,gBAAiBd,EAAIY,oBAAoB,GAAGF,IAC9C,GAAI,cAAc,IAAI,eAAe,GAAG,MAAQ,IAAI,aAAY,MAAU,GAAGN,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,cAAc,CAACG,MAAM,CAAC,GAAKP,EAAIe,iBAAiB,CAACX,EAAG,aAAa,CAACG,MAAM,CAAC,KAAOP,EAAIgB,YAAchB,EAAIiB,MAAQ,aAAa,KAAO,OAAO,IAAI,GAAGb,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACN,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,yBAAyB,OAAQpB,EAAe,YAAEI,EAAG,iBAAiB,CAACE,YAAY,yBAAyBC,MAAM,CAAC,KAAOP,EAAIgB,YAAY,aAAY,KAAQhB,EAAIW,KAAMX,EAAIgB,YAAYK,UAAUR,OAAS,EAAGT,EAAG,OAAO,CAACE,YAAY,gBAAgB,CAACN,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,2BAA2B,QAAQpB,EAAIW,KAAKX,EAAIsB,GAAItB,EAAIgB,YAAqB,WAAE,SAASO,GAAU,OAAOnB,EAAG,OAAO,CAACoB,IAAID,EAASjB,YAAY,+BAA+B,CAACF,EAAG,gBAAgB,CAACoB,IAAID,EAASjB,YAAY,eAAeC,MAAM,CAAC,OAASP,EAAIyB,UAAUC,IAAIH,GAAU,KAAO,GAAG,YAAY,OAAO,MAAKnB,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACN,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,0BAA0B,KAAKpB,EAAImB,GAAGnB,EAAI2B,eAAe3B,EAAIgB,YAAYY,WAAW,OAAS5B,EAAI6B,WAAuK7B,EAAIW,KAA/JP,EAAG,mBAAmB,CAACE,YAAY,6BAA6BC,MAAM,CAAC,WAAaP,EAAI6B,YAAc7B,EAAI8B,cAAcC,GAAG,CAAC,MAAQ/B,EAAIgC,oBAA6B,IAAI,GAAGhC,EAAIW,OAAOP,EAAG,MAAM,CAAC6B,IAAI,eAAe3B,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAAEN,EAAc,WAAEI,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,kBAAkB,CAACE,YAAY,6BAA6BC,MAAM,CAAC,QAAUP,EAAIkC,gBAAgBC,MAAM,CAACC,MAAOpC,EAAqB,kBAAEqC,SAAS,SAAUC,GAAMtC,EAAIuC,kBAAkBD,GAAKE,WAAW,wBAAwB,GAAGpC,EAAG,MAAM,CAACA,EAAG,KAAK,CAACJ,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,qBAAqB,SAAUpB,EAA0B,uBAAEI,EAAG,MAAM,CAACE,YAAY,oDAAoD,CAAEN,EAAIyC,YAAczC,EAAI0C,qBAAsBtC,EAAG,SAAS,CAACuC,MAAM,CAC/gEC,QAAQ,EACR,gBAAgB,EAChB,aAAc5C,EAAI6C,QAAQC,YAC1Bf,GAAG,CAAC,MAAQ/B,EAAI8C,aAAa,CAAC1C,EAAG,aAAa,CAACE,YAAY,SAASF,EAAG,OAAO,CAACE,YAAY,QAAQ,CAACN,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,sBAAsB,QAAQ,GAAGpB,EAAIW,KAAMX,EAAI+C,OAAiB,WAAE3C,EAAG,OAAO,CAACE,YAAY,sBAAsB,CAACN,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,4BAA4B,OAAOpB,EAAIW,OAAOX,EAAIW,KAAMX,EAAIgB,aAAehB,EAAIgB,YAAYgC,QAAUhD,EAAIgB,YAAYgC,OAAOlC,kBAAoBd,EAAIiD,iBAAkB7C,EAAG,MAAM,CAACE,YAAY,4CAA4C,CAACF,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,gCAAgCpB,EAAIW,OAAOP,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAAEN,EAAc,WAAEI,EAAG,MAAM,CAAEJ,EAAkB,eAAEI,EAAG,iBAAiB,CAAC6B,IAAI,iBAAiB1B,MAAM,CAAC,SAAWP,EAAIkD,eAAeC,SAAS,gBAAgBnD,EAAIoD,YAAY,uBAAuBpD,EAAIqD,mBAAmB,YAAYrD,EAAIsD,oBAAoB,qBAAqBtD,EAAIuD,iBAAiB,KAAOvD,EAAIgB,YAAY,cAAa,GAAMe,GAAG,CAAC,qBAAqB/B,EAAIwD,oBAAoB,oBAAoBxD,EAAIyD,yBAAyB,uBAAuBzD,EAAI0D,4BAA4B,yBAAyB1D,EAAI2D,qBAAqB,eAAe3D,EAAI4D,iBAAiB5D,EAAIW,MAAM,GAAGX,EAAIW,SAASP,EAAG,MAAM,CAACE,YAAY,yCAAyC,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,KAAOP,EAAIoB,GAAG,gBAAgBhB,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAAEN,EAAe,YAAEI,EAAG,QAAQ,CAACE,YAAY,uBAAuB,CAACF,EAAG,QAAQ,CAACE,YAAY,cAAc,CAACF,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACN,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,+BAA+BhB,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIgB,YAAY6C,iBAAiBzD,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACN,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,6BAA6BhB,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAI8D,eAAe9D,EAAIgB,YAAY+C,gBAAgB3D,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACN,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,iCAAiChB,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIgB,YAAYgD,mBAAmB5D,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACN,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,+BAA+BhB,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIiE,iBAAiBjE,EAAIgB,YAAYkD,kBAAkB9D,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACN,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIoB,GAAG,6BAA6BhB,EAAG,KAAK,CAACJ,EAAIkB,GAAGlB,EAAImB,GAAGnB,EAAIiE,iBAAiBjE,EAAIgB,YAAYmD,oBAAoBnE,EAAIW,QAAQ,GAAGP,EAAG,MAAM,CAACE,YAAY,UAAUF,EAAG,MAAM,CAACE,YAAY,+BAA+B,CAAEN,EAAe,YAAEI,EAAG,MAAM,CAACA,EAAG,MAAM,CAAEJ,EAAuB,oBAAEI,EAAG,cAAc,CAAC6B,IAAI,cAAc1B,MAAM,CAAC,WAAWP,EAAI+C,OAAOqB,WAAW,uBAAuBpE,EAAI+C,OAAOsB,qBAAqB,aAAarE,EAAI6C,QAAQuB,WAAW,WAAWpE,EAAIsE,QAAQ,KAAOtE,EAAIuE,KAAK,KAAOvE,EAAIwE,YAAY,KAAOxE,EAAIgB,YAAY,cAAchB,EAAIyE,yBAAyB,gBAAgBzE,EAAI0E,aAAa,IAAMC,SAAS3E,EAAI4E,YAAY,KAAO5E,EAAI6E,YAAY,SAAW7E,EAAI8E,iBAAiB/C,GAAG,CAAC,cAAc/B,EAAIoE,WAAW,cAAcpE,EAAI+E,oBAAoB,oBAAoB/E,EAAIgF,mBAAmB,YAAYhF,EAAIiF,WAAW,cAAcjF,EAAIkF,kBAAkB,iCAAiClF,EAAImF,2BAA2B,iBAAiBnF,EAAIoF,wBAAwBpF,EAAIW,KAAMX,EAAIqF,qBAAuBrF,EAAIqF,oBAAoBxE,OAAS,EAAGT,EAAG,MAAM,CAACE,YAAY,YAAYN,EAAIsB,GAAItB,EAAuB,qBAAE,SAASsF,EAAQC,GAAO,OAAOnF,EAAG,UAAU,CAACoB,IAAI8D,EAAQ5E,GAAGH,MAAM,CAAC,QAAU+E,EAAQ,KAAOtF,EAAIgB,YAAY,aAAc,EAAM,eAAehB,EAAIuE,KAAK,SACliHe,EAAQE,QAAUxF,EAAIuE,KAAK7D,KAAO4E,EAAQE,OAAO9E,IACjDV,EAAIyF,mBACJ,WAAqB,IAAVF,EAAY,UAAUA,IAAUvF,EAAI0F,YAAY,YAAY1F,EAAI2F,eAAeJ,IAAQxD,GAAG,CAAC,cAAc/B,EAAI4F,WAAW,cAAc5F,EAAI6F,aAAa,eAAe7F,EAAI8F,cAAc,iBAAiB9F,EAAI+F,gBAAgB,oBAAoB/F,EAAIgG,YAAY,oBAAoBhG,EAAIiG,sBAAqB,GAAG7F,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,KAAK,CAACJ,EAAIkB,GAAG,IAAIlB,EAAImB,GAAGnB,EAAIoB,GAAG,qBAAqB,UAAU,KAAKhB,EAAG,MAAM,CAACE,YAAY,qBAAqB,CAACF,EAAG,YAAY,OAAOA,EAAG,oBAAoB,CAAC6B,IAAI,oBAAoB1B,MAAM,CAAC,OAASP,EAAIkG,OAAOC,WAAW,aAAanG,EAAI6C,QAAQsD,WAAW,WAAWnG,EAAI+C,OAAOoD,WAAW,YAAYnG,EAAIoG,mBAAmB,MAAQpG,EAAIgB,YAAchB,EAAIgB,YAAYqF,YAAc,MAAQrG,EAAIoD,YAAY1B,IAAI1B,EAAIgB,YAAYsF,cAAcC,KAAO,IAAIxE,GAAG,CAAC,OAAS,SAASyE,GAAQxG,EAAIkG,OAAOC,YAAa,GAAO,aAAenG,EAAIiF,WAAW,QAAUjF,EAAIyG,wBAAwBrG,EAAG,oBAAoB,CAAC6B,IAAI,0BAA0B1B,MAAM,CAAC,OAASP,EAAIkG,OAAOQ,gBAAgB,aAAa1G,EAAI6C,QAAQ6D,gBAAgB,WAAW1G,EAAI+C,OAAO2D,gBAAgB,YAAY1G,EAAI2G,wBAAwB,MAAQ3G,EAAIgB,YAAchB,EAAIgB,YAAYqF,YAAc,MAAQrG,EAAIoD,YAAY1B,IAAI1B,EAAIgB,YAAYsF,cAAcC,KAAO,IAAIxE,GAAG,CAAC,OAAS/B,EAAI4G,sBAAsB,aAAe5G,EAAIiF,WAAW,QAAUjF,EAAI6G,sBAAsBzG,EAAG,qBAAqB,CAACG,MAAM,CAAC,OAASP,EAAIkG,OAAOY,YAAY,aAAa9G,EAAI6C,QAAQiE,YAAY,WAAW9G,EAAI+C,OAAO+D,YAAY,kBAAkB9G,EAAI+G,cAAc,KAAO/G,EAAIwE,aAAazC,GAAG,CAAC,QAAU/B,EAAIgH,uBAAuB,OAAShH,EAAIiH,uBAAuB7G,EAAG,eAAe,CAACG,MAAM,CAAC,OAASP,EAAIkG,OAAOgB,cAAc,aAAalH,EAAI6C,QAAQqE,cAAc,WAAWlH,EAAI+C,OAAOmE,cAAc,KAAOlH,EAAIoB,GAAG,wBAAwB,aAAapB,EAAIoB,GAAG,+BAA+BW,GAAG,CAAC,QAAU/B,EAAImH,yBAAyB,OAASnH,EAAIoH,yBAAyBhH,EAAG,eAAe,CAACG,MAAM,CAAC,OAASP,EAAIkG,OAAOmB,mBAAmB,aAAarH,EAAI6C,QAAQwE,mBAAmB,WAAWrH,EAAI+C,OAAOsE,mBAAmB,KAAOrH,EAAIoB,GAAG,wBAAwB,aAAapB,EAAIoB,GAAG,+BAA+BW,GAAG,CAAC,OAAS/B,EAAIsH,4BAA4B,QAAUtH,EAAIuH,6BAA6B,MACzvEC,EAAkB,G,i+CCiUtB,OACEjB,KAAM,OACNkB,OAAQ,CAACC,EAAX,MACEC,WAAY,CACVC,WAAJ,OACIC,gBAAJ,OACIC,eAAJ,OACIC,QAAJ,OACIC,YAAJ,OACIC,iBAAJ,OACIC,gBAAJ,OACIC,UAAJ,OACIC,aAAJ,OACIC,UAAJ,OACIC,aAAJ,OACIC,cAAJ,OACIC,QAAJ,OACIC,gBAAJ,OACIC,aAAJ,OACIC,cAAJ,QAGEC,KAtBF,WAuBI,MAAO,CACLlE,aAAc,GACdG,YAAa,EACbgE,YAAa,aACbC,YAAa,CACXC,WAAW,EACXC,SAAS,GAEX9C,OAAQ,CACNC,YAAY,EACZO,iBAAiB,EACjBW,oBAAoB,EACpB4B,YAAY,EACZ/B,eAAe,EACfJ,aAAa,GAEfjE,QAAS,CACPuB,YAAY,EACZ+B,YAAY,EACZO,iBAAiB,EACjB5D,YAAY,EACZmG,YAAY,EACZ/B,eAAe,EACfJ,aAAa,GAEf/D,OAAQ,CACNqB,YAAY,EACZC,sBAAsB,EACtB8B,YAAY,EACZO,iBAAiB,EACjB5D,YAAY,EACZmG,YAAY,EACZ/B,eAAe,EACfJ,aAAa,GAEfV,mBAAoB,KACpBO,wBAAyB,KACzB3F,YAAa,KACbqE,oBAAqB,GACrBzE,oBAAqB,GACrBmG,cAAe,KACfjF,cAAc,EACdS,kBAAmB,OAIvB2G,QArEF,WAsEIjJ,KAAKkJ,qBACLlJ,KAAKmJ,gBAGPC,QA1EF,WA0EA,WACIpJ,KAAKqJ,QACLrJ,KAAKsJ,WAAU,WACT,EAAV,wBACQ,EAAR,oCACQC,OAAOC,SAAS,EAAG,QAKzBC,cApFF,WAqFI,GAAIzJ,KAAK0J,MAAM,eAAgB,CAC7B,IAAN,4CACMC,EAAN,2CAIEC,SAAU,EAAZ,KACA,gBACA,iBACA,oBACA,iBACA,kBACA,kBACA,kBACA,iBACA,qBACA,sBACA,0BACA,sBACA,uBACA,kBACA,WACA,YACA,gBACA,QACA,qBACA,aACA,2BACA,UACA,cACA,UAxBA,IA2BI3H,eA3BJ,WA4BM,OAAOjC,KAAKW,oBAAoBkJ,KAAI,SAA1C,GACQ,MAAO,CACLC,MAAO,IAAjB,mBACU3H,MAAO4H,EAAQtJ,QAKrBuJ,uBApCJ,WAqCM,OACN,2BACA,kBACA,yBACA,iEACA,wCAII3F,QA9CJ,WA+CM,MAA0B,QAAnBrE,KAAKiK,WAGdA,UAlDJ,WAmDM,OAAOjK,KAAKiD,eAAiBjD,KAAKiD,eAAegH,UAAY,IAG/DjH,iBAtDJ,WAuDM,OAAOhD,KAAKiD,eAAiBjD,KAAKiD,eAAexC,GAAK,IAGxDwC,eA1DJ,WA2DM,GAAIjD,KAAKwC,WAAY,CACnB,IAAR,8BACA,+BAMQ,OALIxC,KAAKsC,oBACPW,EAAiBjD,KAAKW,oBAAoBuJ,MAAK,SAAzD,GACY,OAAOH,EAAQtJ,KAAO0J,MAGnBlH,EAEP,OAAO,MAIX0B,WAzEJ,WA0EM,OAAO3E,KAAKoK,cAAc3I,IAAIzB,KAAKe,YAAYsJ,YAAYC,KAAO,MAGpEzF,gBA7EJ,WA8EM,OAAO7E,KAAKiD,eAAiBjD,KAAKiD,eAAesH,SAAW,GAG9DC,oBAjFJ,WAiFA,WACM,OACN,2BACA,0BACA,iCACA,YAAQ,OAAR,kBAKIC,eA3FJ,WA4FM,IAAN,gBAEM,OADIzK,KAAKe,cAAa2J,EAAS1K,KAAKe,YAAY4J,iBACzC,CACL,cAAe,aAAvB,YAIIC,eAnGJ,WAoGM,OAAO5K,KAAK6K,SAAS7K,KAAKe,YAAa,gBAGzCyB,WAvGJ,WAwGM,OAAOxC,KAAKW,qBAAuBX,KAAKW,oBAAoBC,OAAS,GAGvEE,eA3GJ,WA4GM,GAAId,KAAKe,YAAa,CACpB,IAAR,sBACA,uBACA,8BACQ,OAAO,OAAf,OAAe,CAAf,oBAEQ,MAAO,CACLuF,KAAM,qBAKZhD,iBAxHJ,WAyHM,OAAItD,KAAKW,oBACAX,KAAKW,oBAAoBmK,MAAM,EAAG,GAElC,IAIXC,WAhIJ,WAgIA,WACA,wCACQ,OAAOhI,EAAOtC,KAAO,EAA7B,yBAEM,OAAIsC,EACK/C,KAAKgL,eAELhL,KAAKiL,iBAIhBC,eA3IJ,WA2IA,WACM,IAAIlL,KAAKe,YA0CP,MAAO,CACLuF,KAAM,oBA3ChB,iBACA,iCACA,sCACA,yCAEA,KAEA,MACA,MACA,yBAGA,WACA,UACA,oBACA,sBACA,4BACA,uBACA,WACA,2BAMA,mBAGA,QACA,IACA,MAEA,GADA,sBACA,EACA,eAEA,MAKA,6BAxCA,qCAgDI6E,WA5LJ,WA4LA,WACM,IAAInL,KAAKe,YA2CP,MAAO,CACLuF,KAAM,oBA5ChB,iBACA,iCACA,KACA,sCACA,yCAGA,MACA,yBACA,KAGA,WACA,UACA,oBACA,sBACA,4BACA,uBACA,WACA,2BAMA,mBAGA,QACA,IACA,yBAGA,GAFA,IAEA,EACA,eAEA,MAKA,6BAzCA,qCAiDItF,MA9OJ,WA+OM,GAAIhB,KAAKe,YAAa,CACpB,IAAR,oCACA,EACA,gEAOQ,OANIf,KAAKoL,UAAqB,SAATC,IACnBC,EAAaA,EACvB,WACA,UACA,WAEe,GAAf,UAEQ,MAAO,cAIXC,YA/PJ,WAgQM,GAAIvL,KAAKe,YAAa,CACpB,IAAR,kCACQ,MAAO,GAAf,mCAEQ,MAAO,cAIXyK,WAxQJ,WAyQM,GAAIxL,KAAKe,YAAa,CACpB,IAAR,sDACQ,OAAOf,KAAKmB,GAAG,mBAAoB,CACjCmF,KAAM,GAAhB,4DAGQ,MAAO,IAIX1E,WAnRJ,WAmRA,WACM,QAAI5B,KAAKe,aACAf,KAAKe,YAAYK,UAAUqK,MAAK,SAA/C,GACU,OAAOC,IAAe,EAAhC,YAOInL,gBA7RJ,WA8RM,OAAIP,KAAKe,YACAf,KAAKmD,YAAY1B,IAAIzB,KAAKe,YAAYsF,cAEtC,MAIX9B,YArSJ,WAqSA,WACM,OAAOvE,KAAKQ,kBAAkBmL,KAAK9B,KAAI,SAA7C,iCAGIpE,YAzSJ,WA0SM,OAAOzF,KAAKoF,oBAAoBwG,QAAO,SAA7C,gCAIEC,QAAS,EAAX,KACA,gBACA,aACA,oBACA,yBACA,cACA,yBACA,uBACA,qBACA,aACA,oBACA,oBACA,kBACA,eACA,WACA,YACA,aACA,0BACA,mBACA,qBACA,iBACA,iBACA,aACA,kBACA,oBACA,sBACA,6BA1BA,IA6BI1C,aA7BJ,WA6BA,WACA,wBACM,GAAK2C,EAsCX,CACQ,IAAR,4BACQ9L,KAAKe,YAAc+K,EACnB9L,KAAK+L,iBAAiB,CAA9B,gCACA,iBAAU,OAAV,oCACA,kBACU,EAAV,eACU,EAAV,WAEA,mBACU,QAAV,SACU,EAAV,+BAhDQ/L,KAAK6I,YAAc,CAA3B,yBACQ7I,KAAKgM,SAAS,CAAtB,mCACA,kBACU,IAAV,cACY,EAAZ,aACA,SAGA,8BACY,EAAZ,YACc,EAAd,eACA,iBACA,YACkB,EAAlB,gCAEgB,EAAhB,gBAEA,WAGU,GAAV,WACY,EAAZ,cACY,EAAZ,kBACc,OAAd,KACc,SAAd,cAEA,iBAAc,OAAd,sBAAgB,OAAhB,UACA,kBACc,EAAd,eACc,EAAd,QACc,EAAd,aAAgB,WAAhB,EAAgB,SAAhB,MACA,mBACc,QAAd,SACc,EAAd,aAAgB,WAAhB,EAAgB,SAAhB,aAoBIC,eArFJ,WAsFM,OAAOjM,KAAKkM,QAAQzK,IAAIzB,KAAKmM,MAAMC,OAAOC,UAG5CC,kBAzFJ,WA0FM,GAAItM,KAAKmM,MAAMC,OAAOG,WACpB,OAAOvM,KAAKwM,eACpB,0BACA,+BAKIC,uBAlGJ,WAmGM,OAAOzM,KAAK0M,gBAAgB1M,KAAKmM,MAAMC,OAAOC,UAGhDM,uBAtGJ,WAuGM,OAAO3M,KAAK4M,gBAAgB5M,KAAKmM,MAAMC,OAAOC,UAGhDlI,WA1GJ,SA0GA,oBACA,GACQ0I,OAAQ7M,KAAKe,YAAYN,GACzBqM,aAAcA,EACdzH,QAASA,EACT0H,UAAR,EACQC,WAAR,GAEA,gBACUhN,KAAKyE,aAAa7D,OAAS,IAAGqM,EAAS,0BAC3CjN,KAAK4C,QAAQuB,YAAa,EAC1BnE,KAAK8C,OAAOqB,YAAa,EACzBnE,KAAK8C,OAAOsB,sBAAuB,EACnCpE,KAAKkN,OAAOC,SAASF,EAAQb,GACnC,iBACQ,EAAR,+CACQ,EAAR,eACQ,EAAR,mCACQ,EAAR,QACQ,EAAR,gBACQ,EAAR,yBAEA,mBACQ,QAAR,SACQ,EAAR,qBACQ,EAAR,sBACQ,IAAR,EACA,YACA,yBACA,4CACQ,EAAR,qBACQ,EAAR,kCAII/C,MA7IJ,WA6IA,WAIM,GAHArJ,KAAKoF,oBAAsBpF,KAAKyM,yBAChCzM,KAAKW,oBAAsBX,KAAK2M,yBAChC3M,KAAKe,YAAcf,KAAKiM,iBACpBjM,KAAKe,YAAa,CACpB,IAAR,2CACYqM,IAAOpN,KAAK0J,MAAM,eAAe2D,KAAOD,GAE9CE,YAAW,WACL,EAAZ,2BACU,EAAV,gDAEA,MAGItI,WA5JJ,SA4JA,GACMhF,KAAKuN,wBAAwBC,GAC7BxN,KAAKyE,aAAezE,KAAKyE,aAAagJ,OAAOD,IAG/CvI,kBAjKJ,WAkKMjF,KAAKyE,aAAe,IAGtBiJ,cArKJ,SAqKA,GACM,OAAOrI,EAAQ0E,SAAW1E,EAAQ0E,QAAQtJ,KAAOT,KAAKgD,kBAGxD4D,mBAzKJ,WAyKA,WACA,2BACA,uBACM5G,KAAK8C,OAAO2D,iBAAkB,EAC9BzG,KAAK4C,QAAQ6D,iBAAkB,EAC/B,IAAN,kDACQ,OAAOpB,EAAQnC,SAASyK,WAAU,SAA1C,+BAEM3N,KAAK4N,uBAAuB,CAC1Bf,OAAQ7M,KAAKe,YAAYN,GACzB0J,UAAWnK,KAAKiD,eAAexC,GAC/BoN,UAAWxI,EAAQ5E,KAE3B,iBACQ,EAAR,2BACQ,EAAR,0BACQ,EAAR,yCACQ,YAAR,WACU,EAAV,wCACA,MAEA,mBACQ,QAAR,SACQ,EAAR,0BACQ,EAAR,+BAIIqN,aArMJ,WAqMA,iEACA,2BACA,uBACM9N,KAAKoF,oBAAsBpF,KAAKyM,yBAChCzM,KAAKW,oBAAsBX,KAAK2M,yBAC5B5C,GAAWgE,GACb/N,KAAKgO,QAAQC,KAAKjO,KAAKkO,YAAYnE,EAAQtJ,MAI/CoC,WA/MJ,WA+MA,WACM7C,KAAK4C,QAAQC,YAAa,EAC1B7C,KAAK8C,OAAOD,YAAa,EACzB7C,KAAKkN,OAAOC,SAAS,aAAc,CACjCN,OAAQ7M,KAAKe,YAAYN,GACzB0N,SAAUnO,KAAKe,YAAYgC,OAAOtC,GAClC0J,UAAWnK,KAAKgD,mBAExB,iBACQ,EAAR,yBAEA,mBACQ,QAAR,SACQ,EAAR,yBAII+D,uBAhOJ,SAgOA,cACM/G,KAAK4C,QAAQiE,aAAc,EAC3B7G,KAAK8C,OAAO+D,aAAc,EAC1B7G,KAAKoO,gBAAgB,CACnBvB,OAAQ7M,KAAKe,YAAYN,GACzB4E,QAAR,IAEA,iBACQ,EAAR,uBACQ,EAAR,yBAEA,mBACQ,QAAR,SACQ,EAAR,0BAIIU,YAjPJ,SAiPA,KACM/F,KAAKoO,gBAAgB,CACnBvB,OAAQ7M,KAAKe,YAAYN,GACzB4E,QAAR,EACQ0H,UAAR,KAII7F,yBAzPJ,WAyPA,WACMlH,KAAK4C,QAAQqE,eAAgB,EAC7BjH,KAAK8C,OAAOmE,eAAgB,EAC5B,IAAN,wBAEMjH,KAAKqO,kBAAkB,CACrBxB,OAAQ7M,KAAKe,YAAYN,GACzBoN,UAAR,IAEA,iBACQ,EAAR,yBACQ,EAAR,QACA,+BACQ,EAAR,2BAEA,mBACQ,QAAR,SACQ,EAAR,yBACQ,EAAR,4BAIIvG,yBA/QJ,WA+QA,WACMtH,KAAK4C,QAAQwE,oBAAqB,EAClCpH,KAAK8C,OAAOsE,oBAAqB,EACjC,IAAN,wBACA,kDACQ,OAAO/B,EAAQnC,SAASyK,WAAU,SAA1C,4BAGM3N,KAAK0J,MAAM,kBAAkB4E,eAC7BtO,KAAKuO,kBAAkB,CACrB1B,OAAQ7M,KAAKe,YAAYN,GACzBoN,UAAWxI,EAAQ5E,GACnB0J,UAAWnK,KAAKwO,wBAExB,iBACQ,EAAR,8BACQ,EAAR,eACQ,EAAR,iCAEA,mBACQ,QAAR,SACQ,EAAR,8BACQ,EAAR,iCAIIC,eAzSJ,SAySA,GACM,IAAN,YACA,eACA,oBACA,aACA,cACA,0CAGA,kBACA,IAEA,uBACA,uBAEA,0BAEQzO,KAAKkN,OAAOwB,OAAO,kBAAmB,CACpC3E,QAAS,CACPtJ,GAAI0J,EACJI,SAAZ,EACYN,UAAWA,GAEb4C,OAAV,EACUgB,UAAV,EACUxI,QAAV,IAEQrF,KAAK8N,iBAIT/L,gBAxUJ,WAyUU/B,KAAKe,cAAgBf,KAAK4B,aACxB5B,KAAK6B,cACP7B,KAAK2O,oBAAoB3O,KAAKe,YAAYN,IAC1CT,KAAK6B,cAAe,IAEpB7B,KAAK4O,gBAAgB5O,KAAKe,YAAYN,IACtCT,KAAK6B,cAAe,KAK1BgJ,SApVJ,SAoVA,uEACWiB,GAGHA,EAAKzB,WAAarK,KAAKe,YAAYsJ,WACnCyB,EAAK+C,WAAa7O,KAAKe,YAAY8N,YAHnC/C,EAAO9L,KAAKe,YAMd,IAAN,4BAeM,OAdI+K,IACFK,EAAQ,CACN7F,KAAMwI,EACN1C,OAAQ,CACN2C,cAAejD,EAAKzB,WACpBgC,QAASP,EAAKrL,KAIdT,KAAKoL,UAAYpL,KAAKgP,iBACxB7C,EAAM7F,KAAO,WAAvB,UACU6F,EAAMC,OAAOyC,WAAa/C,EAAK+C,YAAc7O,KAAKgP,eAAevO,KAG9D0L,GAGT+B,YA9WJ,SA8WA,GACM,IAAN,iDAKM,OAHI/B,EAAMC,SACRD,EAAMC,OAAO6C,WAAa9E,GAErBgC,GAGT5I,oBAvXJ,YAuXA,wDACA,sBACMvD,KAAKkP,wBAAwB,CAC3BrC,OAAR,EAAQ,QAAR,EAAQ,UAAR,EAAQ,UAAR,EAAQ,QAAR,KAIIrJ,yBA9XJ,WA+XMxD,KAAKiG,OAAOQ,iBAAkB,GAGhChD,4BAlYJ,SAkYA,GACMzD,KAAKmP,4BAA4BpF,IAGnCpD,sBAtYJ,WAuYM3G,KAAKiG,OAAOQ,iBAAkB,GAGhC0I,4BA1YJ,SA0YA,GACMnP,KAAKwO,sBAAwBzE,EAAQtJ,GACrCT,KAAKiG,OAAOmB,oBAAqB,GAGnCC,4BA/YJ,WAgZMrH,KAAKiG,OAAOmB,oBAAqB,GAGnCtC,oBAnZJ,WAoZM9E,KAAKiG,OAAOC,YAAa,GAG3BM,qBAvZJ,WAwZMxG,KAAKiG,OAAOC,YAAa,GAG3BnB,mBA3ZJ,SA2ZA,GACM/E,KAAK0J,MAAM,eAAe0F,SAAS/J,IAGrCO,aA/ZJ,SA+ZA,GACM5F,KAAKqP,WAAWhK,IAGlBQ,cAnaJ,SAmaA,GACM7F,KAAK8G,cAAgBzB,EACrBrF,KAAKiG,OAAOY,aAAc,GAG5Bf,gBAxaJ,SAwaA,GACM9F,KAAK8G,cAAgBzB,EACrBrF,KAAKiG,OAAOgB,eAAgB,GAG9BD,oBA7aJ,SA6aA,GACMhH,KAAKiG,OAAOY,aAAc,GAG5BM,sBAjbJ,SAibA,GACMnH,KAAKiG,OAAOgB,eAAgB,GAG9BtD,cArbJ,SAqbA,GACM3D,KAAK4E,YAAc0K,GAGrBnK,qBAzbJ,SAybA,GACMnF,KAAKyE,aAAezE,KAAKyE,aAAamH,QAAO,SAAnD,oBAGIlI,qBA7bJ,SA6bA,GACM1D,KAAKgO,QAAQC,KAAKjO,KAAKkO,YAAYnE,EAAQtJ,MAG7C8O,oBAjcJ,SAicA,KACM,GAAIvP,KAAKe,YAAa,CACpB,IAAR,iCACA,YAAU,OAAV,uBAEA,kCACYsE,GAAWf,IACTtE,KAAKsE,KAAK7D,KAAO6D,EAAK7D,IAGpC,YACA,mCAGA,aACA,oCAGcT,KAAKkN,OAAOwB,OAAO,cAAe,CAAhD,mBAGY1O,KAAKkN,OAAOwB,OAAO,cAAe,CAA9C,sBAMIhJ,eA5dJ,SA4dA,GACM,IAAN,2BACA,OACM,OACN,gBACA,0CAIIM,gBAreJ,YAueA,WADA,EACA,EADA,mBACA,EADA,QACA,EADA,QACA,EADA,aACA,EADA,OAEMhG,KAAK0D,qBAAqB1D,KAAKW,oBAAoBuJ,MACzD,YAAQ,OAAR,6BAEMoD,YAAW,WACT,EAAR,2CACQ,EAAR,kCACA,KAGI,2BAjfJ,WAifA,0HACA,+CADA,SAGA,uDAHA,cAEA,EAFA,OAIA,iDACA,+CALA,kBAMA,GANA,8CASIkC,wBA1fJ,WA2fM,GAAIxP,KAAKe,YAAa,CACpB,GAAIf,KAAKyC,sBAAwBzC,KAAKyP,oBACpC,OAAO,EACjB,iCACU,GAAqC,IAAjCzP,KAAKsE,KAAKoL,YAAY9O,OACxB,OAAO,EAEP,IAAZ,sDACY,QAAS+O,EAASC,eAAiB5P,KAAKsE,KAAKoL,YAAYG,SACrE,mBAIM,OAAO,KAIXC,MAAO,CACLC,OADJ,WAEU/P,KAAK+P,OAAO3D,OAAOC,UAAYrM,KAAKe,YAAYN,IAClDT,KAAKmJ,gBAIT7G,kBAPJ,WAQUtC,KAAKe,aACPf,KAAKgO,QAAQC,KAAKjO,KAAKkO,YAAYlO,KAAKsC,sBAK9C0N,OAAQ,CACNC,OAAQ,CACN,wBADN,SACA,GACQjQ,KAAKyO,eAAeyB,IAGtB,sBALN,SAKA,GACQlQ,KAAKuP,oBAAoBW,EAAW,QAGtC,wBATN,SASA,GACQlQ,KAAKuP,oBAAoBW,EAAW,UAGtC,sBAbN,SAaA,GACQ,IAAR,iCACA,YAAU,OACV,YACA,qBACA,wCAGY7K,GAAWrF,KAAKe,aAClBf,KAAKmQ,eAAe,CAClBtD,OAAQ7M,KAAKe,YAAYN,GACzB0J,UAAW+F,EAAUrP,kBACjC,kBACYwE,EAAQnC,SAAS,GAAGkN,kBAAoBrG,EAAQqG,sBAKtD,cA/BN,SA+BA,cACQ9C,YAAW,WAEnB,oCACA,+BAEY,EAAZ,+CACY,EAAZ,kDAEA,MAGM,gBA3CN,SA2CA,GACQ,GAAItN,KAAKe,YAAa,CACpB,IAAV,iCACA,YAAY,OAAZ,uBAEU,GAAIsE,EAAS,CACNA,EAAQgL,UAAShL,EAAQgL,QAAU,IACxC,IAAZ,kBACA,YAAc,OAAd,qBAEiBC,GACHtQ,KAAKuQ,eAAe,CAClB1D,OAAQ7M,KAAKe,YAAYN,GACzBoN,UAAWqC,EAAU3D,aAErC,kBACgB,EAAhB,qBAEA,wBAMM,uBAnEN,SAmEA,GACQ,GAAIvM,KAAKe,YAAa,CACpB,IAAV,iCACA,YAAY,OAAZ,uBAEcsE,IACGA,EAAQgL,UAAShL,EAAQgL,QAAU,IACxCrQ,KAAKkN,OAAOwB,OAAO,4BAA6B,CAC9CrJ,QAAd,EACciL,MAAO,CAArB,oBAMM,iCAlFN,SAkFA,cACA,+BACA,+BACA,kBACA,cAEYE,GACFxQ,KAAKmQ,eAAe,CAClBhG,UAAWsG,EAAcxN,eAAexC,GACxCoM,OAAQ4D,EAAcxN,eAAeoJ,UACjD,kBACiBoE,EAAcC,WACjB,EAAd,+CACc,EAAd,sBACgBD,EAAcE,oBACdF,EAAcG,2BAS5BC,SA9gCF,WA+gCI,IAAJ,4BACI,GAAI7Q,KAAKe,YAAa,CACpB,IAAN,EACA,yDACMC,EAAQ,GAAd,8CAEI,MAAO,CAAX,WCh2C+d,I,wBCQ3d8P,EAAY,eACd,EACAhR,EACAyH,GACA,EACA,KACA,WACA,MAIa,aAAAuJ,E","file":"js/chunk-2c268ebb.a0a76990.js","sourcesContent":["export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=1be7c182&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fixed-page columns\"},[_c('div',{staticClass:\"page column main-column\"},[_c('div',{staticClass:\"page-header pa1 mb0\"},[(_vm.currentTask)?_c('div',{staticClass:\"flexrow header-title\"},[(_vm.currentTaskType)?_c('task-type-name',{staticClass:\"flexrow-item task-type block\",attrs:{\"task-type\":_vm.currentTaskType,\"production-id\":_vm.currentProduction.id}}):_vm._e(),_c('span',{staticClass:\"flexrow-item ml2\"},[_c('entity-thumbnail',{staticClass:\"entity-thumbnail\",attrs:{\"entity\":_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0\n              ? { preview_file_id: _vm.currentTaskPreviews[0].id }\n              : { },\"empty-width\":100,\"empty-height\":60,\"width\":100,\"with-link\":false}})],1),_c('div',{staticClass:\"title flexrow-item\"},[_c('router-link',{attrs:{\"to\":_vm.taskEntityPath}},[_c('page-title',{attrs:{\"text\":_vm.currentTask ? _vm.title : 'Loading...',\"bold\":\"\"}})],1)],1),_c('div',{staticClass:\"flexrow-item flexrow block\"},[_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.current_status'))+\" \")]),(_vm.currentTask)?_c('validation-tag',{staticClass:\"is-medium flexrow-item\",attrs:{\"task\":_vm.currentTask,\"is-static\":true}}):_vm._e(),(_vm.currentTask.assignees.length > 0)?_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.assignees'))+\": \")]):_vm._e(),_vm._l((_vm.currentTask.assignees),function(personId){return _c('span',{key:personId,staticClass:\"flexrow-item avatar-wrapper\"},[_c('people-avatar',{key:personId,staticClass:\"flexrow-item\",attrs:{\"person\":_vm.personMap.get(personId),\"size\":30,\"font-size\":16}})],1)}),_c('div',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.priority'))+\": \"+_vm._s(_vm.formatPriority(_vm.currentTask.priority))+\" \")]),(!_vm.isAssigned)?_c('subscribe-button',{staticClass:\"flexrow-item action-button\",attrs:{\"subscribed\":_vm.isAssigned || _vm.isSubscribed},on:{\"click\":_vm.toggleSubscribe}}):_vm._e()],2)],1):_vm._e()]),_c('div',{ref:\"task-columns\",staticClass:\"task-columns\"},[_c('div',{staticClass:\"task-column preview-column\"},[_c('div',{staticClass:\"preview-column-content block\"},[_c('div',{staticClass:\"flexrow preview-header\"},[(_vm.isPreviews)?_c('div',{staticClass:\"flexrow-item\"},[_c('combobox-styled',{staticClass:\"preview-combo flexrow-item\",attrs:{\"options\":_vm.previewOptions},model:{value:(_vm.selectedPreviewId),callback:function ($$v) {_vm.selectedPreviewId=$$v},expression:\"selectedPreviewId\"}})],1):_c('div',[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_preview'))+\" \")])]),(_vm.isPreviewButtonVisible)?_c('div',{staticClass:\"set-main-preview flexrow-item flexrow pull-right\"},[(_vm.isPreviews && _vm.isCurrentUserManager)?_c('button',{class:{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': _vm.loading.setPreview\n                },on:{\"click\":_vm.setPreview}},[_c('image-icon',{staticClass:\"icon\"}),_c('span',{staticClass:\"text\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview'))+\" \")])],1):_vm._e(),(_vm.errors.setPreview)?_c('span',{staticClass:\"error flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview_error'))+\" \")]):_vm._e()]):_vm._e(),(_vm.currentTask && _vm.currentTask.entity && _vm.currentTask.entity.preview_file_id === _vm.currentPreviewId)?_c('div',{staticClass:\"set-main-preview flexrow-item pull-right\"},[_c('em',[_vm._v(_vm._s(_vm.$t('tasks.set_preview_done')))])]):_vm._e()]),_c('div',{staticClass:\"preview-area mt1\"},[(_vm.isPreviews)?_c('div',[(_vm.currentPreview)?_c('preview-player',{ref:\"preview-player\",attrs:{\"previews\":_vm.currentPreview.previews,\"task-type-map\":_vm.taskTypeMap,\"entity-preview-files\":_vm.taskEntityPreviews,\"read-only\":_vm.isCurrentUserArtist,\"last-preview-files\":_vm.lastFivePreviews,\"task\":_vm.currentTask,\"extra-wide\":true},on:{\"annotation-changed\":_vm.onAnnotationChanged,\"add-extra-preview\":_vm.onAddExtraPreviewClicked,\"remove-extra-preview\":_vm.onRemoveExtraPreviewClicked,\"change-current-preview\":_vm.changeCurrentPreview,\"time-updated\":_vm.onTimeUpdated}}):_vm._e()],1):_vm._e()])]),_c('div',{staticClass:\"flexrow-item block mt1 mr0 info-block\"},[_c('page-subtitle',{attrs:{\"text\":_vm.$t('main.info')}}),_c('div',{staticClass:\"table-body mt1\"},[(_vm.currentTask)?_c('table',{staticClass:\"datatable no-header\"},[_c('tbody',{staticClass:\"table-body\"},[_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.estimation')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.estimation))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.duration')))]),_c('td',[_vm._v(_vm._s(_vm.formatDuration(_vm.currentTask.duration)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.retake_count')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.retake_count))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.start_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.start_date)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.due_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.due_date)))])])])]):_vm._e()])],1),_c('div',{staticClass:\"pa2\"})]),_c('div',{staticClass:\"task-column comments-column\"},[(_vm.currentTask)?_c('div',[_c('div',[(_vm.isCommentingAllowed)?_c('add-comment',{ref:\"add-comment\",attrs:{\"is-error\":_vm.errors.addComment,\"is-max-retakes-error\":_vm.errors.addCommentMaxRetakes,\"is-loading\":_vm.loading.addComment,\"is-movie\":_vm.isMovie,\"user\":_vm.user,\"team\":_vm.currentTeam,\"task\":_vm.currentTask,\"task-status\":_vm.taskStatusForCurrentUser,\"preview-forms\":_vm.previewForms,\"fps\":parseInt(_vm.currentFps),\"time\":_vm.currentTime,\"revision\":_vm.currentRevision},on:{\"add-comment\":_vm.addComment,\"add-preview\":_vm.onAddPreviewClicked,\"duplicate-comment\":_vm.onDuplicateComment,\"file-drop\":_vm.selectFile,\"clear-files\":_vm.clearPreviewFiles,\"annotation-snapshots-requested\":_vm.extractAnnotationSnapshots,\"remove-preview\":_vm.onPreviewFormRemoved}}):_vm._e(),(_vm.currentTaskComments && _vm.currentTaskComments.length > 0)?_c('div',{staticClass:\"comments\"},_vm._l((_vm.currentTaskComments),function(comment,index){return _c('comment',{key:comment.id,attrs:{\"comment\":comment,\"task\":_vm.currentTask,\"highlighted\":false,\"current-user\":_vm.user,\"editable\":(\n                  comment.person && _vm.user.id === comment.person.id ||\n                  _vm.isCurrentUserAdmin\n                ),\"is-first\":index === 0,\"is-last\":index === _vm.pinnedCount,\"is-change\":_vm.isStatusChange(index)},on:{\"ack-comment\":_vm.ackComment,\"pin-comment\":_vm.onPinComment,\"edit-comment\":_vm.onEditComment,\"delete-comment\":_vm.onDeleteComment,\"checklist-updated\":_vm.saveComment,\"time-code-clicked\":_vm.timeCodeClicked}})}),1):_c('div',{staticClass:\"no-comment\"},[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_comment'))+\" \")])])],1)]):_c('div',{staticClass:\"has-text-centered\"},[_c('spinner')],1)])]),_c('add-preview-modal',{ref:\"add-preview-modal\",attrs:{\"active\":_vm.modals.addPreview,\"is-loading\":_vm.loading.addPreview,\"is-error\":_vm.errors.addPreview,\"form-data\":_vm.addPreviewFormData,\"title\":_vm.currentTask ? _vm.currentTask.entity_name + ' / ' + _vm.taskTypeMap.get(_vm.currentTask.task_type_id).name : ''},on:{\"cancel\":function($event){_vm.modals.addPreview = false},\"fileselected\":_vm.selectFile,\"confirm\":_vm.closeAddPreviewModal}}),_c('add-preview-modal',{ref:\"add-extra-preview-modal\",attrs:{\"active\":_vm.modals.addExtraPreview,\"is-loading\":_vm.loading.addExtraPreview,\"is-error\":_vm.errors.addExtraPreview,\"form-data\":_vm.addExtraPreviewFormData,\"title\":_vm.currentTask ? _vm.currentTask.entity_name + ' / ' + _vm.taskTypeMap.get(_vm.currentTask.task_type_id).name : ''},on:{\"cancel\":_vm.hideExtraPreviewModal,\"fileselected\":_vm.selectFile,\"confirm\":_vm.createExtraPreview}}),_c('edit-comment-modal',{attrs:{\"active\":_vm.modals.editComment,\"is-loading\":_vm.loading.editComment,\"is-error\":_vm.errors.editComment,\"comment-to-edit\":_vm.commentToEdit,\"team\":_vm.currentTeam},on:{\"confirm\":_vm.confirmEditTaskComment,\"cancel\":_vm.onCancelEditComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteComment,\"is-loading\":_vm.loading.deleteComment,\"is-error\":_vm.errors.deleteComment,\"text\":_vm.$t('tasks.delete_comment'),\"error-text\":_vm.$t('tasks.delete_comment_error')},on:{\"confirm\":_vm.confirmDeleteTaskComment,\"cancel\":_vm.onCancelDeleteComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteExtraPreview,\"is-loading\":_vm.loading.deleteExtraPreview,\"is-error\":_vm.errors.deleteExtraPreview,\"text\":_vm.$t('tasks.delete_preview'),\"error-text\":_vm.$t('tasks.delete_preview_error')},on:{\"cancel\":_vm.hideRemoveExtraPreviewModal,\"confirm\":_vm.confirmDeleteTaskPreview}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"fixed-page columns\">\n  <div class=\"page column main-column\">\n    <div class=\"page-header pa1 mb0\">\n      <div\n        class=\"flexrow header-title\"\n        v-if=\"currentTask\"\n      >\n        <task-type-name\n          class=\"flexrow-item task-type block\"\n          :task-type=\"currentTaskType\"\n          :production-id=\"currentProduction.id\"\n          v-if=\"currentTaskType\"\n        />\n\n        <span\n          class=\"flexrow-item ml2\"\n        >\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentTaskPreviews && currentTaskPreviews.length > 0\n              ? { preview_file_id: currentTaskPreviews[0].id }\n              : { }\"\n            :empty-width=\"100\"\n            :empty-height=\"60\"\n            :width=\"100\"\n            :with-link=\"false\"\n          />\n        </span>\n\n        <div class=\"title flexrow-item\">\n          <router-link :to=\"taskEntityPath\">\n            <page-title :text=\"currentTask ? title : 'Loading...'\" bold />\n          </router-link>\n        </div>\n\n        <div class=\"flexrow-item flexrow block\">\n          <span class=\"flexrow-item\">\n            {{ $t('tasks.current_status') }}\n          </span>\n          <validation-tag\n            class=\"is-medium flexrow-item\"\n            :task=\"currentTask\"\n            :is-static=\"true\"\n            v-if=\"currentTask\"\n          />\n          <span\n            class=\"flexrow-item\"\n            v-if=\"currentTask.assignees.length > 0\"\n          >\n            {{ $t('tasks.fields.assignees') }}:\n          </span>\n          <span\n            class=\"flexrow-item avatar-wrapper\"\n            :key=\"personId\"\n            v-for=\"personId in currentTask.assignees\"\n          >\n            <people-avatar\n              class=\"flexrow-item\"\n              :key=\"personId\"\n              :person=\"personMap.get(personId)\"\n              :size=\"30\"\n              :font-size=\"16\"\n            />\n           </span>\n           <div class=\"flexrow-item\">\n             {{ $t('tasks.fields.priority') }}:\n             {{ formatPriority(currentTask.priority) }}\n           </div>\n         <subscribe-button\n           class=\"flexrow-item action-button\"\n           :subscribed=\"isAssigned || isSubscribed\"\n           @click=\"toggleSubscribe\"\n           v-if=\"!isAssigned\"\n         />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"task-columns\" ref=\"task-columns\">\n      <div class=\"task-column preview-column\">\n        <div class=\"preview-column-content block\">\n          <div class=\"flexrow preview-header\">\n            <div class=\"flexrow-item\" v-if=\"isPreviews\">\n              <combobox-styled\n                class=\"preview-combo flexrow-item\"\n                :options=\"previewOptions\"\n                v-model=\"selectedPreviewId\"\n              />\n            </div>\n            <div v-else>\n              <em>\n                {{ $t('tasks.no_preview')}}\n              </em>\n            </div>\n\n            <div\n              class=\"set-main-preview flexrow-item flexrow pull-right\"\n              v-if=\"isPreviewButtonVisible\"\n            >\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': loading.setPreview\n                }\"\n                @click=\"setPreview\"\n                v-if=\"isPreviews && isCurrentUserManager\"\n              >\n                <image-icon class=\"icon\" />\n                <span class=\"text\">\n                  {{ $t('tasks.set_preview') }}\n                </span>\n              </button>\n              <span class=\"error flexrow-item\" v-if=\"errors.setPreview\">\n                {{ $t('tasks.set_preview_error') }}\n              </span>\n            </div>\n            <div\n              class=\"set-main-preview flexrow-item pull-right\"\n              v-if=\"currentTask && currentTask.entity && currentTask.entity.preview_file_id === currentPreviewId\">\n              <em>{{ $t('tasks.set_preview_done') }}</em>\n            </div>\n          </div>\n\n          <div class=\"preview-area mt1\">\n            <div\n              v-if=\"isPreviews\"\n            >\n              <preview-player\n                :previews=\"currentPreview.previews\"\n                :task-type-map=\"taskTypeMap\"\n                :entity-preview-files=\"taskEntityPreviews\"\n                :read-only=\"isCurrentUserArtist\"\n                :last-preview-files=\"lastFivePreviews\"\n                :task=\"currentTask\"\n                :extra-wide=\"true\"\n                @annotation-changed=\"onAnnotationChanged\"\n                @add-extra-preview=\"onAddExtraPreviewClicked\"\n                @remove-extra-preview=\"onRemoveExtraPreviewClicked\"\n                @change-current-preview=\"changeCurrentPreview\"\n                @time-updated=\"onTimeUpdated\"\n                ref=\"preview-player\"\n                v-if=\"currentPreview\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"flexrow-item block mt1 mr0 info-block\">\n          <page-subtitle :text=\"$t('main.info')\" />\n          <div class=\"table-body mt1\">\n            <table class=\"datatable no-header\" v-if=\"currentTask\">\n              <tbody class=\"table-body\">\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.estimation') }}</td>\n                  <td>{{ currentTask.estimation }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.duration') }}</td>\n                  <td>{{ formatDuration(currentTask.duration) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.retake_count') }}</td>\n                  <td>{{ currentTask.retake_count }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.start_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.start_date) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.due_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.due_date) }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"pa2\">\n        </div>\n      </div>\n\n      <div class=\"task-column comments-column\">\n        <div v-if=\"currentTask\">\n          <div>\n            <add-comment\n              ref=\"add-comment\"\n              :is-error=\"errors.addComment\"\n              :is-max-retakes-error=\"errors.addCommentMaxRetakes\"\n              :is-loading=\"loading.addComment\"\n              :is-movie=\"isMovie\"\n              :user=\"user\"\n              :team=\"currentTeam\"\n              :task=\"currentTask\"\n              :task-status=\"taskStatusForCurrentUser\"\n              :preview-forms=\"previewForms\"\n              :fps=\"parseInt(currentFps)\"\n              :time=\"currentTime\"\n              :revision=\"currentRevision\"\n              @add-comment=\"addComment\"\n              @add-preview=\"onAddPreviewClicked\"\n              @duplicate-comment=\"onDuplicateComment\"\n              @file-drop=\"selectFile\"\n              @clear-files=\"clearPreviewFiles\"\n              @annotation-snapshots-requested=\"extractAnnotationSnapshots\"\n              @remove-preview=\"onPreviewFormRemoved\"\n              v-if=\"isCommentingAllowed\"\n            />\n            <div\n              class=\"comments\"\n              v-if=\"currentTaskComments && currentTaskComments.length > 0\"\n            >\n              <comment\n                :comment=\"comment\"\n                :task=\"currentTask\"\n                :highlighted=\"false\"\n                :key=\"comment.id\"\n                :current-user=\"user\"\n                :editable=\"(\n                  comment.person && user.id === comment.person.id ||\n                  isCurrentUserAdmin\n                )\"\n                :is-first=\"index === 0\"\n                :is-last=\"index === pinnedCount\"\n                :is-change=\"isStatusChange(index)\"\n                @ack-comment=\"ackComment\"\n                @pin-comment=\"onPinComment\"\n                @edit-comment=\"onEditComment\"\n                @delete-comment=\"onDeleteComment\"\n                @checklist-updated=\"saveComment\"\n                @time-code-clicked=\"timeCodeClicked\"\n                v-for=\"(comment, index) in currentTaskComments\"\n              />\n            </div>\n            <div class=\"no-comment\" v-else>\n              <em>\n                {{ $t('tasks.no_comment')}}\n              </em>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"has-text-centered\" v-else>\n          <spinner />\n        </div>\n      </div>\n\n    </div>\n\n    <add-preview-modal\n      ref=\"add-preview-modal\"\n      :active=\"modals.addPreview\"\n      :is-loading=\"loading.addPreview\"\n      :is-error=\"errors.addPreview\"\n      :form-data=\"addPreviewFormData\"\n      :title=\"currentTask ? currentTask.entity_name + ' / ' + taskTypeMap.get(currentTask.task_type_id).name : ''\"\n      @cancel=\"modals.addPreview = false\"\n      @fileselected=\"selectFile\"\n      @confirm=\"closeAddPreviewModal\"\n    />\n\n    <add-preview-modal\n      ref=\"add-extra-preview-modal\"\n      :active=\"modals.addExtraPreview\"\n      :is-loading=\"loading.addExtraPreview\"\n      :is-error=\"errors.addExtraPreview\"\n      :form-data=\"addExtraPreviewFormData\"\n      :title=\"currentTask ? currentTask.entity_name + ' / ' + taskTypeMap.get(currentTask.task_type_id).name : ''\"\n      @cancel=\"hideExtraPreviewModal\"\n      @fileselected=\"selectFile\"\n      @confirm=\"createExtraPreview\"\n    />\n\n    <edit-comment-modal\n      :active=\"modals.editComment\"\n      :is-loading=\"loading.editComment\"\n      :is-error=\"errors.editComment\"\n      :comment-to-edit=\"commentToEdit\"\n      :team=\"currentTeam\"\n      @confirm=\"confirmEditTaskComment\"\n      @cancel=\"onCancelEditComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteComment\"\n      :is-loading=\"loading.deleteComment\"\n      :is-error=\"errors.deleteComment\"\n      :text=\"$t('tasks.delete_comment')\"\n      :error-text=\"$t('tasks.delete_comment_error')\"\n      @confirm=\"confirmDeleteTaskComment\"\n      @cancel=\"onCancelDeleteComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteExtraPreview\"\n      :is-loading=\"loading.deleteExtraPreview\"\n      :is-error=\"errors.deleteExtraPreview\"\n      :text=\"$t('tasks.delete_preview')\"\n      :error-text=\"$t('tasks.delete_preview_error')\"\n      @cancel=\"hideRemoveExtraPreviewModal\"\n      @confirm=\"confirmDeleteTaskPreview\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport {\n  ImageIcon\n} from 'vue-feather-icons'\n\nimport { getTaskEntityPath } from '@/lib/path'\nimport drafts from '@/lib/drafts'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport AddComment from '@/components/widgets/AddComment'\nimport AddPreviewModal from '@/components/modals/AddPreviewModal'\nimport Comment from '@/components/widgets/Comment'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled.vue'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditCommentModal from '@/components/modals/EditCommentModal'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar'\nimport Spinner from '@/components/widgets/Spinner'\nimport SubscribeButton from '@/components/widgets/SubscribeButton'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\nimport ValidationTag from '@/components/widgets/ValidationTag'\nimport PreviewPlayer from '@/components/previews/PreviewPlayer'\n\nexport default {\n  name: 'task',\n  mixins: [formatListMixin],\n  components: {\n    AddComment,\n    AddPreviewModal,\n    ComboboxStyled,\n    Comment,\n    DeleteModal,\n    EditCommentModal,\n    EntityThumbnail,\n    ImageIcon,\n    PageSubtitle,\n    PageTitle,\n    PeopleAvatar,\n    PreviewPlayer,\n    Spinner,\n    SubscribeButton,\n    TaskTypeName,\n    ValidationTag\n  },\n\n  data () {\n    return {\n      previewForms: [],\n      currentTime: 0,\n      selectedTab: 'validation',\n      taskLoading: {\n        isLoading: true,\n        isError: false\n      },\n      modals: {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      loading: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      errors: {\n        addComment: false,\n        addCommentMaxRetakes: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      addPreviewFormData: null,\n      addExtraPreviewFormData: null,\n      currentTask: null,\n      currentTaskComments: [],\n      currentTaskPreviews: [],\n      commentToEdit: null,\n      isSubscribed: false,\n      selectedPreviewId: null\n    }\n  },\n\n  created () {\n    this.clearSelectedTasks()\n    this.loadTaskData()\n  },\n\n  mounted () {\n    this.reset()\n    this.$nextTick(() => {\n      if (this.$refs['task-columns']) {\n        this.$refs['task-columns'].scrollTop = 100\n        window.scrollTo(0, 0)\n      }\n    })\n  },\n\n  beforeDestroy () {\n    if (this.$refs['add-comment']) {\n      const lastComment = `${this.$refs['add-comment'].text}`\n      drafts.setTaskDraft(this.currentTask.id, lastComment)\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedShots',\n      'displayedAssets',\n      'getTaskComments',\n      'getTaskPreviews',\n      'getTaskComment',\n      'isCurrentUserAdmin',\n      'isCurrentUserArtist',\n      'isCurrentUserSupervisor',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isSingleEpisode',\n      'isTVShow',\n      'personMap',\n      'productionMap',\n      'route',\n      'taskEntityPreviews',\n      'taskStatus',\n      'taskStatusForCurrentUser',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    previewOptions () {\n      return this.currentTaskPreviews.map(preview => {\n        return {\n          label: `v${preview.revision}`,\n          value: preview.id\n        }\n      })\n    },\n\n    isPreviewButtonVisible () {\n      return (\n        this.isCurrentUserManager &&\n        this.currentTask &&\n        this.currentTask.entity &&\n        this.currentTask.entity.preview_file_id !== this.currentPreviewId &&\n        ['png', 'mp4'].includes(this.extension)\n      )\n    },\n\n    isMovie () {\n      return this.extension === 'mp4'\n    },\n\n    extension () {\n      return this.currentPreview ? this.currentPreview.extension : ''\n    },\n\n    currentPreviewId () {\n      return this.currentPreview ? this.currentPreview.id : ''\n    },\n\n    currentPreview () {\n      if (this.isPreviews) {\n        let currentPreview = this.currentTaskPreviews[0]\n        const previewId = this.route.params.preview_id\n        if (this.selectedPreviewId) {\n          currentPreview = this.currentTaskPreviews.find((preview) => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview\n      } else {\n        return null\n      }\n    },\n\n    currentFps () {\n      return this.productionMap.get(this.currentTask.project_id).fps || '25'\n    },\n\n    currentRevision () {\n      return this.currentPreview ? this.currentPreview.revision : 0\n    },\n\n    isCommentingAllowed () {\n      return (\n        this.isCurrentUserManager ||\n        this.isCurrentUserClient ||\n        this.currentTask.assignees.find(\n          (personId) => personId === this.user.id\n        )\n      )\n    },\n\n    taskTypeBorder () {\n      let border = 'transparent'\n      if (this.currentTask) border = this.currentTask.task_type_color\n      return {\n        'border-left': `4px solid ${border}`\n      }\n    },\n\n    deleteTaskPath () {\n      return this.taskPath(this.currentTask, 'task-delete')\n    },\n\n    isPreviews () {\n      return this.currentTaskPreviews && this.currentTaskPreviews.length > 0\n    },\n\n    taskEntityPath () {\n      if (this.currentTask) {\n        const episodeId = this.currentEpisode\n          ? this.currentEpisode.id\n          : this.$route.params.episode_id\n        return getTaskEntityPath(this.currentTask, episodeId)\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    lastFivePreviews () {\n      if (this.currentTaskPreviews) {\n        return this.currentTaskPreviews.slice(0, 5)\n      } else {\n        return []\n      }\n    },\n\n    entityList () {\n      const entity = this.displayedShots.find((entity) => {\n        return entity.id === this.currentTask.entity_id\n      })\n      if (entity) {\n        return this.displayedShots\n      } else {\n        return this.displayedAssets\n      }\n    },\n\n    previousEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n        let firstTraversal = false\n\n        let previousEntityIndex = entityIndex - 1\n        if (previousEntityIndex < 0) {\n          previousEntityIndex = this.entityList.length - 1\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[previousEntityIndex]) {\n            const entity = this.entityList[previousEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            previousEntityIndex--\n            if (previousEntityIndex < 0) {\n              previousEntityIndex = this.entityList.length\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    nextEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        let firstTraversal = false\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n\n        let nextEntityIndex = entityIndex + 1\n        if (nextEntityIndex >= this.entityList.length) {\n          nextEntityIndex = 0\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[nextEntityIndex]) {\n            const entity = this.entityList[nextEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            nextEntityIndex++\n            if (nextEntityIndex >= this.entityList.length) {\n              nextEntityIndex = 0\n\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    title () {\n      if (this.currentTask) {\n        const type = this.currentTask.entity_type_name\n        let entityName =\n          this.currentTask.full_entity_name || this.currentTask.entity_name\n        if (this.isTVShow && type === 'Shot') {\n          entityName = entityName\n            .split('/')\n            .splice(1)\n            .join('/')\n        }\n        return `${entityName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    windowTitle () {\n      if (this.currentTask) {\n        const taskTypeName = this.currentTask.task_type_name\n        return `${this.title} / ${taskTypeName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    deleteText () {\n      if (this.currentTask) {\n        const taskType = this.taskTypeMap.get(this.currentTask.task_type_id)\n        return this.$t('main.delete_text', {\n          name: `${this.currentTask.entity_name} / ${taskType.name}`\n        })\n      } else {\n        return ''\n      }\n    },\n\n    isAssigned () {\n      if (this.currentTask) {\n        return this.currentTask.assignees.some((assigneeId) => {\n          return assigneeId === this.user.id\n        })\n      } else {\n        return false\n      }\n    },\n\n    currentTaskType () {\n      if (this.currentTask) {\n        return this.taskTypeMap.get(this.currentTask.task_type_id)\n      } else {\n        return null\n      }\n    },\n\n    currentTeam () {\n      return this.currentProduction.team.map(id => this.personMap.get(id))\n    },\n\n    pinnedCount () {\n      return this.currentTaskComments.filter(c => c.pinned).length\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'ackComment',\n      'addCommentPreview',\n      'addCommentExtraPreview',\n      'commentTask',\n      'commentTaskWithPreview',\n      'changeCommentPreview',\n      'clearSelectedTasks',\n      'deleteTask',\n      'deleteTaskPreview',\n      'deleteTaskComment',\n      'editTaskComment',\n      'loadEpisodes',\n      'loadTask',\n      'loadShots',\n      'loadAssets',\n      'loadPreviewFileFormData',\n      'loadTaskComments',\n      'loadTaskSubscribed',\n      'refreshComment',\n      'refreshPreview',\n      'pinComment',\n      'subscribeToTask',\n      'setCurrentEpisode',\n      'unsubscribeFromTask',\n      'updatePreviewAnnotation'\n    ]),\n\n    loadTaskData () {\n      const task = this.getCurrentTask()\n      if (!task) {\n        this.taskLoading = { isLoading: true, isError: false }\n        this.loadTask({ taskId: this.route.params.task_id })\n          .then(task => {\n            let loadingFunction = (callback) => {\n              this.loadAssets()\n                .then(callback)\n            }\n\n            if (task.entity_type_name === 'Shot') {\n              loadingFunction = (callback) => {\n                this.loadEpisodes()\n                  .then(() => {\n                    if (this.isTVShow) {\n                      this.setCurrentEpisode(task.episode.id)\n                    }\n                    this.loadShots(callback)\n                  })\n                  .catch(callback)\n              }\n            }\n            loadingFunction(() => {\n              this.currentTask = task\n              this.loadTaskComments({\n                taskId: task.id,\n                entityId: task.entity_id\n              })\n                .then(() => this.loadTaskSubscribed({ taskId: task.id }))\n                .then((subscribed) => {\n                  this.isSubscribed = subscribed\n                  this.reset()\n                  this.taskLoading = { isLoading: false, isError: false }\n                }).catch((err) => {\n                  console.error(err)\n                  this.taskLoading = { isLoading: false, isError: true }\n                })\n            })\n          })\n      } else {\n        const taskId = this.route.params.task_id\n        this.currentTask = task\n        this.loadTaskComments({ taskId, entityId: task.entity_id })\n          .then(() => this.loadTaskSubscribed({ taskId }))\n          .then(subscribed => {\n            this.isSubscribed = subscribed\n            this.reset()\n          })\n          .catch(err => {\n            console.error(err)\n            this.taskLoading.isError = true\n          })\n      }\n    },\n\n    getCurrentTask () {\n      return this.taskMap.get(this.route.params.task_id)\n    },\n\n    getCurrentComment () {\n      if (this.route.params.comment_id) {\n        return this.getTaskComment(\n          this.route.params.task_id,\n          this.route.params.comment_id\n        )\n      }\n    },\n\n    getCurrentTaskComments () {\n      return this.getTaskComments(this.route.params.task_id)\n    },\n\n    getCurrentTaskPreviews () {\n      return this.getTaskPreviews(this.route.params.task_id)\n    },\n\n    addComment (comment, attachment, checklist, taskStatusId) {\n      const params = {\n        taskId: this.currentTask.id,\n        taskStatusId: taskStatusId,\n        comment: comment,\n        checklist,\n        attachment\n      }\n      let action = 'commentTask'\n      if (this.previewForms.length > 0) action = 'commentTaskWithPreview'\n      this.loading.addComment = true\n      this.errors.addComment = false\n      this.errors.addCommentMaxRetakes = false\n      this.$store.dispatch(action, params)\n        .then(() => {\n          this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          this.resetPreview()\n          this.$refs['add-preview-modal'].reset()\n          this.reset()\n          this.previewForms = []\n          this.loading.addComment = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addComment = true\n          this.loading.addComment = false\n          const isRetakeError =\n            err.response &&\n            err.response.body.message &&\n            err.response.body.message.indexOf('retake') > 0\n          this.errors.addComment = !isRetakeError\n          this.errors.addCommentMaxRetakes = isRetakeError\n        })\n    },\n\n    reset () {\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      this.currentTask = this.getCurrentTask()\n      if (this.currentTask) {\n        const draft = drafts.getTaskDraft(this.currentTask.id)\n        if (draft) this.$refs['add-comment'].text = draft\n      }\n      setTimeout(() => {\n        if (this.$route.params.preview_id) {\n          this.selectedPreviewId = this.$route.params.preview_id\n        }\n      }, 1000)\n    },\n\n    selectFile (forms) {\n      this.loadPreviewFileFormData(forms)\n      this.previewForms = this.previewForms.concat(forms)\n    },\n\n    clearPreviewFiles () {\n      this.previewForms = []\n    },\n\n    isHighlighted (comment) {\n      return comment.preview && comment.preview.id === this.currentPreviewId\n    },\n\n    createExtraPreview () {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.errors.addExtraPreview = false\n      this.loading.addExtraPreview = true\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === preview.id) >= 0\n      })\n      this.addCommentExtraPreview({\n        taskId: this.currentTask.id,\n        previewId: this.currentPreview.id,\n        commentId: comment.id\n      })\n        .then(() => {\n          this.loading.addExtraPreview = false\n          this.modals.addExtraPreview = false\n          this.$refs['add-extra-preview-modal'].reset()\n          setTimeout(() => {\n            this.$refs['preview-player'].displayLast()\n          }, 0)\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addExtraPreview = true\n          this.loading.addExtraPreview = false\n        })\n    },\n\n    resetPreview (changeRoute = true) {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      if (preview && changeRoute) {\n        this.$router.push(this.previewPath(preview.id))\n      }\n    },\n\n    setPreview () {\n      this.loading.setPreview = true\n      this.errors.setPreview = false\n      this.$store.dispatch('setPreview', {\n        taskId: this.currentTask.id,\n        entityId: this.currentTask.entity.id,\n        previewId: this.currentPreviewId\n      })\n        .then(() => {\n          this.loading.setPreview = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.setPreview = true\n        })\n    },\n\n    confirmEditTaskComment (comment) {\n      this.loading.editComment = true\n      this.errors.editComment = false\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment\n      })\n        .then(() => {\n          this.loading.editComment = false\n          this.modals.editComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.editComment = true\n        })\n    },\n\n    saveComment (comment, checklist) {\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment,\n        checklist\n      })\n    },\n\n    confirmDeleteTaskComment () {\n      this.loading.deleteComment = true\n      this.errors.deleteComment = false\n      const commentId = this.commentToEdit.id\n\n      this.deleteTaskComment({\n        taskId: this.currentTask.id,\n        commentId\n      })\n        .then(() => {\n          this.loading.deleteComment = false\n          this.reset()\n          if (this.isPreviews) this.resetPreview()\n          this.modals.deleteComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.deleteComment = false\n          this.errors.deleteComment = true\n        })\n    },\n\n    confirmDeleteTaskPreview () {\n      this.loading.deleteExtraPreview = true\n      this.errors.deleteExtraPreview = false\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === previewId) >= 0\n      })\n\n      this.$refs['preview-player'].displayFirst()\n      this.deleteTaskPreview({\n        taskId: this.currentTask.id,\n        commentId: comment.id,\n        previewId: this.currentExtraPreviewId\n      })\n        .then(() => {\n          this.loading.deleteExtraPreview = false\n          this.resetPreview()\n          this.hideRemoveExtraPreviewModal()\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.deleteExtraPreview = false\n          this.errors.deleteExtraPreview = true\n        })\n    },\n\n    onPreviewAdded (eventData) {\n      const taskId = eventData.task_id\n      const commentId = eventData.comment_id\n      const previewId = eventData.preview_file_id\n      const revision = eventData.revision\n      const extension = eventData.extension\n      const comment = this.$store.getters.getTaskComment(taskId, commentId)\n\n      if (\n        this.currentTask &&\n        comment &&\n        (\n          comment.previews.length === 0 ||\n          comment.previews[0].id !== previewId\n        ) &&\n        taskId === this.currentTask.id\n      ) {\n        this.$store.commit('ADD_PREVIEW_END', {\n          preview: {\n            id: previewId,\n            revision,\n            extension: extension\n          },\n          taskId,\n          commentId,\n          comment\n        })\n        this.resetPreview()\n      }\n    },\n\n    toggleSubscribe () {\n      if (this.currentTask && !this.isAssigned) {\n        if (this.isSubscribed) {\n          this.unsubscribeFromTask(this.currentTask.id)\n          this.isSubscribed = false\n        } else {\n          this.subscribeToTask(this.currentTask.id)\n          this.isSubscribed = true\n        }\n      }\n    },\n\n    taskPath (task, section = 'task') {\n      if (!task) {\n        task = this.currentTask\n      } else {\n        task.project_id = this.currentTask.project_id\n        task.episode_id = this.currentTask.episode_id\n      }\n\n      let route = { name: 'open-productions' }\n      if (task) {\n        route = {\n          name: section,\n          params: {\n            production_id: task.project_id,\n            task_id: task.id\n          }\n        }\n\n        if (this.isTVShow && this.currentEpisode) {\n          route.name = `episode-${section}`\n          route.params.episode_id = task.episode_id || this.currentEpisode.id\n        }\n      }\n      return route\n    },\n\n    previewPath (previewId) {\n      const route = this.taskPath(this.currentTask, 'task-preview')\n\n      if (route.params) {\n        route.params.preview_id = previewId\n      }\n      return route\n    },\n\n    onAnnotationChanged ({ preview, additions, deletions, updates }) {\n      const taskId = this.currentTask.id\n      this.updatePreviewAnnotation({\n        taskId, preview, additions, deletions, updates\n      })\n    },\n\n    onAddExtraPreviewClicked () {\n      this.modals.addExtraPreview = true\n    },\n\n    onRemoveExtraPreviewClicked (preview) {\n      this.showRemoveExtraPreviewModal(preview)\n    },\n\n    hideExtraPreviewModal () {\n      this.modals.addExtraPreview = false\n    },\n\n    showRemoveExtraPreviewModal (preview) {\n      this.currentExtraPreviewId = preview.id\n      this.modals.deleteExtraPreview = true\n    },\n\n    hideRemoveExtraPreviewModal () {\n      this.modals.deleteExtraPreview = false\n    },\n\n    onAddPreviewClicked () {\n      this.modals.addPreview = true\n    },\n\n    closeAddPreviewModal () {\n      this.modals.addPreview = false\n    },\n\n    onDuplicateComment (comment) {\n      this.$refs['add-comment'].setValue(comment)\n    },\n\n    onPinComment (comment) {\n      this.pinComment(comment)\n    },\n\n    onEditComment (comment) {\n      this.commentToEdit = comment\n      this.modals.editComment = true\n    },\n\n    onDeleteComment (comment) {\n      this.commentToEdit = comment\n      this.modals.deleteComment = true\n    },\n\n    onCancelEditComment (comment) {\n      this.modals.editComment = false\n    },\n\n    onCancelDeleteComment (comment) {\n      this.modals.deleteComment = false\n    },\n\n    onTimeUpdated (time) {\n      this.currentTime = time\n    },\n\n    onPreviewFormRemoved (previewForm) {\n      this.previewForms = this.previewForms.filter(f => f !== previewForm)\n    },\n\n    changeCurrentPreview (preview) {\n      this.$router.push(this.previewPath(preview.id))\n    },\n\n    onRemoteAcknowledge (eventData, type) {\n      if (this.currentTask) {\n        const comment = this.currentTaskComments.find(\n          c => c.id === eventData.comment_id\n        )\n        const user = this.personMap.get(eventData.person_id)\n        if (comment && user) {\n          if (this.user.id === user.id) {\n            if (\n              (\n                type === 'ack' &&\n                !comment.acknowledgements.includes(user.id)\n              ) ||\n              (\n                type === 'unack' &&\n                comment.acknowledgements.includes(user.id)\n              )\n            ) {\n              this.$store.commit('ACK_COMMENT', { comment, user })\n            }\n          } else {\n            this.$store.commit('ACK_COMMENT', { comment, user })\n          }\n        }\n      }\n    },\n\n    isStatusChange (index) {\n      const comments = this.currentTaskComments\n      const comment = comments[index]\n      return (\n        index === comments.length - 1 ||\n        comment.task_status_id !== comments[index + 1].task_status_id\n      )\n    },\n\n    timeCodeClicked (\n      { versionRevision, minutes, seconds, milliseconds, frame }\n    ) {\n      this.changeCurrentPreview(this.currentTaskPreviews.find(\n        p => p.revision === parseInt(versionRevision)\n      ))\n      setTimeout(() => {\n        this.$refs['preview-player'].setCurrentFrame(frame)\n        this.$refs['preview-player'].focus()\n      }, 20)\n    },\n\n    async extractAnnotationSnapshots () {\n      this.$refs['add-comment'].showAnnotationLoading()\n      const files =\n        await this.$refs['preview-player'].extractAnnotationSnapshots()\n      this.$refs['add-comment'].setAnnotationSnapshots(files)\n      this.$refs['add-comment'].hideAnnotationLoading()\n      return files\n    },\n\n    isPreviewPlayerReadOnly () {\n      if (this.currentTask) {\n        if (this.isCurrentUserManager || this.isCurrentUserClient) {\n          return false\n        } else if (this.isCurrentUserSupervisor) {\n          if (this.user.departments.length === 0) {\n            return false\n          } else {\n            const taskType = this.taskTypeMap.get(this.currentTask.task_type_id)\n            return !(taskType.department_id && this.user.departments.includes(\n              taskType.department_id))\n          }\n        }\n      }\n      return true\n    }\n  },\n\n  watch: {\n    $route () {\n      if (this.$route.params.task_id !== this.currentTask.id) {\n        this.loadTaskData()\n      }\n    },\n\n    selectedPreviewId () {\n      if (this.currentTask) {\n        this.$router.push(this.previewPath(this.selectedPreviewId))\n      }\n    }\n  },\n\n  socket: {\n    events: {\n      'preview-file:add-file' (eventData) {\n        this.onPreviewAdded(eventData)\n      },\n\n      'comment:acknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'ack')\n      },\n\n      'comment:unacknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'unack')\n      },\n\n      'preview-file:update' (eventData) {\n        const comment = this.currentTaskComments.find(\n          c => (\n            c.previews &&\n            c.previews.length > 0 &&\n            c.previews[0].id === eventData.preview_file_id\n          )\n        )\n        if (comment && this.currentTask) {\n          this.refreshPreview({\n            taskId: this.currentTask.id,\n            previewId: eventData.preview_file_id\n          }).then(preview => {\n            comment.previews[0].validation_status = preview.validation_status\n          })\n        }\n      },\n\n      'comment:new' (eventData) {\n        setTimeout(() => {\n          if (\n            this.getCurrentTaskComments().length !==\n            this.currentTaskComments.length\n          ) {\n            this.currentTaskComments = this.getCurrentTaskComments()\n            this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          }\n        }, 1000)\n      },\n\n      'comment:reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            const reply = comment.replies.find(\n              r => r.id === eventData.reply_id\n            )\n            if (!reply) {\n              this.refreshComment({\n                taskId: this.currentTask.id,\n                commentId: eventData.comment_id\n              })\n                .then(remoteComment => {\n                  comment.replies = remoteComment.replies\n                })\n                .catch(console.error)\n            }\n          }\n        }\n      },\n\n      'comment:delete-reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            this.$store.commit('REMOVE_REPLY_FROM_COMMENT', {\n              comment,\n              reply: { id: eventData.reply_id }\n            })\n          }\n        }\n      },\n\n      'preview-file:annotation-update' (eventData) {\n        const previewPlayer = this.$refs['preview-player']\n        const isValid = previewPlayer.isValidPreviewModification(\n          eventData.preview_file_id,\n          eventData.updated_at\n        )\n        if (isValid) {\n          this.refreshPreview({\n            previewId: previewPlayer.currentPreview.id,\n            taskId: previewPlayer.currentPreview.task_id\n          }).then(preview => {\n            if (!previewPlayer.notSaved) {\n              this.currentTaskPreviews = this.getCurrentTaskPreviews()\n              this.$nextTick(() => {\n                previewPlayer.reloadAnnotations()\n                previewPlayer.loadAnnotation()\n              })\n            }\n          })\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    let title = 'Loading task... - Kitsu'\n    if (this.currentTask) {\n      const taskTypeName =\n        this.taskTypeMap.get(this.currentTask.task_type_id).name\n      title = `${this.title} / ${taskTypeName} - Kitsu`\n    }\n    return { title }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .task-information,\n.dark .add-comment,\n.dark .comment,\n.dark .no-comment,\n.dark .column {\n  background: #46494F;\n  border-color: $dark-grey;\n  box-shadow: 0px 0px 6px #333;\n}\n\nh2.subtitle {\n  margin: 0;\n  padding: 0;\n}\n\n.page {\n  background: #F9F9F9;\n  margin-top: 60px;\n  padding: 0;\n}\n\n.page.column {\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\n.page-header {\n  margin: 1em 1em 0 1em;\n}\n\n.navigation-buttons {\n  font-size: 1em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.navigation-buttons .arrow {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.navigation-buttons a {\n  color: $grey;\n}\n\n.selected {\n  border: 0;\n}\n\n.source {\n  color: #AAA;\n  font-size: 0.8em;\n}\n\nvideo {\n  width: 100%;\n}\n\n.validation-buttons button {\n  width: 100%;\n  margin-bottom: 0.3em;\n  border-width: 2px;\n  font-weight: bold;\n}\n\n.preview-row {\n  margin-bottom: 0.5em;\n}\n\n.add-comment {\n  margin-bottom: 1em;\n  padding: 1em;\n  box-shadow: 0px 0px 6px #E0E0E0;\n}\n\n.no-comment {\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  padding: 1em;\n  border-radius: 5px;\n}\n\n.comment {\n  box-shadow: 0px 0px 6px #E0E0E0;\n  margin-top: 0.3em;\n}\n\n.task-columns {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n\n.task-column {\n  padding: 1em;\n}\n\n.comments-column {\n  flex: 1;\n}\n\n.preview-column {\n  overflow: auto;\n  flex: 2;\n}\n\n.preview-column-content {\n  overflow-x: hidden;\n}\n\n.preview-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.page-header .tag {\n  border-radius: 0;\n  font-weight: bold;\n  margin-right: 0.5em;\n}\n\n.assignees {\n  display: flex;\n}\n\n.assignees span {\n  margin-right: 0.2em;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.entity-thumbnail {\n  margin-right: 0.3em;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n}\n\n.pull-right {\n  margin-left: auto;\n}\n\n.title a {\n  color: inherit;\n}\n\n.set-main-preview {\n  height: 30px;\n}\n\n.back-link {\n  padding-top: 6px;\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100% - 60px);\n}\n\n.task-columns {\n  display: flex;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.task-column {\n  overflow-y: auto;\n}\n\n.info-block {\n  margin-right: 0;\n}\n\n.task-type.block {\n  margin-bottom: 0;\n}\n\n.entity-thumbnail {\n  margin-top: 5px;\n}\n\n@media screen and (max-width: 768px) {\n  .action-button {\n    display: none;\n  }\n\n  .title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n\n  .header-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-title .flexrow-item {\n    margin-bottom: 0.5em;\n  }\n\n  .task-column {\n    width: 100%;\n    overflow-y: initial;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=1be7c182&scoped=true&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=1be7c182&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1be7c182\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}