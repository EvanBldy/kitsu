{"version":3,"sources":["webpack:///./src/components/widgets/ComboboxStyled.vue?6d9b","webpack:///./src/components/widgets/ComboboxStyled.vue?b6a4","webpack:///src/components/widgets/ComboboxStyled.vue","webpack:///./src/components/widgets/ComboboxStyled.vue?d187","webpack:///./src/components/widgets/ComboboxStyled.vue","webpack:///./src/components/pages/Task.vue?2207","webpack:///src/components/pages/Task.vue","webpack:///./src/components/pages/Task.vue?e2c7","webpack:///./src/components/pages/Task.vue","webpack:///./src/components/pages/Task.vue?99da"],"names":["render","_vm","this","_h","$createElement","_c","_self","label","length","staticClass","_v","_s","_e","class","combo","open","showList","on","toggleList","selectedOption","ref","_l","option","key","id","$event","selectOption","button","openRoute","staticRenderFns","name","components","ChevronDownIcon","data","value","props","default","type","options","mounted","computed","mapGetters","methods","window","ahref","top","left","watch","component","attrs","currentTaskType","currentProduction","currentTaskPreviews","preview_file_id","taskEntityPath","currentTask","title","$t","assignees","personId","personMap","get","formatPriority","priority","isAssigned","isSubscribed","toggleSubscribe","previewOptions","model","callback","$$v","selectedPreviewId","expression","isPreviews","isCurrentUserManager","loading","setPreview","errors","entity","currentPreviewId","currentPreview","previews","taskTypeMap","taskEntityPreviews","isCurrentUserArtist","lastFivePreviews","onAnnotationChanged","onAddExtraPreviewClicked","onRemoveExtraPreviewClicked","changeCurrentPreview","onTimeUpdated","estimation","formatDuration","duration","retake_count","formatSimpleDate","start_date","due_date","addComment","addCommentMaxRetakes","isMovie","user","currentTeam","taskStatusForCurrentUser","attachedFileName","parseInt","currentFps","currentTime","currentRevision","onAddPreviewClicked","onDuplicateComment","selectFile","extractAnnotationSnapshots","currentTaskComments","comment","index","person","isCurrentUserAdmin","pinnedCount","isStatusChange","ackComment","onPinComment","onEditComment","onDeleteComment","saveComment","timeCodeClicked","modals","addPreview","addPreviewFormData","closeAddPreviewModal","addExtraPreview","addExtraPreviewFormData","hideExtraPreviewModal","createExtraPreview","editComment","commentToEdit","confirmEditTaskComment","onCancelEditComment","deleteComment","confirmDeleteTaskComment","onCancelDeleteComment","deleteExtraPreview","hideRemoveExtraPreviewModal","confirmDeleteTaskPreview","mixins","AddComment","AddPreviewModal","ComboboxStyled","Comment","DeleteModal","EditCommentModal","EntityThumbnail","ImageIcon","PageSubtitle","PageTitle","PeopleAvatar","PreviewPlayer","Spinner","SubscribeButton","TaskTypeName","ValidationTag","selectedTab","taskLoading","isLoading","isError","deleteTask","created","beforeDestroy","drafts","isPreviewButtonVisible","extension","isCommentingAllowed","taskTypeBorder","deleteTaskPath","entityList","previousEntity","previousEntityIndex","taskId","firstTraversal","nextEntity","nextEntityIndex","entityName","split","splice","join","windowTitle","deleteText","mapActions","loadTaskData","entityId","then","catch","console","loadingFunction","getCurrentTask","getCurrentComment","getCurrentTaskComments","getCurrentTaskPreviews","attachment","checklist","taskStatusId","err","reset","setTimeout","forms","map","isHighlighted","previewId","commentId","resetPreview","onPreviewAdded","eventData","preview","revision","taskPath","task","route","params","production_id","task_id","previewPath","additions","deletions","updates","showRemoveExtraPreviewModal","time","onRemoteAcknowledge","versionRevision","frame","minutes","seconds","milliseconds","files","isPreviewPlayerReadOnly","taskType","$route","socket","events","c","reply","previewPlayer","metaInfo"],"mappings":"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A,uBACA,wBACA,MACAS,YACAA,yBACAA,4CACA,uBACA,oCAIAC,MA7IA,WA6IA,WAIA,GAHA,uDACA,uDACA,uCACA,kBACA,+CACA,sCAEAC,uBACA,6BACA,kDAEA,MAGA5F,WA5JA,SA4JA6F,GACA,gCACA,wBACAC,KAAA,yCACArB,KAAA,OAGAsB,cAnKA,SAmKA5F,GACA,wDAGAmB,mBAvKA,WAuKA,WACA,2BACA,uBACA,+BACA,gCACA,sDACA,qEAEA,6BACA4C,2BACA8B,iCACAC,iBAEAlB,MAAA,WACA,6BACA,4BACA,2CACAa,uBACA,0CACA,MAEAZ,OAAA,YACAC,iBACA,4BACA,iCAIAiB,aAnMA,WAmMA,iEACA,2BACA,uBACA,uDACA,uDACA,MACA,2CAIArI,WA7MA,WA6MA,WACA,2BACA,0BACA,mCACAqG,2BACAY,oCACAkB,kCAEAjB,MAAA,WACA,2BAEAC,OAAA,YACAC,iBACA,2BAIAxD,uBA9NA,SA8NAtB,GAAA,WACA,4BACA,2BACA,sBACA+D,2BACA/D,YAEA4E,MAAA,WACA,yBACA,2BAEAC,OAAA,YACAC,iBACA,4BAIApE,YA/OA,SA+OAV,EAAAqF,GACA,sBACAtB,2BACA/D,UACAqF,eAIA5D,yBAvPA,WAuPA,WACA,8BACA,6BACA,4BAEA,wBACAsC,2BACA+B,cAEAlB,MAAA,WACA,2BACA,UACA,+BACA,6BAEAC,OAAA,YACAC,iBACA,2BACA,8BAIAjD,yBA7QA,WA6QA,WACA,mCACA,kCACA,4BACA,kDACA,kEAGA,4CACA,wBACAkC,2BACA+B,eACAD,uCAEAjB,MAAA,WACA,gCACA,iBACA,mCAEAC,OAAA,YACAC,iBACA,gCACA,mCAIAkB,eAvSA,SAuSAC,GACA,gBACA,eACA,oBACA,aACA,cACA,0CAGA,kBACAjG,IAEAA,uBACAA,uBAEA+D,0BAEA,sCACAmC,SACA5L,KACA6L,WACA3C,aAEAO,SACA+B,YACA9F,YAEA,sBAIAhD,gBAtUA,WAuUA,qCACA,mBACA,8CACA,uBAEA,0CACA,wBAKAoJ,SAlVA,SAkVAC,GAAA,oEACA,GAGAA,yCACAA,0CAHAA,mBAMA,OAAAzL,yBAeA,OAdA,IACA0L,GACA1L,OACA2L,QACAC,2BACAC,eAIA,qCACAH,4BACAA,2DAGA,GAGAI,YA5WA,SA4WAb,GACA,qDAKA,OAHA,WACAS,uBAEA,GAGAlI,oBArXA,YAqXA,gBAAI,EAAJ,YAAI,EAAJ,YAAI,EAAJ,UACA,sBACA,8BACA2F,SAAAmC,UAAAS,YAAAC,YAAAC,aAIAxI,yBA5XA,WA6XA,gCAGAC,4BAhYA,SAgYA4H,GACA,qCAGAhF,sBApYA,WAqYA,gCAGA4F,4BAxYA,SAwYAZ,GACA,gCACA,mCAGAtE,4BA7YA,WA8YA,mCAGAjC,oBAjZA,WAkZA,2BAGAoB,qBArZA,WAsZA,2BAGAnB,mBAzZA,SAyZAI,GACA,uCAGAO,aA7ZA,SA6ZAP,GACA,oBAGAQ,cAjaA,SAiaAR,GACA,qBACA,4BAGAS,gBAtaA,SAsaAT,GACA,qBACA,8BAGAuB,oBA3aA,SA2aAvB,GACA,4BAGA0B,sBA/aA,SA+aA1B,GACA,8BAGAxB,cAnbA,SAmbAuI,GACA,oBAGAxI,qBAvbA,SAubA2H,GACA,2CAGAc,oBA3bA,SA2bAf,EAAA9K,GACA,qBACA,qCACA,0CAEA,kCACA,OACA,qBAGAA,YACA,mCAGAA,aACA6E,oCAGA,kCAAAA,UAAAb,SAGA,kCAAAa,UAAAb,YAMAkB,eAtdA,SAsdAJ,GACA,+BACA,OACA,OACAA,gBACAD,0CAIAW,gBA/dA,YAieA,WADAsG,EACA,EADAA,gBAAAC,GACA,EADAC,QACA,EADAC,QACA,EADAC,aACA,EADAH,OAEA,yDACA,gDAEAzB,uBACA,6CACA,oCACA,KAGA3F,2BA3eA,WA2eA,0HACA,+CADA,SAGA,uDAHA,cAEAwH,EAFA,OAIA,iDACA,+CALA,kBAMAA,GANA,8CASAC,wBApfA,WAqfA,qBACA,uDACA,SACA,iCACA,oCACA,SAEA,0DACA,wDACAC,mBAIA,YAIA3L,OACA4L,OADA,WAEA,kDACA,qBAIApK,kBAPA,WAQA,kBACA,8DAKAqK,QACAC,QACA,wBADA,SACA1B,GACA,wBAGA,sBALA,SAKAA,GACA,mCAGA,wBATA,SASAA,GACA,qCAGA,sBAbA,SAaAA,GACA,qCACA,mBACA2B,YACAA,qBACAA,wCAGA,qBACA,qBACA7D,2BACA8B,8BACAjB,MAAA,YACA5E,wDAKA,cA/BA,SA+BAiG,GAAA,WACAR,uBAEA,oCACA,+BAEA,iDACA,oDAEA,MAGA,gBA3CA,SA2CAQ,GACA,qBACA,qCACA,0CAEA,MACA,0BACA,sBACA,wCAEA,GACA,qBACAlC,2BACA+B,yBAEAlB,MAAA,YACA5E,uBAEA6E,MAAAC,kBAMA,uBAnEA,SAmEAmB,GACA,qBACA,qCACA,0CAEA,IACA,0BACA,gDACAjG,UACA6H,OAAAvN,oBAMA,iCAlFA,SAkFA2L,GAAA,WACA,+BACA,+BACAA,kBACAA,cAEA,GACA,qBACAJ,8BACA9B,kCACAa,MAAA,YACA,aACA,iDACA,wBACAkD,sBACAA,6BASAC,SAxgCA,WAygCA,gCACA,qBACA,MACA,yDACAzL,mDAEA,OAAAA,WCt1C6V,I,wBCQzVR,EAAY,eACd,EACAhD,EACA6B,GACA,EACA,KACA,WACA,MAIa,aAAAmB,E,2CCnBf","file":"js/chunk-5ae84c51.bffad3b1.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=style&index=0&id=404b6075&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.label.length > 0)?_c('label',{staticClass:\"label\"},[_vm._v(\" \"+_vm._s(_vm.label)+\" \")]):_vm._e(),_c('div',{class:{\n      combo: true,\n      open: _vm.showList\n    },on:{\"click\":_vm.toggleList}},[_c('div',{staticClass:\"flexrow\"},[_c('div',{staticClass:\"selected-line flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.selectedOption ? _vm.selectedOption.label : '')+\" \")]),_c('chevron-down-icon',{staticClass:\"down-icon flexrow-item\"})],1),(_vm.showList)?_c('div',{ref:\"select\",staticClass:\"select-input\",on:{\"click\":_vm.toggleList}},_vm._l((_vm.options),function(option){return _c('div',{key:option.id,staticClass:\"option-line\",on:{\"click\":function($event){return _vm.selectOption(option)},\"mouseup\":function($event){if('button' in $event && $event.button !== 1){ return null; }return _vm.openRoute(option)}}},[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),0):_vm._e()]),_c('div',{class:{\n      'c-mask': true,\n      'is-active': _vm.showList\n    },on:{\"click\":_vm.toggleList}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div>\n  <label class=\"label\" v-if=\"label.length > 0\">\n    {{ label }}\n  </label>\n  <div\n    :class=\"{\n      combo: true,\n      open: showList\n    }\"\n    @click=\"toggleList\"\n  >\n    <div\n      class=\"flexrow\"\n    >\n      <div\n        class=\"selected-line flexrow-item\"\n      >\n        {{ selectedOption ? selectedOption.label : '' }}\n      </div>\n      <chevron-down-icon class=\"down-icon flexrow-item\"/>\n    </div>\n    <div\n      class=\"select-input\"\n      ref=\"select\"\n      @click=\"toggleList\"\n      v-if=\"showList\"\n    >\n      <div\n        class=\"option-line\"\n        v-for=\"option in options\"\n        @click=\"selectOption(option)\"\n        @click.middle=\"openRoute(option)\"\n        :key=\"option.id\"\n      >\n        {{ option.label }}\n      </div>\n    </div>\n  </div>\n  <div\n    @click=\"toggleList\"\n    :class=\"{\n      'c-mask': true,\n      'is-active': showList\n    }\"\n  >\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { ChevronDownIcon } from 'vue-feather-icons'\n\nexport default {\n  name: 'combobox-styled',\n\n  components: {\n    ChevronDownIcon\n  },\n\n  data () {\n    return {\n      selectedOption: {\n        label: '',\n        value: ''\n      },\n      showList: false\n    }\n  },\n\n  props: {\n    label: {\n      default: '',\n      type: String\n    },\n    options: {\n      default: () => [],\n      type: Array\n    },\n    value: {\n      default: '',\n      type: String\n    }\n  },\n\n  mounted () {\n    if (this.options.length > 0) {\n      this.selectedOption = this.options[0]\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'isDarkTheme'\n    ])\n  },\n\n  methods: {\n    selectOption (option) {\n      this.$emit('input', option.value)\n      this.selectedOption = option\n      this.toggleList()\n    },\n\n    openRoute (option) {\n      const ahref = this.$router.resolve(option.route).href\n      const url =\n        `${window.location.protocol}//${window.location.host}${ahref}`\n      window.open(url, '_blank')\n    },\n\n    toggleList () {\n      if (this.showList) {\n        this.lastScrollPosition = this.$refs.select.scrollTop\n      }\n      this.showList = !this.showList\n      if (this.showList) {\n        this.$nextTick(() => {\n          this.$refs.select.scrollTo({ top: this.lastScrollPosition, left: 0 })\n        })\n      }\n    }\n  },\n\n  watch: {\n    options () {\n      if (this.options.length > 0) {\n        const option = this.options.find(o => o.value === this.value)\n        if (option) {\n          this.selectedOption = option\n        } else {\n          this.selectedOption = this.options[0]\n        }\n      }\n    },\n\n    value () {\n      this.selectedOption = this.options.find(o => o.value === this.value)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .select-input,\n  .selected-line,\n  .option-line,\n  .combo {\n    background: $dark-grey-light;\n    border-color: $dark-grey;\n  }\n\n  .option-line:hover {\n    background: $dark-purple;\n  }\n}\n\n.combo {\n  background: $white;\n  color: var(--text);\n  border: 1px solid $light-grey-light;\n  border-radius: 0.5em;\n  user-select: none;\n  cursor: pointer;\n  margin: 0;\n  margin-top: 1px;\n  max-width: 200px;\n  padding: 0.5em;\n  position: relative;\n  vertical-align: middle;\n\n  &.open {\n    border-bottom-left-radius: 0em;\n    border-bottom-right-radius: 0em;\n  }\n}\n\n.combo:hover {\n  border: 1px solid $green;\n}\n\n.selected-line {\n  flex: 1;\n}\n\n.option-line {\n  background: $white;\n  border-bottom: 1px solid $light-grey-light;\n  cursor: pointer;\n  margin: 0;\n  padding: 0.5em;\n  min-width: 150px;\n  width: inherit;\n\n  &:hover {\n    background: $purple;\n  }\n}\n\n.down-icon {\n  width: 15px;\n  min-width: 15px;\n  margin-right: 0.4em;\n  color: $green;\n  cursor: pointer;\n}\n\n.select-input {\n  background: var(--background);\n  border: 1px solid $light-grey-light;\n  border-bottom-left-radius: 1em;\n  border-bottom-right-radius: 1em;\n  left: 0;\n  margin-left: -1px;\n  max-height: 180px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  position: absolute;\n  width: inherit;\n  top: 38px;\n  z-index: 2000;\n\n  .option-line {\n    padding-right: 27px;\n  }\n}\n\n.c-mask {\n  z-index: 199;\n}\n\n.field .label {\n  padding-top: 5px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComboboxStyled.vue?vue&type=template&id=404b6075&scoped=true&\"\nimport script from \"./ComboboxStyled.vue?vue&type=script&lang=js&\"\nexport * from \"./ComboboxStyled.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ComboboxStyled.vue?vue&type=style&index=0&id=404b6075&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"404b6075\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fixed-page columns\"},[_c('div',{staticClass:\"page column main-column\"},[_c('div',{staticClass:\"page-header pa1 mb0\"},[(_vm.currentTask)?_c('div',{staticClass:\"flexrow header-title\"},[(_vm.currentTaskType)?_c('task-type-name',{staticClass:\"flexrow-item task-type block\",attrs:{\"task-type\":_vm.currentTaskType,\"production-id\":_vm.currentProduction.id}}):_vm._e(),_c('span',{staticClass:\"flexrow-item ml2\"},[_c('entity-thumbnail',{staticClass:\"entity-thumbnail\",attrs:{\"entity\":_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0\n              ? { preview_file_id: _vm.currentTaskPreviews[0].id }\n              : { },\"empty-width\":100,\"empty-height\":60,\"width\":100,\"with-link\":false}})],1),_c('div',{staticClass:\"title flexrow-item\"},[_c('router-link',{attrs:{\"to\":_vm.taskEntityPath}},[_c('page-title',{attrs:{\"text\":_vm.currentTask ? _vm.title : 'Loading...',\"bold\":\"\"}})],1)],1),_c('div',{staticClass:\"flexrow-item flexrow block\"},[_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.current_status'))+\" \")]),(_vm.currentTask)?_c('validation-tag',{staticClass:\"is-medium flexrow-item\",attrs:{\"task\":_vm.currentTask,\"is-static\":true}}):_vm._e(),(_vm.currentTask.assignees.length > 0)?_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.assignees'))+\": \")]):_vm._e(),_vm._l((_vm.currentTask.assignees),function(personId){return _c('span',{key:personId,staticClass:\"flexrow-item avatar-wrapper\"},[_c('people-avatar',{key:personId,staticClass:\"flexrow-item\",attrs:{\"person\":_vm.personMap.get(personId),\"size\":30,\"font-size\":16}})],1)}),_c('div',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.priority'))+\": \"+_vm._s(_vm.formatPriority(_vm.currentTask.priority))+\" \")]),(!_vm.isAssigned)?_c('subscribe-button',{staticClass:\"flexrow-item action-button\",attrs:{\"subscribed\":_vm.isAssigned || _vm.isSubscribed},on:{\"click\":_vm.toggleSubscribe}}):_vm._e()],2)],1):_vm._e()]),_c('div',{ref:\"task-columns\",staticClass:\"task-columns\"},[_c('div',{staticClass:\"task-column preview-column\"},[_c('div',{staticClass:\"preview-column-content block\"},[_c('div',{staticClass:\"flexrow preview-header\"},[(_vm.isPreviews)?_c('div',{staticClass:\"flexrow-item\"},[_c('combobox-styled',{staticClass:\"preview-combo flexrow-item\",attrs:{\"options\":_vm.previewOptions},model:{value:(_vm.selectedPreviewId),callback:function ($$v) {_vm.selectedPreviewId=$$v},expression:\"selectedPreviewId\"}})],1):_c('div',[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_preview'))+\" \")])]),(_vm.isPreviewButtonVisible)?_c('div',{staticClass:\"set-main-preview flexrow-item flexrow pull-right\"},[(_vm.isPreviews && _vm.isCurrentUserManager)?_c('button',{class:{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': _vm.loading.setPreview\n                },on:{\"click\":_vm.setPreview}},[_c('image-icon',{staticClass:\"icon\"}),_c('span',{staticClass:\"text\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview'))+\" \")])],1):_vm._e(),(_vm.errors.setPreview)?_c('span',{staticClass:\"error flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview_error'))+\" \")]):_vm._e()]):_vm._e(),(_vm.currentTask && _vm.currentTask.entity && _vm.currentTask.entity.preview_file_id === _vm.currentPreviewId)?_c('div',{staticClass:\"set-main-preview flexrow-item pull-right\"},[_c('em',[_vm._v(_vm._s(_vm.$t('tasks.set_preview_done')))])]):_vm._e()]),_c('div',{staticClass:\"preview-area mt1\"},[(_vm.isPreviews)?_c('div',[(_vm.currentPreview)?_c('preview-player',{ref:\"preview-player\",attrs:{\"previews\":_vm.currentPreview.previews,\"task-type-map\":_vm.taskTypeMap,\"entity-preview-files\":_vm.taskEntityPreviews,\"read-only\":_vm.isCurrentUserArtist,\"last-preview-files\":_vm.lastFivePreviews,\"task\":_vm.currentTask,\"extra-wide\":true},on:{\"annotation-changed\":_vm.onAnnotationChanged,\"add-extra-preview\":_vm.onAddExtraPreviewClicked,\"remove-extra-preview\":_vm.onRemoveExtraPreviewClicked,\"change-current-preview\":_vm.changeCurrentPreview,\"time-updated\":_vm.onTimeUpdated}}):_vm._e()],1):_vm._e()])]),_c('div',{staticClass:\"flexrow-item block mt1 mr0 info-block\"},[_c('page-subtitle',{attrs:{\"text\":_vm.$t('main.info')}}),_c('div',{staticClass:\"table-body mt1\"},[(_vm.currentTask)?_c('table',{staticClass:\"datatable\"},[_c('tbody',{staticClass:\"table-body\"},[_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.estimation')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.estimation))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.duration')))]),_c('td',[_vm._v(_vm._s(_vm.formatDuration(_vm.currentTask.duration)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.retake_count')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.retake_count))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.start_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.start_date)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.due_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.due_date)))])])])]):_vm._e()])],1),_c('div',{staticClass:\"pa2\"})]),_c('div',{staticClass:\"task-column comments-column\"},[(_vm.currentTask)?_c('div',[_c('div',[(_vm.isCommentingAllowed)?_c('add-comment',{ref:\"add-comment\",attrs:{\"is-error\":_vm.errors.addComment,\"is-max-retakes-error\":_vm.errors.addCommentMaxRetakes,\"is-loading\":_vm.loading.addComment,\"is-movie\":_vm.isMovie,\"user\":_vm.user,\"team\":_vm.currentTeam,\"task\":_vm.currentTask,\"task-status\":_vm.taskStatusForCurrentUser,\"attached-file-name\":_vm.attachedFileName,\"fps\":parseInt(_vm.currentFps),\"time\":_vm.currentTime,\"revision\":_vm.currentRevision},on:{\"add-comment\":_vm.addComment,\"add-preview\":_vm.onAddPreviewClicked,\"duplicate-comment\":_vm.onDuplicateComment,\"file-drop\":_vm.selectFile,\"annotation-snapshots-requested\":_vm.extractAnnotationSnapshots}}):_vm._e(),(_vm.currentTaskComments && _vm.currentTaskComments.length > 0)?_c('div',{staticClass:\"comments\"},_vm._l((_vm.currentTaskComments),function(comment,index){return _c('comment',{key:comment.id,attrs:{\"comment\":comment,\"task\":_vm.currentTask,\"highlighted\":false,\"current-user\":_vm.user,\"editable\":(\n                  comment.person && _vm.user.id === comment.person.id ||\n                  _vm.isCurrentUserAdmin\n                ),\"is-first\":index === 0,\"is-last\":index === _vm.pinnedCount,\"is-change\":_vm.isStatusChange(index)},on:{\"ack-comment\":_vm.ackComment,\"pin-comment\":_vm.onPinComment,\"edit-comment\":_vm.onEditComment,\"delete-comment\":_vm.onDeleteComment,\"checklist-updated\":_vm.saveComment,\"time-code-clicked\":_vm.timeCodeClicked}})}),1):_c('div',{staticClass:\"no-comment\"},[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_comment'))+\" \")])])],1)]):_c('div',{staticClass:\"has-text-centered\"},[_c('spinner')],1)])]),_c('add-preview-modal',{ref:\"add-preview-modal\",attrs:{\"active\":_vm.modals.addPreview,\"is-loading\":_vm.loading.addPreview,\"is-error\":_vm.errors.addPreview,\"form-data\":_vm.addPreviewFormData},on:{\"cancel\":function($event){_vm.modals.addPreview = false},\"fileselected\":_vm.selectFile,\"confirm\":_vm.closeAddPreviewModal}}),_c('add-preview-modal',{ref:\"add-extra-preview-modal\",attrs:{\"active\":_vm.modals.addExtraPreview,\"is-loading\":_vm.loading.addExtraPreview,\"is-error\":_vm.errors.addExtraPreview,\"form-data\":_vm.addExtraPreviewFormData},on:{\"cancel\":_vm.hideExtraPreviewModal,\"fileselected\":_vm.selectFile,\"confirm\":_vm.createExtraPreview}}),_c('edit-comment-modal',{attrs:{\"active\":_vm.modals.editComment,\"is-loading\":_vm.loading.editComment,\"is-error\":_vm.errors.editComment,\"comment-to-edit\":_vm.commentToEdit,\"team\":_vm.currentTeam},on:{\"confirm\":_vm.confirmEditTaskComment,\"cancel\":_vm.onCancelEditComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteComment,\"is-loading\":_vm.loading.deleteComment,\"is-error\":_vm.errors.deleteComment,\"text\":_vm.$t('tasks.delete_comment'),\"error-text\":_vm.$t('tasks.delete_comment_error')},on:{\"confirm\":_vm.confirmDeleteTaskComment,\"cancel\":_vm.onCancelDeleteComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteExtraPreview,\"is-loading\":_vm.loading.deleteExtraPreview,\"is-error\":_vm.errors.deleteExtraPreview,\"text\":_vm.$t('tasks.delete_preview'),\"error-text\":_vm.$t('tasks.delete_preview_error')},on:{\"cancel\":_vm.hideRemoveExtraPreviewModal,\"confirm\":_vm.confirmDeleteTaskPreview}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"fixed-page columns\">\n  <div class=\"page column main-column\">\n    <div class=\"page-header pa1 mb0\">\n      <div\n        class=\"flexrow header-title\"\n        v-if=\"currentTask\"\n      >\n        <task-type-name\n          class=\"flexrow-item task-type block\"\n          :task-type=\"currentTaskType\"\n          :production-id=\"currentProduction.id\"\n          v-if=\"currentTaskType\"\n        />\n\n        <span\n          class=\"flexrow-item ml2\"\n        >\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentTaskPreviews && currentTaskPreviews.length > 0\n              ? { preview_file_id: currentTaskPreviews[0].id }\n              : { }\"\n            :empty-width=\"100\"\n            :empty-height=\"60\"\n            :width=\"100\"\n            :with-link=\"false\"\n          />\n        </span>\n\n        <div class=\"title flexrow-item\">\n          <router-link :to=\"taskEntityPath\">\n            <page-title :text=\"currentTask ? title : 'Loading...'\" bold />\n          </router-link>\n        </div>\n\n        <div class=\"flexrow-item flexrow block\">\n          <span class=\"flexrow-item\">\n            {{ $t('tasks.current_status') }}\n          </span>\n          <validation-tag\n            class=\"is-medium flexrow-item\"\n            :task=\"currentTask\"\n            :is-static=\"true\"\n            v-if=\"currentTask\"\n          />\n          <span\n            class=\"flexrow-item\"\n            v-if=\"currentTask.assignees.length > 0\"\n          >\n            {{ $t('tasks.fields.assignees') }}:\n          </span>\n          <span\n            class=\"flexrow-item avatar-wrapper\"\n            :key=\"personId\"\n            v-for=\"personId in currentTask.assignees\"\n          >\n            <people-avatar\n              class=\"flexrow-item\"\n              :key=\"personId\"\n              :person=\"personMap.get(personId)\"\n              :size=\"30\"\n              :font-size=\"16\"\n            />\n           </span>\n           <div class=\"flexrow-item\">\n             {{ $t('tasks.fields.priority') }}:\n             {{ formatPriority(currentTask.priority) }}\n           </div>\n         <subscribe-button\n           class=\"flexrow-item action-button\"\n           :subscribed=\"isAssigned || isSubscribed\"\n           @click=\"toggleSubscribe\"\n           v-if=\"!isAssigned\"\n         />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"task-columns\" ref=\"task-columns\">\n      <div class=\"task-column preview-column\">\n        <div class=\"preview-column-content block\">\n          <div class=\"flexrow preview-header\">\n            <div class=\"flexrow-item\" v-if=\"isPreviews\">\n              <combobox-styled\n                class=\"preview-combo flexrow-item\"\n                :options=\"previewOptions\"\n                v-model=\"selectedPreviewId\"\n              />\n            </div>\n            <div v-else>\n              <em>\n                {{ $t('tasks.no_preview')}}\n              </em>\n            </div>\n\n            <div\n              class=\"set-main-preview flexrow-item flexrow pull-right\"\n              v-if=\"isPreviewButtonVisible\"\n            >\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': loading.setPreview\n                }\"\n                @click=\"setPreview\"\n                v-if=\"isPreviews && isCurrentUserManager\"\n              >\n                <image-icon class=\"icon\" />\n                <span class=\"text\">\n                  {{ $t('tasks.set_preview') }}\n                </span>\n              </button>\n              <span class=\"error flexrow-item\" v-if=\"errors.setPreview\">\n                {{ $t('tasks.set_preview_error') }}\n              </span>\n            </div>\n            <div\n              class=\"set-main-preview flexrow-item pull-right\"\n              v-if=\"currentTask && currentTask.entity && currentTask.entity.preview_file_id === currentPreviewId\">\n              <em>{{ $t('tasks.set_preview_done') }}</em>\n            </div>\n          </div>\n\n          <div class=\"preview-area mt1\">\n            <div\n              v-if=\"isPreviews\"\n            >\n              <preview-player\n                :previews=\"currentPreview.previews\"\n                :task-type-map=\"taskTypeMap\"\n                :entity-preview-files=\"taskEntityPreviews\"\n                :read-only=\"isCurrentUserArtist\"\n                :last-preview-files=\"lastFivePreviews\"\n                :task=\"currentTask\"\n                :extra-wide=\"true\"\n                @annotation-changed=\"onAnnotationChanged\"\n                @add-extra-preview=\"onAddExtraPreviewClicked\"\n                @remove-extra-preview=\"onRemoveExtraPreviewClicked\"\n                @change-current-preview=\"changeCurrentPreview\"\n                @time-updated=\"onTimeUpdated\"\n                ref=\"preview-player\"\n                v-if=\"currentPreview\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"flexrow-item block mt1 mr0 info-block\">\n          <page-subtitle :text=\"$t('main.info')\" />\n          <div class=\"table-body mt1\">\n            <table class=\"datatable\" v-if=\"currentTask\">\n              <tbody class=\"table-body\">\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.estimation') }}</td>\n                  <td>{{ currentTask.estimation }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.duration') }}</td>\n                  <td>{{ formatDuration(currentTask.duration) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.retake_count') }}</td>\n                  <td>{{ currentTask.retake_count }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.start_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.start_date) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.due_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.due_date) }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"pa2\">\n        </div>\n      </div>\n\n      <div class=\"task-column comments-column\">\n        <div v-if=\"currentTask\">\n          <div>\n            <add-comment\n              ref=\"add-comment\"\n              :is-error=\"errors.addComment\"\n              :is-max-retakes-error=\"errors.addCommentMaxRetakes\"\n              :is-loading=\"loading.addComment\"\n              :is-movie=\"isMovie\"\n              :user=\"user\"\n              :team=\"currentTeam\"\n              :task=\"currentTask\"\n              :task-status=\"taskStatusForCurrentUser\"\n              :attached-file-name=\"attachedFileName\"\n              :fps=\"parseInt(currentFps)\"\n              :time=\"currentTime\"\n              :revision=\"currentRevision\"\n              @add-comment=\"addComment\"\n              @add-preview=\"onAddPreviewClicked\"\n              @duplicate-comment=\"onDuplicateComment\"\n              @file-drop=\"selectFile\"\n              @annotation-snapshots-requested=\"extractAnnotationSnapshots\"\n              v-if=\"isCommentingAllowed\"\n            />\n            <div\n              class=\"comments\"\n              v-if=\"currentTaskComments && currentTaskComments.length > 0\"\n            >\n              <comment\n                :comment=\"comment\"\n                :task=\"currentTask\"\n                :highlighted=\"false\"\n                :key=\"comment.id\"\n                :current-user=\"user\"\n                :editable=\"(\n                  comment.person && user.id === comment.person.id ||\n                  isCurrentUserAdmin\n                )\"\n                :is-first=\"index === 0\"\n                :is-last=\"index === pinnedCount\"\n                :is-change=\"isStatusChange(index)\"\n                @ack-comment=\"ackComment\"\n                @pin-comment=\"onPinComment\"\n                @edit-comment=\"onEditComment\"\n                @delete-comment=\"onDeleteComment\"\n                @checklist-updated=\"saveComment\"\n                @time-code-clicked=\"timeCodeClicked\"\n                v-for=\"(comment, index) in currentTaskComments\"\n              />\n            </div>\n            <div class=\"no-comment\" v-else>\n              <em>\n                {{ $t('tasks.no_comment')}}\n              </em>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"has-text-centered\" v-else>\n          <spinner />\n        </div>\n      </div>\n\n    </div>\n\n    <add-preview-modal\n      ref=\"add-preview-modal\"\n      :active=\"modals.addPreview\"\n      :is-loading=\"loading.addPreview\"\n      :is-error=\"errors.addPreview\"\n      :form-data=\"addPreviewFormData\"\n      @cancel=\"modals.addPreview = false\"\n      @fileselected=\"selectFile\"\n      @confirm=\"closeAddPreviewModal\"\n    />\n\n    <add-preview-modal\n      ref=\"add-extra-preview-modal\"\n      :active=\"modals.addExtraPreview\"\n      :is-loading=\"loading.addExtraPreview\"\n      :is-error=\"errors.addExtraPreview\"\n      :form-data=\"addExtraPreviewFormData\"\n      @cancel=\"hideExtraPreviewModal\"\n      @fileselected=\"selectFile\"\n      @confirm=\"createExtraPreview\"\n    />\n\n    <edit-comment-modal\n      :active=\"modals.editComment\"\n      :is-loading=\"loading.editComment\"\n      :is-error=\"errors.editComment\"\n      :comment-to-edit=\"commentToEdit\"\n      :team=\"currentTeam\"\n      @confirm=\"confirmEditTaskComment\"\n      @cancel=\"onCancelEditComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteComment\"\n      :is-loading=\"loading.deleteComment\"\n      :is-error=\"errors.deleteComment\"\n      :text=\"$t('tasks.delete_comment')\"\n      :error-text=\"$t('tasks.delete_comment_error')\"\n      @confirm=\"confirmDeleteTaskComment\"\n      @cancel=\"onCancelDeleteComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteExtraPreview\"\n      :is-loading=\"loading.deleteExtraPreview\"\n      :is-error=\"errors.deleteExtraPreview\"\n      :text=\"$t('tasks.delete_preview')\"\n      :error-text=\"$t('tasks.delete_preview_error')\"\n      @cancel=\"hideRemoveExtraPreviewModal\"\n      @confirm=\"confirmDeleteTaskPreview\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport {\n  ImageIcon\n} from 'vue-feather-icons'\n\nimport { getTaskEntityPath } from '@/lib/path'\nimport drafts from '@/lib/drafts'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport AddComment from '@/components/widgets/AddComment'\nimport AddPreviewModal from '@/components/modals/AddPreviewModal'\nimport Comment from '@/components/widgets/Comment'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled.vue'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditCommentModal from '@/components/modals/EditCommentModal'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar'\nimport Spinner from '@/components/widgets/Spinner'\nimport SubscribeButton from '@/components/widgets/SubscribeButton'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\nimport ValidationTag from '@/components/widgets/ValidationTag'\nimport PreviewPlayer from '@/components/previews/PreviewPlayer'\n\nexport default {\n  name: 'task',\n  mixins: [formatListMixin],\n  components: {\n    AddComment,\n    AddPreviewModal,\n    ComboboxStyled,\n    Comment,\n    DeleteModal,\n    EditCommentModal,\n    EntityThumbnail,\n    ImageIcon,\n    PageSubtitle,\n    PageTitle,\n    PeopleAvatar,\n    PreviewPlayer,\n    Spinner,\n    SubscribeButton,\n    TaskTypeName,\n    ValidationTag\n  },\n\n  data () {\n    return {\n      attachedFileName: '',\n      currentTime: 0,\n      selectedTab: 'validation',\n      taskLoading: {\n        isLoading: true,\n        isError: false\n      },\n      modals: {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      loading: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      errors: {\n        addComment: false,\n        addCommentMaxRetakes: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      addPreviewFormData: null,\n      addExtraPreviewFormData: null,\n      currentTask: null,\n      currentTaskComments: [],\n      currentTaskPreviews: [],\n      commentToEdit: null,\n      isSubscribed: false,\n      selectedPreviewId: null\n    }\n  },\n\n  created () {\n    this.clearSelectedTasks()\n    this.loadTaskData()\n  },\n\n  mounted () {\n    this.reset()\n    this.$nextTick(() => {\n      if (this.$refs['task-columns']) {\n        this.$refs['task-columns'].scrollTop = 100\n        window.scrollTo(0, 0)\n      }\n    })\n  },\n\n  beforeDestroy () {\n    if (this.$refs['add-comment']) {\n      const lastComment = `${this.$refs['add-comment'].text}`\n      drafts.setTaskDraft(this.currentTask.id, lastComment)\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedShots',\n      'displayedAssets',\n      'getTaskComments',\n      'getTaskPreviews',\n      'getTaskComment',\n      'isCurrentUserAdmin',\n      'isCurrentUserArtist',\n      'isCurrentUserSupervisor',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isSingleEpisode',\n      'isTVShow',\n      'personMap',\n      'productionMap',\n      'route',\n      'taskEntityPreviews',\n      'taskStatus',\n      'taskStatusForCurrentUser',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    previewOptions () {\n      return this.currentTaskPreviews.map(preview => {\n        return {\n          label: `v${preview.revision}`,\n          value: preview.id\n        }\n      })\n    },\n\n    isPreviewButtonVisible () {\n      return (\n        this.isCurrentUserManager &&\n        this.currentTask &&\n        this.currentTask.entity &&\n        this.currentTask.entity.preview_file_id !== this.currentPreviewId &&\n        ['png', 'mp4'].includes(this.extension)\n      )\n    },\n\n    isMovie () {\n      return this.extension === 'mp4'\n    },\n\n    extension () {\n      return this.currentPreview ? this.currentPreview.extension : ''\n    },\n\n    currentPreviewId () {\n      return this.currentPreview ? this.currentPreview.id : ''\n    },\n\n    currentPreview () {\n      if (this.isPreviews) {\n        let currentPreview = this.currentTaskPreviews[0]\n        const previewId = this.route.params.preview_id\n        if (this.selectedPreviewId) {\n          currentPreview = this.currentTaskPreviews.find((preview) => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview\n      } else {\n        return null\n      }\n    },\n\n    currentFps () {\n      return this.productionMap.get(this.currentTask.project_id).fps || '25'\n    },\n\n    currentRevision () {\n      return this.currentPreview ? this.currentPreview.revision : 0\n    },\n\n    isCommentingAllowed () {\n      return (\n        this.isCurrentUserManager ||\n        this.isCurrentUserClient ||\n        this.currentTask.assignees.find(\n          (personId) => personId === this.user.id\n        )\n      )\n    },\n\n    taskTypeBorder () {\n      let border = 'transparent'\n      if (this.currentTask) border = this.currentTask.task_type_color\n      return {\n        'border-left': `4px solid ${border}`\n      }\n    },\n\n    deleteTaskPath () {\n      return this.taskPath(this.currentTask, 'task-delete')\n    },\n\n    isPreviews () {\n      return this.currentTaskPreviews && this.currentTaskPreviews.length > 0\n    },\n\n    taskEntityPath () {\n      if (this.currentTask) {\n        const episodeId = this.currentEpisode\n          ? this.currentEpisode.id\n          : this.$route.params.episode_id\n        return getTaskEntityPath(this.currentTask, episodeId)\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    lastFivePreviews () {\n      if (this.currentTaskPreviews) {\n        return this.currentTaskPreviews.slice(0, 5)\n      } else {\n        return []\n      }\n    },\n\n    entityList () {\n      const entity = this.displayedShots.find((entity) => {\n        return entity.id === this.currentTask.entity_id\n      })\n      if (entity) {\n        return this.displayedShots\n      } else {\n        return this.displayedAssets\n      }\n    },\n\n    previousEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n        let firstTraversal = false\n\n        let previousEntityIndex = entityIndex - 1\n        if (previousEntityIndex < 0) {\n          previousEntityIndex = this.entityList.length - 1\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[previousEntityIndex]) {\n            const entity = this.entityList[previousEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            previousEntityIndex--\n            if (previousEntityIndex < 0) {\n              previousEntityIndex = this.entityList.length\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    nextEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        let firstTraversal = false\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n\n        let nextEntityIndex = entityIndex + 1\n        if (nextEntityIndex >= this.entityList.length) {\n          nextEntityIndex = 0\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[nextEntityIndex]) {\n            const entity = this.entityList[nextEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            nextEntityIndex++\n            if (nextEntityIndex >= this.entityList.length) {\n              nextEntityIndex = 0\n\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    title () {\n      if (this.currentTask) {\n        const type = this.currentTask.entity_type_name\n        let entityName =\n          this.currentTask.full_entity_name || this.currentTask.entity_name\n        if (this.isTVShow && type === 'Shot') {\n          entityName = entityName\n            .split('/')\n            .splice(1)\n            .join('/')\n        }\n        return `${entityName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    windowTitle () {\n      if (this.currentTask) {\n        const taskTypeName = this.currentTask.task_type_name\n        return `${this.title} / ${taskTypeName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    deleteText () {\n      if (this.currentTask) {\n        const taskType = this.taskTypeMap.get(this.currentTask.task_type_id)\n        return this.$t('main.delete_text', {\n          name: `${this.currentTask.entity_name} / ${taskType.name}`\n        })\n      } else {\n        return ''\n      }\n    },\n\n    isAssigned () {\n      if (this.currentTask) {\n        return this.currentTask.assignees.some((assigneeId) => {\n          return assigneeId === this.user.id\n        })\n      } else {\n        return false\n      }\n    },\n\n    currentTaskType () {\n      if (this.currentTask) {\n        return this.taskTypeMap.get(this.currentTask.task_type_id)\n      } else {\n        return null\n      }\n    },\n\n    currentTeam () {\n      return this.currentProduction.team.map(id => this.personMap.get(id))\n    },\n\n    pinnedCount () {\n      return this.currentTaskComments.filter(c => c.pinned).length\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'ackComment',\n      'addCommentPreview',\n      'addCommentExtraPreview',\n      'commentTask',\n      'commentTaskWithPreview',\n      'changeCommentPreview',\n      'clearSelectedTasks',\n      'deleteTask',\n      'deleteTaskPreview',\n      'deleteTaskComment',\n      'editTaskComment',\n      'loadEpisodes',\n      'loadTask',\n      'loadShots',\n      'loadAssets',\n      'loadPreviewFileFormData',\n      'loadTaskComments',\n      'loadTaskSubscribed',\n      'refreshComment',\n      'refreshPreview',\n      'pinComment',\n      'subscribeToTask',\n      'setCurrentEpisode',\n      'unsubscribeFromTask',\n      'updatePreviewAnnotation'\n    ]),\n\n    loadTaskData () {\n      const task = this.getCurrentTask()\n      if (!task) {\n        this.taskLoading = { isLoading: true, isError: false }\n        this.loadTask({ taskId: this.route.params.task_id })\n          .then(task => {\n            let loadingFunction = (callback) => {\n              this.loadAssets()\n                .then(callback)\n            }\n\n            if (task.entity_type_name === 'Shot') {\n              loadingFunction = (callback) => {\n                this.loadEpisodes()\n                  .then(() => {\n                    if (this.isTVShow) {\n                      this.setCurrentEpisode(task.episode.id)\n                    }\n                    this.loadShots(callback)\n                  })\n                  .catch(callback)\n              }\n            }\n            loadingFunction(() => {\n              this.currentTask = task\n              this.loadTaskComments({\n                taskId: task.id,\n                entityId: task.entity_id\n              })\n                .then(() => this.loadTaskSubscribed({ taskId: task.id }))\n                .then((subscribed) => {\n                  this.isSubscribed = subscribed\n                  this.reset()\n                  this.taskLoading = { isLoading: false, isError: false }\n                }).catch((err) => {\n                  console.error(err)\n                  this.taskLoading = { isLoading: false, isError: true }\n                })\n            })\n          })\n      } else {\n        const taskId = this.route.params.task_id\n        this.currentTask = task\n        this.loadTaskComments({ taskId, entityId: task.entity_id })\n          .then(() => this.loadTaskSubscribed({ taskId }))\n          .then(subscribed => {\n            this.isSubscribed = subscribed\n            this.reset()\n          })\n          .catch(err => {\n            console.error(err)\n            this.taskLoading.isError = true\n          })\n      }\n    },\n\n    getCurrentTask () {\n      return this.taskMap.get(this.route.params.task_id)\n    },\n\n    getCurrentComment () {\n      if (this.route.params.comment_id) {\n        return this.getTaskComment(\n          this.route.params.task_id,\n          this.route.params.comment_id\n        )\n      }\n    },\n\n    getCurrentTaskComments () {\n      return this.getTaskComments(this.route.params.task_id)\n    },\n\n    getCurrentTaskPreviews () {\n      return this.getTaskPreviews(this.route.params.task_id)\n    },\n\n    addComment (comment, attachment, checklist, taskStatusId) {\n      const params = {\n        taskId: this.currentTask.id,\n        taskStatusId: taskStatusId,\n        comment: comment,\n        checklist,\n        attachment\n      }\n      let action = 'commentTask'\n      if (this.attachedFileName) action = 'commentTaskWithPreview'\n      this.loading.addComment = true\n      this.errors.addComment = false\n      this.errors.addCommentMaxRetakes = false\n      this.$store.dispatch(action, params)\n        .then(() => {\n          this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          this.resetPreview()\n          this.$refs['add-preview-modal'].reset()\n          this.reset()\n          this.attachedFileName = ''\n          this.loading.addComment = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addComment = true\n          this.loading.addComment = false\n          const isRetakeError =\n            err.response &&\n            err.response.body.message &&\n            err.response.body.message.indexOf('retake') > 0\n          this.errors.addComment = !isRetakeError\n          this.errors.addCommentMaxRetakes = isRetakeError\n        })\n    },\n\n    reset () {\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      this.currentTask = this.getCurrentTask()\n      if (this.currentTask) {\n        const draft = drafts.getTaskDraft(this.currentTask.id)\n        if (draft) this.$refs['add-comment'].text = draft\n      }\n      setTimeout(() => {\n        if (this.$route.params.preview_id) {\n          this.selectedPreviewId = this.$route.params.preview_id\n        }\n      }, 1000)\n    },\n\n    selectFile (forms) {\n      this.loadPreviewFileFormData(forms)\n      this.attachedFileName = forms\n        .map((form) => form.get('file').name)\n        .join(', ')\n    },\n\n    isHighlighted (comment) {\n      return comment.preview && comment.preview.id === this.currentPreviewId\n    },\n\n    createExtraPreview () {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.errors.addExtraPreview = false\n      this.loading.addExtraPreview = true\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === preview.id) >= 0\n      })\n      this.addCommentExtraPreview({\n        taskId: this.currentTask.id,\n        previewId: this.currentPreview.id,\n        commentId: comment.id\n      })\n        .then(() => {\n          this.loading.addExtraPreview = false\n          this.modals.addExtraPreview = false\n          this.$refs['add-extra-preview-modal'].reset()\n          setTimeout(() => {\n            this.$refs['preview-player'].displayLast()\n          }, 0)\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addExtraPreview = true\n          this.loading.addExtraPreview = false\n        })\n    },\n\n    resetPreview (changeRoute = true) {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      if (preview && changeRoute) {\n        this.$router.push(this.previewPath(preview.id))\n      }\n    },\n\n    setPreview () {\n      this.loading.setPreview = true\n      this.errors.setPreview = false\n      this.$store.dispatch('setPreview', {\n        taskId: this.currentTask.id,\n        entityId: this.currentTask.entity.id,\n        previewId: this.currentPreviewId\n      })\n        .then(() => {\n          this.loading.setPreview = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.setPreview = true\n        })\n    },\n\n    confirmEditTaskComment (comment) {\n      this.loading.editComment = true\n      this.errors.editComment = false\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment\n      })\n        .then(() => {\n          this.loading.editComment = false\n          this.modals.editComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.editComment = true\n        })\n    },\n\n    saveComment (comment, checklist) {\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment,\n        checklist\n      })\n    },\n\n    confirmDeleteTaskComment () {\n      this.loading.deleteComment = true\n      this.errors.deleteComment = false\n      const commentId = this.commentToEdit.id\n\n      this.deleteTaskComment({\n        taskId: this.currentTask.id,\n        commentId\n      })\n        .then(() => {\n          this.loading.deleteComment = false\n          this.reset()\n          if (this.isPreviews) this.resetPreview()\n          this.modals.deleteComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.deleteComment = false\n          this.errors.deleteComment = true\n        })\n    },\n\n    confirmDeleteTaskPreview () {\n      this.loading.deleteExtraPreview = true\n      this.errors.deleteExtraPreview = false\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === previewId) >= 0\n      })\n\n      this.$refs['preview-player'].displayFirst()\n      this.deleteTaskPreview({\n        taskId: this.currentTask.id,\n        commentId: comment.id,\n        previewId: this.currentExtraPreviewId\n      })\n        .then(() => {\n          this.loading.deleteExtraPreview = false\n          this.resetPreview()\n          this.hideRemoveExtraPreviewModal()\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.deleteExtraPreview = false\n          this.errors.deleteExtraPreview = true\n        })\n    },\n\n    onPreviewAdded (eventData) {\n      const taskId = eventData.task_id\n      const commentId = eventData.comment_id\n      const previewId = eventData.preview_file_id\n      const revision = eventData.revision\n      const extension = eventData.extension\n      const comment = this.$store.getters.getTaskComment(taskId, commentId)\n\n      if (\n        this.currentTask &&\n        comment &&\n        (\n          comment.previews.length === 0 ||\n          comment.previews[0].id !== previewId\n        ) &&\n        taskId === this.currentTask.id\n      ) {\n        this.$store.commit('ADD_PREVIEW_END', {\n          preview: {\n            id: previewId,\n            revision,\n            extension: extension\n          },\n          taskId,\n          commentId,\n          comment\n        })\n        this.resetPreview()\n      }\n    },\n\n    toggleSubscribe () {\n      if (this.currentTask && !this.isAssigned) {\n        if (this.isSubscribed) {\n          this.unsubscribeFromTask(this.currentTask.id)\n          this.isSubscribed = false\n        } else {\n          this.subscribeToTask(this.currentTask.id)\n          this.isSubscribed = true\n        }\n      }\n    },\n\n    taskPath (task, section = 'task') {\n      if (!task) {\n        task = this.currentTask\n      } else {\n        task.project_id = this.currentTask.project_id\n        task.episode_id = this.currentTask.episode_id\n      }\n\n      let route = { name: 'open-productions' }\n      if (task) {\n        route = {\n          name: section,\n          params: {\n            production_id: task.project_id,\n            task_id: task.id\n          }\n        }\n\n        if (this.isTVShow && this.currentEpisode) {\n          route.name = `episode-${section}`\n          route.params.episode_id = task.episode_id || this.currentEpisode.id\n        }\n      }\n      return route\n    },\n\n    previewPath (previewId) {\n      const route = this.taskPath(this.currentTask, 'task-preview')\n\n      if (route.params) {\n        route.params.preview_id = previewId\n      }\n      return route\n    },\n\n    onAnnotationChanged ({ preview, additions, deletions, updates }) {\n      const taskId = this.currentTask.id\n      this.updatePreviewAnnotation({\n        taskId, preview, additions, deletions, updates\n      })\n    },\n\n    onAddExtraPreviewClicked () {\n      this.modals.addExtraPreview = true\n    },\n\n    onRemoveExtraPreviewClicked (preview) {\n      this.showRemoveExtraPreviewModal(preview)\n    },\n\n    hideExtraPreviewModal () {\n      this.modals.addExtraPreview = false\n    },\n\n    showRemoveExtraPreviewModal (preview) {\n      this.currentExtraPreviewId = preview.id\n      this.modals.deleteExtraPreview = true\n    },\n\n    hideRemoveExtraPreviewModal () {\n      this.modals.deleteExtraPreview = false\n    },\n\n    onAddPreviewClicked () {\n      this.modals.addPreview = true\n    },\n\n    closeAddPreviewModal () {\n      this.modals.addPreview = false\n    },\n\n    onDuplicateComment (comment) {\n      this.$refs['add-comment'].setValue(comment)\n    },\n\n    onPinComment (comment) {\n      this.pinComment(comment)\n    },\n\n    onEditComment (comment) {\n      this.commentToEdit = comment\n      this.modals.editComment = true\n    },\n\n    onDeleteComment (comment) {\n      this.commentToEdit = comment\n      this.modals.deleteComment = true\n    },\n\n    onCancelEditComment (comment) {\n      this.modals.editComment = false\n    },\n\n    onCancelDeleteComment (comment) {\n      this.modals.deleteComment = false\n    },\n\n    onTimeUpdated (time) {\n      this.currentTime = time\n    },\n\n    changeCurrentPreview (preview) {\n      this.$router.push(this.previewPath(preview.id))\n    },\n\n    onRemoteAcknowledge (eventData, type) {\n      if (this.currentTask) {\n        const comment = this.currentTaskComments.find(\n          c => c.id === eventData.comment_id\n        )\n        const user = this.personMap.get(eventData.person_id)\n        if (comment && user) {\n          if (this.user.id === user.id) {\n            if (\n              (\n                type === 'ack' &&\n                !comment.acknowledgements.includes(user.id)\n              ) ||\n              (\n                type === 'unack' &&\n                comment.acknowledgements.includes(user.id)\n              )\n            ) {\n              this.$store.commit('ACK_COMMENT', { comment, user })\n            }\n          } else {\n            this.$store.commit('ACK_COMMENT', { comment, user })\n          }\n        }\n      }\n    },\n\n    isStatusChange (index) {\n      const comments = this.currentTaskComments\n      const comment = comments[index]\n      return (\n        index === comments.length - 1 ||\n        comment.task_status_id !== comments[index + 1].task_status_id\n      )\n    },\n\n    timeCodeClicked (\n      { versionRevision, minutes, seconds, milliseconds, frame }\n    ) {\n      this.changeCurrentPreview(this.currentTaskPreviews.find(\n        p => p.revision === parseInt(versionRevision)\n      ))\n      setTimeout(() => {\n        this.$refs['preview-player'].setCurrentFrame(frame)\n        this.$refs['preview-player'].focus()\n      }, 20)\n    },\n\n    async extractAnnotationSnapshots () {\n      this.$refs['add-comment'].showAnnotationLoading()\n      const files =\n        await this.$refs['preview-player'].extractAnnotationSnapshots()\n      this.$refs['add-comment'].setAnnotationSnapshots(files)\n      this.$refs['add-comment'].hideAnnotationLoading()\n      return files\n    },\n\n    isPreviewPlayerReadOnly () {\n      if (this.currentTask) {\n        if (this.isCurrentUserManager || this.isCurrentUserClient) {\n          return false\n        } else if (this.isCurrentUserSupervisor) {\n          if (this.user.departments.length === 0) {\n            return false\n          } else {\n            const taskType = this.taskTypeMap.get(this.currentTask.task_type_id)\n            return !(taskType.department_id && this.user.departments.includes(\n              taskType.department_id))\n          }\n        }\n      }\n      return true\n    }\n  },\n\n  watch: {\n    $route () {\n      if (this.$route.params.task_id !== this.currentTask.id) {\n        this.loadTaskData()\n      }\n    },\n\n    selectedPreviewId () {\n      if (this.currentTask) {\n        this.$router.push(this.previewPath(this.selectedPreviewId))\n      }\n    }\n  },\n\n  socket: {\n    events: {\n      'preview-file:add-file' (eventData) {\n        this.onPreviewAdded(eventData)\n      },\n\n      'comment:acknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'ack')\n      },\n\n      'comment:unacknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'unack')\n      },\n\n      'preview-file:update' (eventData) {\n        const comment = this.currentTaskComments.find(\n          c => (\n            c.previews &&\n            c.previews.length > 0 &&\n            c.previews[0].id === eventData.preview_file_id\n          )\n        )\n        if (comment && this.currentTask) {\n          this.refreshPreview({\n            taskId: this.currentTask.id,\n            previewId: eventData.preview_file_id\n          }).then(preview => {\n            comment.previews[0].validation_status = preview.validation_status\n          })\n        }\n      },\n\n      'comment:new' (eventData) {\n        setTimeout(() => {\n          if (\n            this.getCurrentTaskComments().length !==\n            this.currentTaskComments.length\n          ) {\n            this.currentTaskComments = this.getCurrentTaskComments()\n            this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          }\n        }, 1000)\n      },\n\n      'comment:reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            const reply = comment.replies.find(\n              r => r.id === eventData.reply_id\n            )\n            if (!reply) {\n              this.refreshComment({\n                taskId: this.currentTask.id,\n                commentId: eventData.comment_id\n              })\n                .then(remoteComment => {\n                  comment.replies = remoteComment.replies\n                })\n                .catch(console.error)\n            }\n          }\n        }\n      },\n\n      'comment:delete-reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            this.$store.commit('REMOVE_REPLY_FROM_COMMENT', {\n              comment,\n              reply: { id: eventData.reply_id }\n            })\n          }\n        }\n      },\n\n      'preview-file:annotation-update' (eventData) {\n        const previewPlayer = this.$refs['preview-player']\n        const isValid = previewPlayer.isValidPreviewModification(\n          eventData.preview_file_id,\n          eventData.updated_at\n        )\n        if (isValid) {\n          this.refreshPreview({\n            previewId: previewPlayer.currentPreview.id,\n            taskId: previewPlayer.currentPreview.task_id\n          }).then(preview => {\n            if (!previewPlayer.notSaved) {\n              this.currentTaskPreviews = this.getCurrentTaskPreviews()\n              this.$nextTick(() => {\n                previewPlayer.reloadAnnotations()\n                previewPlayer.loadAnnotation()\n              })\n            }\n          })\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    let title = 'Loading task... - Kitsu'\n    if (this.currentTask) {\n      const taskTypeName =\n        this.taskTypeMap.get(this.currentTask.task_type_id).name\n      title = `${this.title} / ${taskTypeName} - Kitsu`\n    }\n    return { title }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .task-information,\n.dark .add-comment,\n.dark .comment,\n.dark .no-comment,\n.dark .column {\n  background: #46494F;\n  border-color: $dark-grey;\n  box-shadow: 0px 0px 6px #333;\n}\n\nh2.subtitle {\n  margin: 0;\n  padding: 0;\n}\n\n.page {\n  background: #F9F9F9;\n  margin-top: 60px;\n  padding: 0;\n}\n\n.page.column {\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\n.page-header {\n  margin: 1em 1em 0 1em;\n}\n\n.navigation-buttons {\n  font-size: 1em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.navigation-buttons .arrow {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.navigation-buttons a {\n  color: $grey;\n}\n\n.selected {\n  border: 0;\n}\n\n.source {\n  color: #AAA;\n  font-size: 0.8em;\n}\n\nvideo {\n  width: 100%;\n}\n\n.validation-buttons button {\n  width: 100%;\n  margin-bottom: 0.3em;\n  border-width: 2px;\n  font-weight: bold;\n}\n\n.preview-row {\n  margin-bottom: 0.5em;\n}\n\n.add-comment {\n  margin-bottom: 1em;\n  padding: 1em;\n  box-shadow: 0px 0px 6px #E0E0E0;\n}\n\n.no-comment {\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  padding: 1em;\n  border-radius: 5px;\n}\n\n.comment {\n  box-shadow: 0px 0px 6px #E0E0E0;\n  margin-top: 0.3em;\n}\n\n.task-columns {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n\n.task-column {\n  padding: 1em;\n}\n\n.comments-column {\n  flex: 1;\n}\n\n.preview-column {\n  overflow: auto;\n  flex: 2;\n}\n\n.preview-column-content {\n  overflow-x: hidden;\n}\n\n.preview-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.page-header .tag {\n  border-radius: 0;\n  font-weight: bold;\n  margin-right: 0.5em;\n}\n\n.assignees {\n  display: flex;\n}\n\n.assignees span {\n  margin-right: 0.2em;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.entity-thumbnail {\n  margin-right: 0.3em;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n}\n\n.pull-right {\n  margin-left: auto;\n}\n\n.title a {\n  color: inherit;\n}\n\n.set-main-preview {\n  height: 30px;\n}\n\n.back-link {\n  padding-top: 6px;\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100% - 60px);\n}\n\n.task-columns {\n  display: flex;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.task-column {\n  overflow-y: auto;\n}\n\n.info-block {\n  margin-right: 0;\n}\n\n.task-type.block {\n  margin-bottom: 0;\n}\n\n.entity-thumbnail {\n  margin-top: 5px;\n}\n\n@media screen and (max-width: 768px) {\n  .action-button {\n    display: none;\n  }\n\n  .title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n\n  .header-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-title .flexrow-item {\n    margin-bottom: 0.5em;\n  }\n\n  .task-column {\n    width: 100%;\n    overflow-y: initial;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=29a0017e&scoped=true&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=29a0017e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29a0017e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=29a0017e&prod&lang=scss&scoped=true&\""],"sourceRoot":""}