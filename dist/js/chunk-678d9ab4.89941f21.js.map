{"version":3,"sources":["webpack:///./src/components/pages/Playlist.vue?475f","webpack:///./src/components/pages/Playlist.vue?5dcb","webpack:///./src/components/widgets/ErrorText.vue?6cde","webpack:///src/components/widgets/ErrorText.vue","webpack:///./src/components/widgets/ErrorText.vue?866c","webpack:///./src/components/widgets/ErrorText.vue","webpack:///src/components/pages/Playlist.vue","webpack:///./src/components/pages/Playlist.vue?f852","webpack:///./src/components/pages/Playlist.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","ref","class","column","toggled","isListToggled","_e","attrs","taskTypeList","$t","model","callback","$$v","taskTypeId","staticStyle","on","$event","sortOptions","currentSort","isCurrentUserManager","isCurrentUserSupervisor","key","button","loading","addPlaylist","showAddModal","_v","_s","playlists","_l","playlist","id","for_client","selected","currentPlaylist","style","playlistElementStyle","getPlaylistPath","first_preview_file_id","formatDate","updated_at","errors","length","playlistsInit","created_at","big","currentEntities","isAddingEntity","isAssetPlaylist","showEditModal","toggleAddEntities","onPreviewChanged","onTaskTypeChanged","$router","push","playlistsPath","removeEntity","onOrderChange","onAnnotationChanged","onForClientChanged","onAnnotationsRefreshed","addEntitiesText","onSearchChange","modals","isBuildFilterDisplayed","isAdditionLoading","addCurrentSelection","addDaily","addDailyPending","isTVShow","addEpisode","addEpisodePending","addMovie","isShotsLoading","isAssetsLoading","typeAssets","i","asset_type_name","filter","a","canceled","asset","preventDefault","addEntityToPlaylist","preview_file_id","sequenceShots","sequence_name","sequence_id","addSequence","s","shot","playlisted","undefined","color","getTaskStatus","isEditDisplayed","editPlaylist","playlistToEdit","hideEditModal","confirmEditPlaylist","confirmBuildFilter","staticRenderFns","alignRight","hidden","text","props","default","type","String","Boolean","component","components","BuildFilterModal","ButtonSimple","Combobox","ComboboxTaskType","ErrorText","EditPlaylistModal","LightEntityThumbnail","PageSubtitle","PlaylistPlayer","PlusIcon","SearchField","Spinner","XIcon","data","page","sortedPlaylists","previewFileMap","Map","previewFileEntityMap","isDeleteDisplayed","addWeekly","deletePlaylist","playlistLoading","computed","for_entity","isAddSearchVisible","lastPlaylistsUpdated","lastPlaylistsCreated","slice","playlistPlayer","$refs","tvShowPageTitle","currentEpisode","episodeName","shortPageTitle","methods","entity","shotMap","get","assetMap","taskId","task","taskStatus","loadShotsData","loadShots","loadAssetsData","displayedAssets","loadAssets","Promise","resolve","loadPlaylistsData","force","loadPlaylists","sortBy","setFirstPlaylist","onPlaylistListScroll","$options","silentMore","maxHeight","loadMorePlaylists","rebuildCurrentEntities","shots","forEach","playlistEntity","tmpEntities","previewFileGroups","previewFiles","$nextTick","preview_file_annotations","preview","annotations","localPreview","convertEntityToPlaylistFormat","entityInfo","parent_name","preview_files","preview_file_extension","preview_file_task_id","preview_file_previews","preview_nb_frames","nb_frames","set","previews","setCurrentPlaylist","loadPlaylist","err","console","error","currentShots","addEntity","loadEntityPreviewFiles","addToStorePlaylistAndSave","pushEntityToPlaylist","addToPlayerPlaylist","entityList","removeEntityPreviewFromPlaylist","clearCurrentPlaylist","resetPlaylist","silent","addEntities","addAllPending","getPending","reverse","entities","changePlaylistPreview","previewFileId","changePlaylistOrder","info","updatePreviewAnnotation","setValue","query","searchQuery","setAssetSearch","displayMoreAssets","setShotSearch","displayMoreShots","forClient","runAddPlaylist","form","production_id","currentProduction","is_for_all","task_type_id","newPlaylist","episode_id","runEditPlaylist","Object","assign","goFirstPlaylist","params","playlist_id","changePlaylistType","onBodyScroll","position","scrollTop","resetSorting","includes","order","reloadAll","mounted","localStorage","getItem","watch","$route","$store","commit","setItem","onWindowResize","socket","events","playlistMap","eventData","refreshPlaylist","build_jobs","build_job_id","status","metaInfo"],"mappings":"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","file":"js/chunk-678d9ab4.89941f21.js","sourcesContent":["export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=style&index=0&id=3099eb2c&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"playlists page fixed-page dark\"},[_c('div',{staticClass:\"columns\"},[_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onPlaylistListScroll),expression:\"onPlaylistListScroll\"}],ref:\"playlistList\",class:{\n        'playlist-list-column': true,\n        column: true,\n        toggled: _vm.isListToggled\n      }},[_c('div',{staticClass:\"flexrow top-section\"},[(!_vm.isListToggled)?_c('combobox-task-type',{staticClass:\"flexrow-item selector mb1\",attrs:{\"task-type-list\":_vm.taskTypeList,\"label\":_vm.$t('playlists.filter_task_type'),\"thin\":true},model:{value:(_vm.taskTypeId),callback:function ($$v) {_vm.taskTypeId=$$v},expression:\"taskTypeId\"}}):_vm._e(),(!_vm.isListToggled)?_c('span',{staticClass:\"filler\"}):_vm._e(),_c('button-simple',{staticClass:\"flexrow-item\",staticStyle:{\"flex\":\"0\"},attrs:{\"icon\":_vm.isListToggled ? 'right' : 'left',\"is-small\":\"\"},on:{\"click\":function($event){_vm.isListToggled = !_vm.isListToggled}}})],1),_c('div',{staticClass:\"flexrow\"},[(!_vm.isListToggled)?[_c('combobox',{staticClass:\"flexrow-item mb2\",attrs:{\"label\":_vm.$t('main.sorted_by'),\"options\":_vm.sortOptions,\"locale-key-prefix\":\"playlists.fields.\"},model:{value:(_vm.currentSort),callback:function ($$v) {_vm.currentSort=$$v},expression:\"currentSort\"}})]:_vm._e()],2),((_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor) && !_vm.isListToggled)?_c('button',{key:\"new-playlist-button\",class:{\n          button: true,\n          'is-loading': _vm.loading.addPlaylist\n        },on:{\"click\":_vm.showAddModal}},[_c('plus-icon',{staticClass:\"icon is-small\"}),_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")],1):_vm._e(),(!_vm.loading.playlists)?_c('div',{staticClass:\"playlists\"},_vm._l((_vm.playlists),function(playlist){return _c('router-link',{key:playlist.id,class:{\n            'playlist-item': true,\n            'for-client': playlist.for_client || false,\n            selected: playlist.id === _vm.currentPlaylist.id\n          },style:(_vm.playlistElementStyle(playlist)),attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[(!_vm.isListToggled)?_c('div',[_c('span',[_vm._v(\" \"+_vm._s(playlist.name)+\" \")]),_c('span',{staticClass:\"playlist-date\",attrs:{\"title\":\"last modified\"}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])]):_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"38px\",\"height\":\"30px\",\"max-width\":\"38px\",\"max-height\":\"30px\",\"empty-width\":\"38px\",\"empty-height\":\"30px\",\"title\":playlist.name}})],1)])}),1):_c('spinner',{staticClass:\"mt2\"}),(_vm.errors.playlistLoading)?_c('error-text',{attrs:{\"text\":\"$t('playlists.loading_error')\"}}):_vm._e()],1),(_vm.playlists.length > 0 && !_vm.currentPlaylist.id && !_vm.loading.playlist)?_c('div',{staticClass:\"playlist-column no-selection\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_creation')))]),(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsCreated),function(playlist){return _c('router-link',{key:'recent-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.created_at'))+\" \"+_vm._s(_vm.formatDate(playlist.created_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"}),_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_modification')))]),(!_vm.loading.playlists)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsUpdated),function(playlist){return _c('router-link',{key:'recent-modified-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"})],1):(_vm.playlists.length === 0)?_c('div',{staticClass:\"playlist-column no-selection has-text-centered\"},[(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',[_c('p',{staticClass:\"empty-explaination\"},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.no_playlist'))+\" \")]),(_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor)?_c('button',{key:\"new-playlist-button\",class:{\n            big: true,\n            button: true,\n            'is-loading': _vm.loading.addPlaylist\n          },on:{\"click\":_vm.showAddModal}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")]):_vm._e()]):_c('spinner',{staticClass:\"mt2\"})],1):_c('div',{staticClass:\"playlist-column column\"},[_c('playlist-player',{ref:\"playlist-player\",attrs:{\"playlist\":_vm.currentPlaylist,\"entities\":_vm.currentEntities,\"is-loading\":_vm.loading.playlist,\"is-adding-entity\":_vm.isAddingEntity,\"is-asset-playlist\":_vm.isAssetPlaylist},on:{\"edit-clicked\":_vm.showEditModal,\"show-add-entities\":_vm.toggleAddEntities,\"preview-changed\":_vm.onPreviewChanged,\"task-type-changed\":_vm.onTaskTypeChanged,\"playlist-deleted\":function($event){return _vm.$router.push(_vm.playlistsPath)},\"remove-entity\":_vm.removeEntity,\"order-change\":_vm.onOrderChange,\"annotation-changed\":_vm.onAnnotationChanged,\"for-client-changed\":_vm.onForClientChanged,\"annotations-refreshed\":_vm.onAnnotationsRefreshed}}),((_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor) && _vm.isAddingEntity && !_vm.loading.playlist)?_c('div',[_c('div',{staticClass:\"addition-header\"},[_c('div',{staticClass:\"flexrow\"},[_c('page-subtitle',{staticClass:\"flexrow-item\",attrs:{\"text\":_vm.addEntitiesText}}),_c('span',{staticClass:\"filler\"}),_c('a',{staticClass:\"close-button\",on:{\"click\":_vm.toggleAddEntities}},[_c('x-icon')],1)],1),_c('div',{staticClass:\"flexrow\"},[_c('search-field',{ref:\"search-field\",staticClass:\"flexrow-item\",attrs:{\"can-save\":false,\"placeholder\":_vm.isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'},on:{\"change\":_vm.onSearchChange}}),_c('button-simple',{staticClass:\"flexrow-item\",attrs:{\"title\":_vm.$t('entities.build_filter.title'),\"icon\":\"funnel\"},on:{\"click\":function($event){_vm.modals.isBuildFilterDisplayed = true}}}),(_vm.isAddSearchVisible)?_c('button',{class:{\n                button: true,\n                'flexrow-item': true,\n                'add-sequence': true\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addCurrentSelection}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_selection'))+\" \")]):_vm._e(),_c('span',{staticClass:\"filler\"}),(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addDaily\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addDailyPending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.build_daily'))+\" \")]):_vm._e(),(_vm.isTVShow && !_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addEpisode\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addEpisodePending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_episode'))+\" \")]):(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addMovie\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addMovie}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_movie'))+\" \")]):_vm._e()],1)])]):_vm._e(),((_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor) && _vm.isAddingEntity)?_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onBodyScroll),expression:\"onBodyScroll\"}],staticClass:\"addition-section\"},[(_vm.isShotsLoading || _vm.isAssetsLoading)?_c('spinner',{key:\"entity-loader\",staticClass:\"mt2\"}):_c('div',{ref:\"entityListContent\"},[(_vm.isAssetPlaylist)?_c('div',_vm._l((_vm.displayedAssetsByType),function(typeAssets,i){return _c('div',{key:'asset-type-' + i},[(typeAssets.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(typeAssets[0].asset_type_name)+\" \")]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((typeAssets.filter(function (a) { return !a.canceled; })),function(asset){return _c('div',{key:asset.id,class:{\n                    'addition-shot': true\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(asset)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":asset.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(asset.name))])],1)}),0)])}),0):_c('div',_vm._l((_vm.displayedShotsBySequence),function(sequenceShots,i){return _c('div',{key:'sequence-' + i},[(sequenceShots.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(sequenceShots[0].sequence_name)+\" \"),((_vm.isCurrentUserManager || _vm.isCurrentUserSupervisor))?_c('button',{key:'add-sequence-button-' + sequenceShots[0].sequence_id,staticClass:\"button\",on:{\"click\":function($event){return _vm.addSequence(sequenceShots)}}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_sequence'))+\" \")]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((sequenceShots.filter(function (s) { return !s.canceled; })),function(shot){return _c('div',{key:shot.id,class:{\n                    'addition-shot': true,\n                    playlisted: _vm.currentEntities[shot.id] !== undefined\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(shot)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":shot.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('div',[(_vm.currentPlaylist.task_type_id)?_c('span',{style:({\n                        color: _vm.getTaskStatus(shot).color\n                      }),attrs:{\"title\":_vm.getTaskStatus(shot).name}},[_vm._v(\" • \")]):_vm._e(),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(shot.name))])])],1)}),0)])}),0)])],1):_vm._e()],1)]),_c('edit-playlist-modal',{ref:\"edit-playlist-modal\",attrs:{\"active\":_vm.modals.isEditDisplayed,\"is-loading\":_vm.loading.editPlaylist,\"is-error\":_vm.errors.editPlaylist,\"playlist-to-edit\":_vm.playlistToEdit,\"task-type-id\":_vm.taskTypeId},on:{\"cancel\":_vm.hideEditModal,\"confirm\":_vm.confirmEditPlaylist}}),_c('build-filter-modal',{ref:\"build-filter-modal\",attrs:{\"active\":_vm.modals.isBuildFilterDisplayed,\"entity-type\":_vm.isAssetPlaylist ? 'asset' : 'shot'},on:{\"confirm\":_vm.confirmBuildFilter,\"cancel\":function($event){_vm.modals.isBuildFilterDisplayed = false}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{class:{\n  'error': true,\n  'has-text-right': _vm.alignRight,\n  'is-hidden': _vm.hidden\n}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<p :class=\"{\n  'error': true,\n  'has-text-right': alignRight,\n  'is-hidden': hidden\n}\">\n  {{ text }}\n</p>\n</template>\n\n<script>\nexport default {\n  name: 'error-text',\n  props: {\n    text: {\n      default: '',\n      type: String\n    },\n    hidden: {\n      default: false,\n      type: Boolean\n    },\n    alignRight: {\n      default: false,\n      type: Boolean\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ErrorText.vue?vue&type=template&id=1338c033&\"\nimport script from \"./ErrorText.vue?vue&type=script&lang=js&\"\nexport * from \"./ErrorText.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"playlists page fixed-page dark\">\n    <div class=\"columns\">\n      <div\n        ref=\"playlistList\"\n        :class=\"{\n          'playlist-list-column': true,\n          column: true,\n          toggled: isListToggled\n        }\"\n        v-scroll=\"onPlaylistListScroll\"\n      >\n\n        <div class=\"flexrow top-section\">\n          <combobox-task-type\n            class=\"flexrow-item selector mb1\"\n            :task-type-list=\"taskTypeList\"\n            :label=\"$t('playlists.filter_task_type')\"\n            :thin=\"true\"\n            v-model=\"taskTypeId\"\n            v-if=\"!isListToggled\"\n          />\n          <span class=\"filler\" v-if=\"!isListToggled\"></span>\n          <button-simple\n            class=\"flexrow-item\"\n            style=\"flex: 0;\"\n            :icon=\"isListToggled ? 'right' : 'left'\"\n            is-small\n            @click=\"isListToggled = !isListToggled\"\n          />\n        </div>\n\n        <div class=\"flexrow\">\n          <template v-if=\"!isListToggled\">\n            <combobox\n              class=\"flexrow-item mb2\"\n              :label=\"$t('main.sorted_by')\"\n              :options=\"sortOptions\"\n              locale-key-prefix=\"playlists.fields.\"\n              v-model=\"currentSort\"\n            />\n          </template>\n        </div>\n\n        <button\n          :class=\"{\n            button: true,\n            'is-loading': loading.addPlaylist\n          }\"\n          @click=\"showAddModal\"\n          key=\"new-playlist-button\"\n          v-if=\"(isCurrentUserManager || isCurrentUserSupervisor) && !isListToggled\"\n        >\n          <plus-icon class=\"icon is-small\" />\n          {{ $t('playlists.new_playlist') }}\n        </button>\n\n        <div\n          class=\"playlists\"\n          v-if=\"!loading.playlists\"\n        >\n          <router-link\n            :key=\"playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            :class=\"{\n              'playlist-item': true,\n              'for-client': playlist.for_client || false,\n              selected: playlist.id === currentPlaylist.id\n            }\"\n            :style=\"playlistElementStyle(playlist)\"\n            v-for=\"playlist in playlists\"\n          >\n            <div v-if=\"!isListToggled\">\n            <span>\n              {{ playlist.name }}\n            </span>\n            <span class=\"playlist-date\" title=\"last modified\">\n              {{ $t('playlists.updated_at') }}\n              {{ formatDate(playlist.updated_at) }}\n            </span>\n            </div>\n            <div class=\"has-text-centered\" v-else>\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"38px\"\n                height=\"30px\"\n                max-width=\"38px\"\n                max-height=\"30px\"\n                empty-width=\"38px\"\n                empty-height=\"30px\"\n                :title=\"playlist.name\"\n              />\n            </div>\n          </router-link>\n        </div>\n        <spinner\n          class=\"mt2\"\n          v-else\n        />\n        <error-text\n          text=\"$t('playlists.loading_error')\"\n          v-if=\"errors.playlistLoading\"\n        />\n      </div>\n\n      <div\n        class=\"playlist-column no-selection\"\n        v-if=\"playlists.length > 0 && !currentPlaylist.id && !loading.playlist\"\n      >\n        <h2>{{ $t('playlists.last_creation') }}</h2>\n        <div class=\"flexrow\" v-if=\"!loading.playlists && !loading.playlistsInit\">\n          <router-link\n            class=\"recent-playlist flexrow-item\"\n            :key=\"'recent-playlist-' + playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            v-for=\"playlist in lastPlaylistsCreated\"\n          >\n            <div class=\"has-text-centered\">\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                max-width=\"300px\"\n                max-height=\"150px\"\n                empty-height=\"150px\"\n              />\n            </div>\n            <h3>{{ playlist.name }}</h3>\n            <span>\n              {{ $t('playlists.created_at') }}\n              {{ formatDate(playlist.created_at) }}\n            </span>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n\n        <h2>{{ $t('playlists.last_modification') }}</h2>\n        <div class=\"flexrow\" v-if=\"!loading.playlists\">\n          <router-link\n            class=\"recent-playlist flexrow-item\"\n            :key=\"'recent-modified-playlist-' + playlist.id\"\n            :to=\"getPlaylistPath(playlist.id)\"\n            v-for=\"playlist in lastPlaylistsUpdated\"\n          >\n            <div class=\"has-text-centered\">\n              <light-entity-thumbnail\n                :preview-file-id=\"playlist.first_preview_file_id\"\n                type=\"previews\"\n                width=\"auto\"\n                height=\"auto\"\n                max-width=\"300px\"\n                max-height=\"150px\"\n                empty-height=\"150px\"\n              />\n            </div>\n            <h3>{{ playlist.name }}</h3>\n            <span>\n              {{ $t('playlists.updated_at') }}\n              {{ formatDate(playlist.updated_at) }}\n            </span>\n          </router-link>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n      <div\n        class=\"playlist-column no-selection has-text-centered\"\n        v-else-if=\"playlists.length === 0\"\n      >\n        <div v-if=\"!loading.playlists && !loading.playlistsInit\">\n          <p class=\"empty-explaination\">\n            {{ $t('playlists.no_playlist') }}\n          </p>\n          <button\n            :class=\"{\n              big: true,\n              button: true,\n              'is-loading': loading.addPlaylist\n            }\"\n            @click=\"showAddModal\"\n            key=\"new-playlist-button\"\n            v-if=\"isCurrentUserManager || isCurrentUserSupervisor\"\n          >\n            {{ $t('playlists.new_playlist') }}\n          </button>\n        </div>\n        <spinner class=\"mt2\" v-else />\n      </div>\n\n      <div class=\"playlist-column column\" v-else>\n        <playlist-player\n          ref=\"playlist-player\"\n          :playlist=\"currentPlaylist\"\n          :entities=\"currentEntities\"\n          :is-loading=\"loading.playlist\"\n          :is-adding-entity=\"isAddingEntity\"\n          :is-asset-playlist=\"isAssetPlaylist\"\n          @edit-clicked=\"showEditModal\"\n          @show-add-entities=\"toggleAddEntities\"\n          @preview-changed=\"onPreviewChanged\"\n          @task-type-changed=\"onTaskTypeChanged\"\n          @playlist-deleted=\"$router.push(playlistsPath)\"\n          @remove-entity=\"removeEntity\"\n          @order-change=\"onOrderChange\"\n          @annotation-changed=\"onAnnotationChanged\"\n          @for-client-changed=\"onForClientChanged\"\n          @annotations-refreshed=\"onAnnotationsRefreshed\"\n        />\n\n        <div\n          v-if=\"(isCurrentUserManager || isCurrentUserSupervisor) && isAddingEntity && !loading.playlist\"\n        >\n          <div class=\"addition-header\">\n            <div class=\"flexrow\">\n              <page-subtitle\n                class=\"flexrow-item\"\n                :text=\"addEntitiesText\"\n              />\n              <span class=\"filler\"></span>\n              <a\n                class=\"close-button\"\n                @click=\"toggleAddEntities\"\n              >\n                <x-icon />\n              </a>\n            </div>\n            <div class=\"flexrow\">\n              <search-field\n                class=\"flexrow-item\"\n                ref=\"search-field\"\n                :can-save=\"false\"\n                @change=\"onSearchChange\"\n                :placeholder=\"isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'\"\n              />\n              <button-simple\n                class=\"flexrow-item\"\n                :title=\"$t('entities.build_filter.title')\"\n                icon=\"funnel\"\n                @click=\"modals.isBuildFilterDisplayed = true\"\n              />\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'add-sequence': true\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addCurrentSelection\"\n                v-if=\"isAddSearchVisible\"\n              >\n                {{ $t('playlists.add_selection') }}\n              </button>\n              <span class=\"filler\"></span>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addDaily\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addDailyPending\"\n                v-if=\"!isAssetPlaylist\"\n              >\n                {{ $t('playlists.build_daily') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addEpisode\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addEpisodePending\"\n                v-if=\"isTVShow && !isAssetPlaylist\"\n              >\n                {{ $t('playlists.add_episode') }}\n              </button>\n              <button\n                :class=\"{\n                  button: true,\n                  'add-sequence': true,\n                  'is-loading': this.loading.addMovie\n                }\"\n                :disabled=\"isAdditionLoading\"\n                @click=\"addMovie\"\n                v-else-if=\"!isAssetPlaylist\"\n              >\n                {{ $t('playlists.add_movie') }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"addition-section\"\n          v-if=\"(isCurrentUserManager || isCurrentUserSupervisor) && isAddingEntity\"\n          v-scroll=\"onBodyScroll\"\n        >\n          <spinner\n            class=\"mt2\"\n            key=\"entity-loader\"\n            v-if=\"isShotsLoading || isAssetsLoading\"\n          />\n          <div\n            ref=\"entityListContent\"\n            v-else\n          >\n            <div v-if=\"isAssetPlaylist\">\n              <div\n                :key=\"'asset-type-' + i\"\n                v-for=\"(typeAssets, i) in displayedAssetsByType\"\n              >\n                <h2\n                  class=\"entity-group-title\"\n                  v-if=\"typeAssets.length > 0\"\n                >\n                  {{ typeAssets[0].asset_type_name }}\n                </h2>\n                <div\n                 class=\"addition-entities\"\n                >\n                  <div\n                    :class=\"{\n                      'addition-shot': true\n                    }\"\n                    :key=\"asset.id\"\n                    @click.prevent=\"addEntityToPlaylist(asset)\"\n                    v-for=\"asset in typeAssets.filter(a => !a.canceled)\"\n                  >\n                      <light-entity-thumbnail\n                        :preview-file-id=\"asset.preview_file_id\"\n                        width=\"150px\"\n                        height=\"100px\"\n                      />\n                    <span class=\"playlisted-shot-name\">{{ asset.name }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-else>\n              <div\n                :key=\"'sequence-' + i\"\n                v-for=\"(sequenceShots, i) in displayedShotsBySequence\"\n              >\n                <h2\n                  class=\"entity-group-title\"\n                  v-if=\"sequenceShots.length > 0\"\n                >\n                  {{ sequenceShots[0].sequence_name }}\n                  <button\n                    class=\"button\"\n                    @click=\"addSequence(sequenceShots)\"\n                    :key=\"'add-sequence-button-' + sequenceShots[0].sequence_id\"\n                    v-if=\"(isCurrentUserManager || isCurrentUserSupervisor)\"\n                  >\n                    {{ $t('playlists.add_sequence') }}\n                  </button>\n                </h2>\n                <div\n                 class=\"addition-entities\"\n                >\n                  <div\n                    :class=\"{\n                      'addition-shot': true,\n                      playlisted: currentEntities[shot.id] !== undefined\n                    }\"\n                    :key=\"shot.id\"\n                    @click.prevent=\"addEntityToPlaylist(shot)\"\n                    v-for=\"shot in sequenceShots.filter(s => !s.canceled)\"\n                  >\n                    <light-entity-thumbnail\n                      :preview-file-id=\"shot.preview_file_id\"\n                      width=\"150px\"\n                      height=\"100px\"\n                    />\n                    <div>\n                      <span\n                        :title=\"getTaskStatus(shot).name\"\n                        :style=\"{\n                          color: getTaskStatus(shot).color\n                        }\"\n                        v-if=\"currentPlaylist.task_type_id\"\n                      >\n                        &bullet;\n                      </span>\n                      <span class=\"playlisted-shot-name\">{{ shot.name }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <edit-playlist-modal\n      ref=\"edit-playlist-modal\"\n      :active=\"modals.isEditDisplayed\"\n      :is-loading=\"loading.editPlaylist\"\n      :is-error=\"errors.editPlaylist\"\n      :playlist-to-edit=\"playlistToEdit\"\n      :task-type-id=\"taskTypeId\"\n      @cancel=\"hideEditModal\"\n      @confirm=\"confirmEditPlaylist\"\n    />\n\n    <build-filter-modal\n      ref=\"build-filter-modal\"\n      :active=\"modals.isBuildFilterDisplayed\"\n      :entity-type=\"isAssetPlaylist ? 'asset' : 'shot'\"\n      @confirm=\"confirmBuildFilter\"\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\n    />\n  </div>\n</template>\n<script>\nimport firstBy from 'thenby'\nimport moment from 'moment-timezone'\nimport { mapGetters, mapActions } from 'vuex'\nimport { PlusIcon, XIcon } from 'vue-feather-icons'\n\nimport { DEFAULT_NB_FRAMES_PICTURE } from '@/lib/playlist'\nimport { formatDate } from '@/lib/time'\nimport { getPlaylistPath } from '@/lib/path'\nimport {\n  updateModelFromList,\n  removeModelFromList\n} from '@/lib/models'\nimport { sortShots } from '@/lib/sorting'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport BuildFilterModal from '@/components/modals/BuildFilterModal'\nimport Combobox from '@/components/widgets/Combobox'\nimport ComboboxTaskType from '@/components/widgets/ComboboxTaskType'\nimport EditPlaylistModal from '@/components/modals/EditPlaylistModal'\nimport ErrorText from '@/components/widgets/ErrorText'\nimport LightEntityThumbnail from '@/components/widgets/LightEntityThumbnail'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PlaylistPlayer from '@/components/pages/playlists/PlaylistPlayer'\nimport SearchField from '@/components/widgets/SearchField'\nimport Spinner from '@/components/widgets/Spinner'\n\nexport default {\n  name: 'productions',\n\n  components: {\n    BuildFilterModal,\n    ButtonSimple,\n    Combobox,\n    ComboboxTaskType,\n    ErrorText,\n    EditPlaylistModal,\n    LightEntityThumbnail,\n    PageSubtitle,\n    PlaylistPlayer,\n    PlusIcon,\n    SearchField,\n    Spinner,\n    XIcon\n  },\n\n  data () {\n    return {\n      currentPlaylist: { name: '' },\n      currentSort: 'updated_at',\n      currentEntities: {},\n      isAddingEntity: false,\n      isListToggled: false,\n      page: 1,\n      taskTypeId: '',\n      sortedPlaylists: [],\n      sortOptions: [\n        'updated_at',\n        'created_at',\n        'name'\n      ].map(name => ({ label: name, value: name })),\n      playlistToEdit: {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      },\n      previewFileMap: new Map(),\n      previewFileEntityMap: new Map(),\n      modals: {\n        isBuildFilterDisplayed: false,\n        isDeleteDisplayed: false,\n        isEditDisplayed: false\n      },\n      loading: {\n        addPlaylist: false,\n        addDaily: false,\n        addEpisode: false,\n        addMovie: false,\n        addSequence: false,\n        addWeekly: false,\n        deletePlaylist: false,\n        editPlaylist: false,\n        playlist: false,\n        playlists: false,\n        playlistsInit: true\n      },\n      errors: {\n        addPlaylist: false,\n        editPlaylist: false,\n        deletePlaylist: false,\n        playlistLoading: false\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'assetSearchText',\n      'currentEpisode',\n      'currentProduction',\n      'displayedAssets',\n      'displayedAssetsByType',\n      'displayedShots',\n      'displayedShotsBySequence',\n      'isAssetsLoading',\n      'isCurrentUserManager',\n      'isCurrentUserSupervisor',\n      'isShotsLoading',\n      'isTVShow',\n      'productionTaskTypes',\n      'playlistMap',\n      'playlists',\n      'playlistsPath',\n      'shotsByEpisode',\n      'shotSearchText',\n      'shotMap',\n      'taskMap',\n      'taskStatusMap',\n      'taskTypeMap'\n    ]),\n\n    isAdditionLoading () {\n      return (\n        this.loading.addSequence ||\n        this.loading.addWeekly ||\n        this.loading.addDaily ||\n        this.loading.addEpisode\n      )\n    },\n\n    isAssetPlaylist () {\n      return this.currentPlaylist.for_entity === 'asset'\n    },\n\n    isAddSearchVisible () {\n      return (\n        (this.isAssetPlaylist && this.assetSearchText) ||\n        (!this.isAssetPlaylist && this.shotSearchText)\n      )\n    },\n\n    lastPlaylistsUpdated () {\n      return this.playlists\n        .concat()\n        .sort(firstBy('updated_at'))\n        .reverse()\n        .slice(0, 3)\n    },\n\n    lastPlaylistsCreated () {\n      return this.playlists.slice(0, 3)\n    },\n\n    playlistPlayer () {\n      return this.$refs['playlist-player']\n    },\n\n    addEntitiesText () {\n      if (this.isAssetPlaylist) {\n        return this.$t('playlists.add_assets')\n      } else {\n        return this.$t('playlists.add_shots')\n      }\n    },\n\n    tvShowPageTitle () {\n      const productionName =\n        this.currentProduction ? this.currentProduction.name : ''\n      let episodeName = ''\n      if (this.currentEpisode) {\n        episodeName = this.currentEpisode.name\n        if (this.currentEpisode.id === 'all') episodeName = this.$t('main.all')\n        if (this.currentEpisode.id === 'main') episodeName = 'Main Pack'\n      }\n      return `${productionName} - ${episodeName}` +\n             ` | ${this.$t('playlists.title')} - Kitsu`\n    },\n\n    shortPageTitle () {\n      const productionName =\n        this.currentProduction ? this.currentProduction.name : ''\n      return `${productionName} ${this.$t('playlists.title')} - Kitsu`\n    },\n\n    taskTypeList () {\n      return [{\n        id: '',\n        color: '#999',\n        name: this.$t('news.all')\n      }].concat([...this.productionTaskTypes])\n    }\n\n  },\n\n  methods: {\n    ...mapActions([\n      'addNewBuildJob',\n      'pushEntityToPlaylist',\n      'changePlaylistOrder',\n      'changePlaylistPreview',\n      'changePlaylistType',\n      'displayMoreAssets',\n      'displayMoreShots',\n      'editPlaylist',\n      'getPending',\n      'loadMorePlaylists',\n      'loadPlaylist',\n      'loadPlaylists',\n      'loadEntityPreviewFiles',\n      'loadShots',\n      'loadAssets',\n      'markBuildJobAsDone',\n      'newPlaylist',\n      'refreshPlaylist',\n      'removeEntityPreviewFromPlaylist',\n      'removeBuildJobFromList',\n      'setAssetSearch',\n      'setCurrentEpisode',\n      'setShotSearch',\n      'updatePreviewAnnotation'\n    ]),\n\n    // Helpers\n\n    formatDate (dateString) {\n      return formatDate(dateString)\n    },\n\n    getPlaylistPath (playlistId, section) {\n      return getPlaylistPath(\n        this.currentProduction.id,\n        this.currentEpisode ? this.currentEpisode.id : null,\n        playlistId,\n        section\n      )\n    },\n\n    playlistElementStyle (playlist) {\n      const taskType = this.taskTypeMap.get(playlist.task_type_id)\n      const color = taskType ? taskType.color : 'transparent'\n      return {\n        'border-left': '2px solid ' + color\n      }\n    },\n\n    getTaskStatus (entity) {\n      entity = this.shotMap.get(entity.id)\n      if (!entity) entity = this.assetMap.get(entity.id)\n      if (!entity) return {}\n\n      const taskId = entity.validations.get(this.currentPlaylist.task_type_id)\n      if (taskId) {\n        const task = this.taskMap.get(taskId)\n        if (!task) return {}\n        const taskStatus = this.taskStatusMap.get(task.task_status_id)\n        return taskStatus\n      } else {\n        return {}\n      }\n    },\n\n    // Data loading\n\n    loadShotsData (callback) {\n      if (\n        this.displayedShots.length === 0 ||\n        this.displayedShots[0].project_id !== this.currentProduction.id ||\n        (\n          this.currentEpisode &&\n          this.displayedShots[0].episode_id !== this.currentEpisode.id\n        )\n      ) {\n        if (this.isTVShow &&\n            this.currentEpisode &&\n            (this.currentEpisode.id === 'main' ||\n            this.currentEpisode.id === 'all')) {\n          callback()\n        } else {\n          this.loadShots(callback)\n        }\n      } else {\n        callback()\n      }\n    },\n\n    loadAssetsData () {\n      if (this.isTVShow || this.displayedAssets.length === 0) {\n        return this.loadAssets()\n      } else {\n        return Promise.resolve()\n      }\n    },\n\n    loadPlaylistsData (force = false) {\n      const setFirstPlaylist = () => {\n        this.setCurrentPlaylist(() => {\n          if (!this.currentPlaylist || !this.currentPlaylist.id) {\n            this.goFirstPlaylist()\n          }\n          return Promise.resolve()\n        })\n      }\n      if (this.playlists.length === 0 || force) {\n        return this.loadPlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(() => {\n            return setFirstPlaylist()\n          })\n          .catch(err => {\n            console.error(err)\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      } else {\n        return setFirstPlaylist()\n      }\n    },\n\n    onPlaylistListScroll (event, position) {\n      if (this.$options.silentMore) return\n      const listEl = this.$refs.playlistList\n      const maxHeight = listEl.scrollHeight - listEl.offsetHeight\n      if (maxHeight < (position.scrollTop + 20)) {\n        this.$options.silentMore = true\n        this.page++\n        this.loadMorePlaylists({\n          sortBy: this.currentSort,\n          page: this.page,\n          taskTypeId: this.taskTypeId\n        })\n          .then(playlists => {\n            setTimeout(() => {\n              this.$options.silentMore = false\n            }, 1000)\n          })\n          .catch(err => {\n            console.error(err)\n            this.$options.silentMore = false\n            this.errors.loadPlaylists = true\n            return Promise.reject(err)\n          })\n      }\n    },\n\n    // Playlist build\n\n    rebuildCurrentEntities () {\n      this.currentEntities = {}\n      const tmpEntities = {}\n      this.previewFileMap = new Map()\n      this.previewFileEntityMap = new Map()\n      if (this.currentPlaylist && this.currentPlaylist.shots) {\n        this.currentPlaylist.shots.forEach(entity => {\n          const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n          if (playlistEntity) {\n            tmpEntities[playlistEntity.id] = playlistEntity\n            this.previewFileEntityMap.set(\n              entity.preview_file_id,\n              playlistEntity\n            )\n            const previewFileGroups =\n              Object.values(playlistEntity.preview_files)\n            previewFileGroups.forEach(previewFiles => {\n              previewFiles.forEach(previewFile => {\n                this.previewFileMap.set(previewFile.id, previewFile)\n              })\n            })\n          }\n        })\n      }\n      this.$nextTick(() => {\n        this.currentEntities = tmpEntities\n      })\n    },\n\n    onAnnotationsRefreshed (preview) {\n      const entity = this.previewFileEntityMap.get(preview.id)\n      const localPreview = this.previewFileMap.get(preview.id)\n      if (entity) {\n        entity.preview_file_annotations = preview.annotations\n      }\n      if (localPreview) {\n        localPreview.annotations = preview.annotations\n      }\n    },\n\n    convertEntityToPlaylistFormat (entityInfo) {\n      let entity\n      if (this.isAssetPlaylist) {\n        entity = this.assetMap.get(entityInfo.id)\n      } else {\n        entity = this.shotMap.get(entityInfo.id)\n      }\n      if (entity) {\n        const playlistEntity = {\n          id: entityInfo.id,\n          name: entity.name,\n          parent_name: entity.sequence_name || entity.asset_type_name,\n          preview_files: entityInfo.preview_files,\n          preview_file_id:\n            entityInfo.preview_file_id ||\n            entity.preview_file_id,\n          preview_file_extension:\n            entityInfo.preview_file_extension ||\n            entity.preview_file_extension,\n          preview_file_task_id:\n            entityInfo.task_id ||\n            entityInfo.preview_file_task_id ||\n            entity.preview_file_task_id,\n          preview_file_annotations:\n            entityInfo.preview_file_annotations ||\n            entity.preview_file_annotations,\n          preview_file_previews:\n            entityInfo.preview_file_previews ||\n            entity.preview_file_previews,\n          preview_nb_frames: entityInfo.nb_frames ||\n            entity.nb_frames || DEFAULT_NB_FRAMES_PICTURE\n        }\n        this.previewFileEntityMap.set(\n          playlistEntity.preview_file_id,\n          playlistEntity\n        )\n        const previews = playlistEntity.preview_file_previews || []\n        previews.forEach(preview => {\n          this.previewFileMap.set(preview.id, preview)\n        })\n        return playlistEntity\n      } else {\n        return null\n      }\n    },\n\n    setCurrentPlaylist (callback) {\n      const playlistId = this.$route.params.playlist_id\n      const playlist = this.playlistMap.get(playlistId)\n      if (playlist) {\n        this.loading.playlist = true\n        this.loadPlaylist({\n          playlist,\n          callback: (err, playlist) => {\n            if (err) console.error(err)\n            this.currentPlaylist = playlist\n            this.rebuildCurrentEntities()\n            this.loading.playlist = false\n            if (callback) callback()\n          }\n        })\n      } else {\n        this.currentPlaylist = {\n          name: ''\n        }\n        this.currentShots = {}\n      }\n    },\n\n    addEntity (entity) {\n      return this.loadEntityPreviewFiles(entity)\n        .then(previewFiles => {\n          return this.addToStorePlaylistAndSave(previewFiles, entity)\n        })\n        .then(this.addToPlayerPlaylist)\n        .catch((err) => console.error(err))\n    },\n\n    addToStorePlaylistAndSave (previewFiles, entity) {\n      return this.pushEntityToPlaylist({\n        playlist: this.currentPlaylist,\n        previewFiles: previewFiles,\n        entity: { ...entity }\n      })\n    },\n\n    addToPlayerPlaylist (entity) {\n      const playlistEntity = this.convertEntityToPlaylistFormat(entity)\n      this.currentEntities[playlistEntity.id] = playlistEntity\n      this.playlistPlayer.entityList.push(playlistEntity)\n      this.$nextTick(() => {\n        this.playlistPlayer.scrollToRight()\n      })\n    },\n\n    addEntityToPlaylist (entity) {\n      if (!this.currentEntities[entity.id]) {\n        this.addEntity(entity)\n          .then(this.playlistPlayer.scrollToRight())\n      }\n    },\n\n    removeEntity (entity) {\n      this.removeEntityPreviewFromPlaylist({\n        playlist: this.currentPlaylist,\n        entity,\n        callback: () => {\n          delete this.currentEntities[entity.id]\n        }\n      })\n    },\n\n    clearCurrentPlaylist () {\n      this.currentPlaylist = {}\n      this.currentShots = {}\n    },\n\n    resetPlaylist () {\n      this.clearCurrentPlaylist()\n      this.setCurrentPlaylist()\n    },\n\n    // Addition Helpers\n\n    addCurrentSelection () {\n      this.$options.silent = true\n      const entities =\n        this.isAssetPlaylist ? this.displayedAssets : this.displayedShots\n      this.addEntities([...entities].reverse(), () => {\n        this.$options.silent = false\n      })\n    },\n\n    addSequence (sequenceShots) {\n      if (sequenceShots.length > 0) {\n        const sequenceId = sequenceShots[0].sequence_id\n        const shots = Array.from(this.shotMap.values())\n          .filter(s => s.sequence_id === sequenceId)\n          .sort(firstBy('name'))\n          .reverse()\n        this.$options.silent = true\n        this.addEntities(shots, () => {\n          this.$options.silent = false\n        })\n      }\n    },\n\n    addAllPending () {\n      this.$options.silent = true\n      this.loading.addWeekly = true\n      this.getPending(false)\n        .then((shots) => {\n          this.addEntities(shots.reverse(), () => {\n            this.loading.addWeekly = false\n            this.$options.silent = false\n          })\n        })\n    },\n\n    addDailyPending () {\n      this.loading.addDaily = true\n      this.$options.silent = true\n      this.getPending(true)\n        .then((shots) => {\n          this.addEntities(sortShots(shots).reverse(), () => {\n            this.loading.addDaily = false\n            this.$options.silent = false\n          })\n        })\n    },\n\n    addEpisodePending () {\n      this.loading.addEpisode = true\n      this.$options.silent = true\n      let shots = [].concat(...this.shotsByEpisode)\n      shots = sortShots(shots).reverse()\n      this.addEntities(shots, () => {\n        this.loading.addEpisode = false\n        this.$options.silent = false\n      })\n    },\n\n    addMovie () {\n      this.loading.addMovie = true\n      this.$options.silent = true\n      const shots = sortShots(Array.from(this.shotMap.values()))\n      this.addEntities(shots.reverse(), () => {\n        this.loading.addMovie = false\n        this.$options.silent = false\n      })\n    },\n\n    addEntities (entities, callback) {\n      if (entities && entities.length > 0) {\n        const entity = entities.pop()\n        this.addEntity(entity)\n          .then(() => {\n            this.addEntities(entities, callback)\n          })\n      } else {\n        callback()\n      }\n    },\n\n    // Save data\n\n    /* When a preview is modified, the change is persisted */\n    onPreviewChanged (entity, previewFileId) {\n      this.changePlaylistPreview({\n        playlist: this.currentPlaylist,\n        entity,\n        previewFileId\n      })\n    },\n\n    onOrderChange (info) {\n      this.changePlaylistOrder({\n        playlist: this.currentPlaylist,\n        info\n      })\n    },\n\n    onAnnotationChanged ({ preview, additions, deletions, updates }) {\n      const taskId = preview.task_id\n      this.updatePreviewAnnotation({\n        taskId, preview, additions, deletions, updates\n      })\n    },\n\n    // Search\n\n    confirmBuildFilter (query) {\n      this.modals.isBuildFilterDisplayed = false\n      this.$refs['search-field'].setValue(query)\n      this.onSearchChange(query)\n    },\n\n    onSearchChange (searchQuery) {\n      if (searchQuery.length > 1) {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch(searchQuery)\n          this.displayMoreAssets()\n        } else {\n          this.setShotSearch(searchQuery)\n          this.displayMoreShots()\n        }\n      } else {\n        if (this.isAssetPlaylist) {\n          this.setAssetSearch('')\n        } else {\n          this.setShotSearch('')\n        }\n      }\n    },\n\n    // Playlist list\n\n    onForClientChanged (forClient) {\n      this.editPlaylist({\n        data: {\n          id: this.currentPlaylist.id,\n          for_client: forClient\n        }\n      })\n    },\n\n    runAddPlaylist (form) {\n      const newPlaylist = {\n        name: form.name,\n        production_id: this.currentProduction.id,\n        for_client: form.for_client,\n        for_entity: form.for_entity,\n        is_for_all: form.is_for_all,\n        task_type_id: form.task_type_id\n      }\n      if (this.isTVShow && this.currentEpisode) {\n        newPlaylist.episode_id = this.currentEpisode.id\n      }\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.newPlaylist(newPlaylist)\n        .then((playlist) => {\n          this.$router.push(this.getPlaylistPath(playlist.id))\n          this.loading.editPlaylist = false\n          this.modals.isEditDisplayed = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.editPlaylist = true\n          this.loading.editPlaylist = false\n        })\n    },\n\n    confirmEditPlaylist (form) {\n      if (this.playlistToEdit.id) {\n        form.id = this.currentPlaylist.id\n        this.runEditPlaylist(form)\n      } else {\n        this.runAddPlaylist(form)\n      }\n    },\n\n    runEditPlaylist (form) {\n      this.loading.editPlaylist = true\n      this.errors.editPlaylist = false\n      this.editPlaylist({\n        data: {\n          id: form.id,\n          for_client: form.for_client,\n          for_entity: form.for_entity,\n          name: form.name,\n          task_type_id: form.task_type_id\n        },\n        callback: (err, playlist) => {\n          if (err) this.errors.editPlaylist = true\n          this.loading.editPlaylist = false\n          this.modals.isEditDisplayed = false\n          Object.assign(this.currentPlaylist, playlist)\n        }\n      })\n    },\n\n    goFirstPlaylist () {\n      if (this.playlists.length > 0) {\n        this.$router.push({\n          name: 'playlist',\n          params: {\n            production_id: this.currentProduction.id,\n            playlist_id: this.playlists[0].id\n          }\n        })\n      } else {\n        this.$router.push(this.playlistsPath)\n      }\n    },\n\n    // Changes\n\n    toggleAddEntities () {\n      if (this.isAddingEntity) {\n        this.resetPlaylist()\n      }\n      this.isAddingEntity = !this.isAddingEntity\n    },\n\n    onTaskTypeChanged (taskTypeId) {\n      this.changePlaylistType({\n        playlist: this.currentPlaylist,\n        taskTypeId,\n        callback: () => {\n          this.rebuildCurrentEntities()\n        }\n      })\n    },\n\n    onBodyScroll (event, position) {\n      const maxHeight =\n        this.$refs.entityListContent.scrollHeight -\n        this.$refs.entityListContent.offsetHeight\n      if (maxHeight < position.scrollTop) {\n        if (this.isAssetPlaylist) {\n          this.displayMoreAssets()\n        } else {\n          this.displayMoreShots()\n        }\n      }\n    },\n\n    resetSorting () {\n      let order = 1\n      if (['created_at', 'updated_at'].includes(this.currentSort)) {\n        order = -1\n      }\n      this.sortedPlaylists = [...this.playlists]\n        .sort(\n          firstBy(this.currentSort, order)\n            .thenBy('name')\n        )\n    },\n\n    // Modals\n\n    showAddModal () {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.$refs['edit-playlist-modal'] = true\n      this.modals.isEditDisplayed = true\n    },\n\n    showEditModal () {\n      this.playlistToEdit = this.currentPlaylist\n      this.modals.isEditDisplayed = true\n    },\n\n    hideEditModal () {\n      this.playlistToEdit = {\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\n        for_client: false\n      }\n      this.modals.isEditDisplayed = false\n    },\n\n    // Loading\n\n    reloadAll () {\n      if (!this.loading.playlists) {\n        this.loading.playlists = true\n        this.loadShotsData(() => {\n          this.loadAssetsData()\n            .then(() => {\n              this.page = 1\n              return this.loadPlaylistsData()\n            })\n            .then(() => {\n              this.loading.playlists = false\n              this.resetPlaylist()\n              setTimeout(() => {\n                this.loading.playlistsInit = false\n              }, 300)\n            })\n        })\n      }\n    }\n  },\n\n  mounted () {\n    // Next tick needed to ensure that current production is properly set.\n    this.$nextTick(() => {\n      this.reloadAll()\n      if (localStorage.getItem('playlist-sort')) {\n        this.currentSort = localStorage.getItem('playlist-sort')\n      }\n      this.resetSorting()\n    })\n  },\n\n  watch: {\n    $route () {\n      this.setCurrentPlaylist()\n    },\n\n    currentPlaylist () {\n      if (this.currentPlaylist.shots) {\n        this.$options.silentMore = false\n        this.isAddingEntity =\n          Object.keys(this.currentPlaylist.shots).length === 0\n      } else {\n        this.isAddingEntity = true\n      }\n    },\n\n    currentProduction () {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      this.reloadAll()\n    },\n\n    currentEpisode () {\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\n      if (this.currentEpisode) {\n        this.reloadAll()\n      }\n    },\n\n    playlists () {\n    },\n\n    currentSort () {\n      localStorage.setItem('playlist-sort', this.currentSort)\n      this.loading.playlists = true\n      this.page = 1\n      this.loadPlaylistsData(true)\n        .then(() => {\n          this.loading.playlists = false\n        })\n    },\n\n    isListToggled () {\n      this.playlistPlayer.onWindowResize()\n    },\n\n    taskTypeId () {\n      this.loadPlaylistsData(true)\n    }\n  },\n\n  socket: {\n    events: {\n      'playlist:new' (eventData) {\n        if (!this.playlistMap.get(eventData.playlist_id)) {\n          this.refreshPlaylist(eventData.playlist_id)\n        }\n      },\n\n      'playlist:update' (eventData) {\n      },\n\n      'playlist:delete' (eventData) {\n        this.$store.commit('DELETE_PLAYLIST_END', {\n          id: eventData.playlist_id\n        })\n      },\n\n      'build-job:new' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs = [{\n            id: eventData.build_job_id,\n            created_at: eventData.created_at,\n            status: 'running',\n            playlist_id: this.currentPlaylist.id\n          }].concat(this.currentPlaylist.build_jobs)\n        }\n      },\n\n      'build-job:update' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          updateModelFromList(this.currentPlaylist.build_jobs, {\n            id: eventData.build_job_id,\n            status: eventData.status\n          })\n        }\n      },\n\n      'build-job:delete' (eventData) {\n        if (eventData.playlist_id === this.currentPlaylist.id) {\n          this.currentPlaylist.build_jobs =\n            removeModelFromList(this.currentPlaylist.build_jobs, {\n              id: eventData.build_job_id\n            })\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    if (this.isTVShow) {\n      return { title: this.tvShowPageTitle }\n    } else {\n      return { title: this.shortPageTitle }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .playlist-item {\n    background: $dark-grey-lightmore;\n    box-shadow: 0px 0px 6px #333;\n    border-color: $dark-grey;\n    color: $white-grey;\n\n    &.for-client {\n      background: $purple-grey;\n      border: 1px solid $dark-grey;\n    }\n\n    &.selected {\n      border-right: 3px solid $dark-green;\n    }\n  }\n\n  .playlist-list-column {\n    background: $dark-grey-light;\n    border-color: $dark-grey;\n    box-shadow: 0px 0px 6px #333;\n  }\n\n  .playlist-column {\n    button,\n    h2.entity-group-title {\n      color: white;\n    }\n  }\n\n  .playlist-column.no-selection {\n    background: $dark-grey-light;\n\n    h2 {\n      color: white;\n    }\n\n    .recent-playlist {\n      background: $dark-grey-lightmore;\n      border: 2px solid $dark-grey;\n      box-shadow: 0px 0px 6px #333;\n\n      h3 {\n        color: white;\n      }\n    }\n  }\n\n  span.thumbnail-picture {\n    box-shadow: 0px 0px 6px #333;\n  }\n}\n\n.page {\n  display: flex;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n}\n\n.page .columns {\n  margin-top: 0px;\n  margin-bottom: 0;\n  overflow-y: auto;\n  flex: 1;\n}\n\n.playlist-list-column {\n  max-width: 300px;\n  background: #F4F5F9;\n  overflow-y: auto;\n  padding: 1em 1em 1em 2em;\n  border-right: 1px solid #DDD;\n  box-shadow: 0px 0px 6px #F0F0F0;\n  z-index: 201;\n}\n\n.playlist-item {\n  display: block;\n  background: white;\n  padding: 0.4em;\n  margin: 0.2em;\n  border: 1px solid $white-grey;\n  box-shadow: 0px 0px 6px #DDD;\n  color: $grey-strong;\n\n  &.for-client {\n    background: $light-purple;\n    border: 1px solid $purple;\n  }\n}\n\n.playlist-item.selected {\n  border-right: 3px solid $light-green;\n}\n\n.playlist-list-column .button {\n  width: 100%;\n}\n\n.addition-entities {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  flex-direction: row;\n  max-width: 100%;\n  padding-left: 1em;\n}\n\n.addition-shot {\n  padding: 0;\n  cursor: pointer;\n  text-align: center;\n  margin: 0;\n  opacity: 0.5;\n  width: 170px;\n  display: flex;\n  flex-direction: column;\n  border: 0px solid transparent;\n\n  a {\n    margin: auto;\n  }\n\n  &:hover {\n    opacity: 0.75\n  }\n\n  &.playlisted {\n    opacity: 1;\n\n    img,\n    span.thumbnail-picture {\n      border: 2px solid $purple;\n    }\n  }\n}\n\nspan.thumbnail-picture {\n  box-shadow: 0px 0px 6px #DDD;\n  margin-bottom: 2px;\n}\n\n.addition-header {\n  padding: 0 1em;\n\n  .subtitle {\n    margin-top: 1em;\n  }\n}\n\n.add-sequence {\n  margin-bottom: 0.4em;\n}\n\n.playlist-column {\n  padding: 0;\n  overflow: hidden;\n  flex: 1;\n  background: $dark-grey-2;\n}\n\n.playlisted-shot-name {\n  padding-right: 20px;\n  color: var(--text);\n}\n\n.playlist-date {\n  display: block;\n  color: $grey;\n  font-size: 0.8em;\n}\n\n.entity-group-title {\n  border-bottom: 1px solid $light-grey-light;\n  color: $grey;\n  margin: 1em;\n  padding-bottom: 0.2em;\n  text-transform: uppercase;\n\n  button {\n    color: $grey;\n    padding: 0.3em 0.8em;\n    font-size: 0.7em;\n  }\n}\n\n.addition-header {\n  background: var(--background);\n  height: 110px;\n}\n\n.addition-section {\n  background: var(--background);\n  overflow-y: auto;\n  height: calc(100% - 420px);\n}\n\nh2 {\n  font-weight: bold;\n  text-transform: uppercase;\n  color: $grey;\n}\n\n.toggled {\n  padding: 1em 0.1em;\n  max-width: 50px;\n\n  .flexrow {\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1em;\n  }\n\n  .playlist-item {\n    padding: 0;\n  }\n}\n\n.playlist-column.no-selection {\n  padding: 2em;\n  overflow: auto;\n  background: #F4F5F9;\n\n  h2 {\n    font-size: 2em;\n    margin-top: 1.5em;\n    margin-bottom: 0.3em;\n  }\n\n  .recent-playlist {\n    width: 333px;\n    height: 250px;\n    background: white;\n    border: 2px solid $light-grey-light;\n    box-shadow: 0px 0px 6px #DDD;\n    border-radius: 1em;\n    padding: 1em;\n\n    h3 {\n      color: $grey-strong;\n      font-size: 1.2em;\n      font-weight: bold;\n    }\n    span {\n      display: block;\n    }\n  }\n\n  .empty-explaination {\n    color: $white;\n    margin-top: 4em;\n    font-size: 1.5em;\n  }\n\n  .big {\n    font-size: 1.2em;\n    margin-top: 1em;\n    padding: 0.5em 1em;\n    height: auto;\n  }\n}\n\n.top-section {\n  align-items: flex-start;\n}\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Playlist.vue?vue&type=template&id=3099eb2c&scoped=true&\"\nimport script from \"./Playlist.vue?vue&type=script&lang=js&\"\nexport * from \"./Playlist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Playlist.vue?vue&type=style&index=0&id=3099eb2c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3099eb2c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}