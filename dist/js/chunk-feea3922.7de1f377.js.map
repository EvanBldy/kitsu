{"version":3,"sources":["webpack:///./src/components/pages/Task.vue?b6d9","webpack:///./src/components/widgets/ComboboxStyled.vue?affb","webpack:///src/components/widgets/ComboboxStyled.vue","webpack:///./src/components/widgets/ComboboxStyled.vue?33fc","webpack:///./src/components/widgets/ComboboxStyled.vue","webpack:///./src/components/pages/Task.vue?d949","webpack:///src/components/pages/Task.vue","webpack:///./src/components/pages/Task.vue?b5f0","webpack:///./src/components/pages/Task.vue","webpack:///./src/components/widgets/ComboboxStyled.vue?fb91"],"names":["render","_vm","this","_h","$createElement","_c","_self","label","length","staticClass","_v","_s","_e","class","combo","open","showList","on","toggleList","selectedOption","ref","_l","option","key","id","$event","selectOption","button","openRoute","staticRenderFns","name","components","ChevronDownIcon","data","value","props","default","type","String","options","Array","mounted","computed","methods","$emit","window","url","watch","find","component","attrs","currentTaskType","currentProduction","currentTaskPreviews","preview_file_id","taskEntityPath","currentTask","title","$t","formatPriority","priority","assignees","personId","personMap","get","isAssigned","isSubscribed","toggleSubscribe","previewOptions","model","callback","$$v","selectedPreviewId","expression","isPreviews","isCurrentUserManager","loading","setPreview","errors","entity","currentPreviewId","currentPreview","previews","taskTypeMap","taskEntityPreviews","isCurrentUserArtist","lastFivePreviews","onAnnotationChanged","onAddExtraPreviewClicked","onRemoveExtraPreviewClicked","changeCurrentPreview","onTimeUpdated","estimation","formatDuration","duration","retake_count","formatSimpleDate","start_date","due_date","addComment","isMovie","user","currentTeam","taskStatusForCurrentUser","attachedFileName","parseInt","currentFps","currentTime","currentRevision","onAddPreviewClicked","onDuplicateComment","selectFile","extractAnnotationSnapshots","currentTaskComments","comment","index","person","isCurrentUserAdmin","pinnedCount","isStatusChange","ackComment","onPinComment","onEditComment","onDeleteComment","saveComment","timeCodeClicked","modals","addPreview","addPreviewFormData","closeAddPreviewModal","addExtraPreview","addExtraPreviewFormData","hideExtraPreviewModal","createExtraPreview","editComment","commentToEdit","confirmEditTaskComment","onCancelEditComment","deleteComment","confirmDeleteTaskComment","onCancelDeleteComment","deleteExtraPreview","hideRemoveExtraPreviewModal","confirmDeleteTaskPreview","mixins","format","AddComment","AddPreviewModal","ComboboxStyled","Comment","DeleteModal","EditCommentModal","EntityThumbnail","ImageIcon","PageSubtitle","PageTitle","PeopleAvatar","PreviewPlayer","Spinner","SubscribeButton","TaskTypeName","ValidationTag","selectedTab","taskLoading","isLoading","isError","deleteTask","created","clearSelectedTasks","loadTaskData","reset","$nextTick","scrollTo","map","preview","isPreviewButtonVisible","extension","previewId","productionMap","project_id","fps","revision","isCommentingAllowed","taskTypeBorder","border","task_type_color","deleteTaskPath","taskPath","slice","entityList","displayedShots","displayedAssets","previousEntity","nextEntity","previewPlayer","$refs","isTVShow","entityName","windowTitle","deleteText","some","assigneeId","task_type_id","team","filter","task","loadTaskComments","loadTask","getCurrentTask","taskMap","route","params","task_id","getCurrentComment","comment_id","getTaskComment","getCurrentTaskComments","getTaskComments","getCurrentTaskPreviews","getTaskPreviews","taskId","taskStatusId","checklist","attachment","action","$store","dispatch","setTimeout","loadPreviewFileFormData","forms","isHighlighted","findIndex","addCommentExtraPreview","commentId","resetPreview","changeRoute","$router","push","previewPath","entityId","editTaskComment","deleteTaskComment","displayFirst","deleteTaskPreview","currentExtraPreviewId","onPreviewAdded","commit","unsubscribeFromTask","subscribeToTask","episode_id","section","production_id","currentEpisode","preview_id","updatePreviewAnnotation","showRemoveExtraPreviewModal","setValue","pinComment","time","onRemoteAcknowledge","$route","socket","events","eventData","refreshPreview","validation_status","replies","reply","refreshComment","metaInfo"],"mappings":"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","file":"js/chunk-feea3922.7de1f377.js","sourcesContent":["export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=style&index=0&id=ac79c5e0&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.label.length > 0)?_c('label',{staticClass:\"label\"},[_vm._v(\" \"+_vm._s(_vm.label)+\" \")]):_vm._e(),_c('div',{class:{\n      combo: true,\n      open: _vm.showList\n    },on:{\"click\":_vm.toggleList}},[_c('div',{staticClass:\"flexrow\"},[_c('div',{staticClass:\"selected-line flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.selectedOption ? _vm.selectedOption.label : '')+\" \")]),_c('chevron-down-icon',{staticClass:\"down-icon flexrow-item\"})],1),(_vm.showList)?_c('div',{ref:\"select\",staticClass:\"select-input\",on:{\"click\":_vm.toggleList}},_vm._l((_vm.options),function(option){return _c('div',{key:option.id,staticClass:\"option-line\",on:{\"click\":function($event){return _vm.selectOption(option)},\"mouseup\":function($event){if('button' in $event && $event.button !== 1){ return null; }return _vm.openRoute(option)}}},[_vm._v(\" \"+_vm._s(option.label)+\" \")])}),0):_vm._e()]),_c('div',{class:{\n      'c-mask': true,\n      'is-active': _vm.showList\n    },on:{\"click\":_vm.toggleList}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div>\n  <label class=\"label\" v-if=\"label.length > 0\">\n    {{ label }}\n  </label>\n  <div\n    :class=\"{\n      combo: true,\n      open: showList\n    }\"\n    @click=\"toggleList\"\n  >\n    <div\n      class=\"flexrow\"\n    >\n      <div\n        class=\"selected-line flexrow-item\"\n      >\n        {{ selectedOption ? selectedOption.label : '' }}\n      </div>\n      <chevron-down-icon class=\"down-icon flexrow-item\"/>\n    </div>\n    <div\n      class=\"select-input\"\n      ref=\"select\"\n      @click=\"toggleList\"\n      v-if=\"showList\"\n    >\n      <div\n        class=\"option-line\"\n        v-for=\"option in options\"\n        @click=\"selectOption(option)\"\n        @click.middle=\"openRoute(option)\"\n        :key=\"option.id\"\n      >\n        {{ option.label }}\n      </div>\n    </div>\n  </div>\n  <div\n    @click=\"toggleList\"\n    :class=\"{\n      'c-mask': true,\n      'is-active': showList\n    }\"\n  >\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { ChevronDownIcon } from 'vue-feather-icons'\n\nexport default {\n  name: 'combobox-styled',\n\n  components: {\n    ChevronDownIcon\n  },\n\n  data () {\n    return {\n      selectedOption: {\n        label: '',\n        value: ''\n      },\n      showList: false\n    }\n  },\n\n  props: {\n    label: {\n      default: '',\n      type: String\n    },\n    options: {\n      default: () => [],\n      type: Array\n    },\n    value: {\n      default: '',\n      type: String\n    }\n  },\n\n  mounted () {\n    if (this.options.length > 0) {\n      this.selectedOption = this.options[0]\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'isDarkTheme'\n    ])\n  },\n\n  methods: {\n    selectOption (option) {\n      this.$emit('input', option.value)\n      this.selectedOption = option\n      this.toggleList()\n    },\n\n    openRoute (option) {\n      const ahref = this.$router.resolve(option.route).href\n      const url =\n        `${window.location.protocol}//${window.location.host}${ahref}`\n      window.open(url, '_blank')\n    },\n\n    toggleList () {\n      this.showList = !this.showList\n    }\n  },\n\n  watch: {\n    options () {\n      if (this.options.length > 0) {\n        const option = this.options.find(o => o.value === this.value)\n        if (option) {\n          this.selectedOption = option\n        } else {\n          this.selectedOption = this.options[0]\n        }\n      }\n    },\n\n    value () {\n      this.selectedOption = this.options.find(o => o.value === this.value)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .select-input,\n  .selected-line,\n  .option-line,\n  .combo {\n    background: $dark-grey-light;\n    border-color: $dark-grey;\n  }\n\n  .option-line:hover {\n    background: $dark-purple;\n  }\n}\n\n.combo {\n  background: $white;\n  color: var(--text);\n  border: 1px solid $light-grey-light;\n  border-radius: 0.5em;\n  user-select: none;\n  cursor: pointer;\n  margin: 0;\n  margin-top: 1px;\n  max-width: 200px;\n  padding: 0.5em;\n  position: relative;\n  vertical-align: middle;\n\n  &.open {\n    border-bottom-left-radius: 0em;\n    border-bottom-right-radius: 0em;\n  }\n}\n\n.combo:hover {\n  border: 1px solid $green;\n}\n\n.selected-line {\n  flex: 1;\n}\n\n.option-line {\n  background: $white;\n  border-bottom: 1px solid $light-grey-light;\n  cursor: pointer;\n  margin: 0;\n  padding: 0.5em;\n  min-width: 150px;\n  width: inherit;\n\n  &:hover {\n    background: $purple;\n  }\n}\n\n.down-icon {\n  width: 15px;\n  min-width: 15px;\n  margin-right: 0.4em;\n  color: $green;\n  cursor: pointer;\n}\n\n.select-input {\n  background: var(--background);\n  border: 1px solid $light-grey-light;\n  border-bottom-left-radius: 1em;\n  border-bottom-right-radius: 1em;\n  left: 0;\n  margin-left: -1px;\n  max-height: 180px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  position: absolute;\n  width: inherit;\n  top: 38px;\n  z-index: 2000;\n\n  .option-line {\n    padding-right: 27px;\n  }\n}\n\n.c-mask {\n  z-index: 199;\n}\n\n.field .label {\n  padding-top: 5px;\n}\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComboboxStyled.vue?vue&type=template&id=597e1434&scoped=true&\"\nimport script from \"./ComboboxStyled.vue?vue&type=script&lang=js&\"\nexport * from \"./ComboboxStyled.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ComboboxStyled.vue?vue&type=style&index=0&id=597e1434&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"597e1434\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fixed-page columns\"},[_c('div',{staticClass:\"page column main-column\"},[_c('div',{staticClass:\"page-header pa1\"},[(_vm.currentTask)?_c('div',{staticClass:\"flexrow header-title\"},[(_vm.currentTaskType)?_c('task-type-name',{staticClass:\"flexrow-item task-type block\",attrs:{\"task-type\":_vm.currentTaskType,\"production-id\":_vm.currentProduction.id}}):_vm._e(),_c('span',{staticClass:\"flexrow-item ml2\"},[_c('entity-thumbnail',{staticClass:\"entity-thumbnail\",attrs:{\"entity\":_vm.currentTaskPreviews && _vm.currentTaskPreviews.length > 0\n              ? { preview_file_id: _vm.currentTaskPreviews[0].id }\n              : { },\"empty-width\":100,\"empty-height\":60,\"width\":100,\"with-link\":false}})],1),_c('div',{staticClass:\"title flexrow-item\"},[_c('router-link',{attrs:{\"to\":_vm.taskEntityPath}},[_c('page-title',{attrs:{\"text\":_vm.currentTask ? _vm.title : 'Loading...',\"bold\":\"\"}})],1)],1),_c('div',{staticClass:\"filler\"}),_c('div',{staticClass:\"has-text-right block\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.priority'))+\": \"+_vm._s(_vm.formatPriority(_vm.currentTask.priority))+\" \")])],1):_vm._e(),(_vm.currentTask)?_c('div',{staticClass:\"flexrow block mt1 mb1\"},[_c('span',{staticClass:\"flexrow-item\"},[_vm._v(_vm._s(_vm.$t('tasks.current_status')))]),(_vm.currentTask)?_c('validation-tag',{staticClass:\"is-medium flexrow-item\",attrs:{\"task\":_vm.currentTask,\"is-static\":true}}):_vm._e(),(_vm.currentTask.assignees.length > 0)?_c('span',{staticClass:\"flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.fields.assignees'))+\": \")]):_vm._e(),_vm._l((_vm.currentTask.assignees),function(personId){return _c('span',{key:personId,staticClass:\"flexrow-item avatar-wrapper\"},[_c('people-avatar',{key:personId,staticClass:\"flexrow-item\",attrs:{\"person\":_vm.personMap.get(personId),\"size\":30,\"font-size\":16}})],1)}),_c('div',{staticClass:\"filler\"}),(!_vm.isAssigned)?_c('subscribe-button',{staticClass:\"flexrow-item action-button\",attrs:{\"subscribed\":_vm.isAssigned || _vm.isSubscribed},on:{\"click\":_vm.toggleSubscribe}}):_vm._e()],2):_vm._e()]),_c('div',{ref:\"task-columns\",staticClass:\"task-columns\"},[_c('div',{staticClass:\"task-column preview-column\"},[_c('div',{staticClass:\"preview-column-content block\"},[_c('div',{staticClass:\"flexrow preview-header\"},[(_vm.isPreviews)?_c('div',{staticClass:\"flexrow-item\"},[_c('combobox-styled',{staticClass:\"preview-combo flexrow-item\",attrs:{\"options\":_vm.previewOptions},model:{value:(_vm.selectedPreviewId),callback:function ($$v) {_vm.selectedPreviewId=$$v},expression:\"selectedPreviewId\"}})],1):_c('div',[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_preview'))+\" \")])]),(_vm.isPreviewButtonVisible)?_c('div',{staticClass:\"set-main-preview flexrow-item flexrow pull-right\"},[(_vm.isPreviews && _vm.isCurrentUserManager)?_c('button',{class:{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': _vm.loading.setPreview\n                },on:{\"click\":_vm.setPreview}},[_c('image-icon',{staticClass:\"icon\"}),_c('span',{staticClass:\"text\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview'))+\" \")])],1):_vm._e(),(_vm.errors.setPreview)?_c('span',{staticClass:\"error flexrow-item\"},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.set_preview_error'))+\" \")]):_vm._e()]):_vm._e(),(_vm.currentTask && _vm.currentTask.entity && _vm.currentTask.entity.preview_file_id === _vm.currentPreviewId)?_c('div',{staticClass:\"set-main-preview flexrow-item pull-right\"},[_c('em',[_vm._v(_vm._s(_vm.$t('tasks.set_preview_done')))])]):_vm._e()]),_c('div',{staticClass:\"preview-area mt1\"},[(_vm.isPreviews)?_c('div',[(_vm.currentPreview)?_c('preview-player',{ref:\"preview-player\",attrs:{\"previews\":_vm.currentPreview.previews,\"task-type-map\":_vm.taskTypeMap,\"entity-preview-files\":_vm.taskEntityPreviews,\"read-only\":_vm.isCurrentUserArtist,\"last-preview-files\":_vm.lastFivePreviews,\"task\":_vm.currentTask,\"extra-wide\":true},on:{\"annotation-changed\":_vm.onAnnotationChanged,\"add-extra-preview\":_vm.onAddExtraPreviewClicked,\"remove-extra-preview\":_vm.onRemoveExtraPreviewClicked,\"change-current-preview\":_vm.changeCurrentPreview,\"time-updated\":_vm.onTimeUpdated}}):_vm._e()],1):_vm._e()])]),_c('div',{staticClass:\"flexrow-item block mt1 mr0 info-block\"},[_c('page-subtitle',{attrs:{\"text\":_vm.$t('main.info')}}),_c('div',{staticClass:\"table-body mt1\"},[(_vm.currentTask)?_c('table',{staticClass:\"datatable\"},[_c('tbody',{staticClass:\"table-body\"},[_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.estimation')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.estimation))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.duration')))]),_c('td',[_vm._v(_vm._s(_vm.formatDuration(_vm.currentTask.duration)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.retake_count')))]),_c('td',[_vm._v(_vm._s(_vm.currentTask.retake_count))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.start_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.start_date)))])]),_c('tr',{staticClass:\"datatable-row\"},[_c('td',{staticClass:\"field-label\"},[_vm._v(_vm._s(_vm.$t('tasks.fields.due_date')))]),_c('td',[_vm._v(_vm._s(_vm.formatSimpleDate(_vm.currentTask.due_date)))])])])]):_vm._e()])],1),_c('div',{staticClass:\"pa2\"})]),_c('div',{staticClass:\"task-column comments-column\"},[(_vm.currentTask)?_c('div',[_c('div',[(_vm.isCommentingAllowed)?_c('add-comment',{ref:\"add-comment\",attrs:{\"is-error\":_vm.errors.addComment,\"is-loading\":_vm.loading.addComment,\"is-movie\":_vm.isMovie,\"user\":_vm.user,\"team\":_vm.currentTeam,\"task\":_vm.currentTask,\"task-status\":_vm.taskStatusForCurrentUser,\"attached-file-name\":_vm.attachedFileName,\"fps\":parseInt(_vm.currentFps),\"time\":_vm.currentTime,\"revision\":_vm.currentRevision},on:{\"add-comment\":_vm.addComment,\"add-preview\":_vm.onAddPreviewClicked,\"duplicate-comment\":_vm.onDuplicateComment,\"file-drop\":_vm.selectFile,\"annotation-snapshots-requested\":_vm.extractAnnotationSnapshots}}):_vm._e(),(_vm.currentTaskComments && _vm.currentTaskComments.length > 0)?_c('div',{staticClass:\"comments\"},_vm._l((_vm.currentTaskComments),function(comment,index){return _c('comment',{key:comment.id,attrs:{\"comment\":comment,\"task\":_vm.currentTask,\"highlighted\":false,\"current-user\":_vm.user,\"editable\":(\n                  comment.person && _vm.user.id === comment.person.id ||\n                  _vm.isCurrentUserAdmin\n                ),\"is-first\":index === 0,\"is-last\":index === _vm.pinnedCount,\"is-change\":_vm.isStatusChange(index)},on:{\"ack-comment\":_vm.ackComment,\"pin-comment\":_vm.onPinComment,\"edit-comment\":_vm.onEditComment,\"delete-comment\":_vm.onDeleteComment,\"checklist-updated\":_vm.saveComment,\"time-code-clicked\":_vm.timeCodeClicked}})}),1):_c('div',{staticClass:\"no-comment\"},[_c('em',[_vm._v(\" \"+_vm._s(_vm.$t('tasks.no_comment'))+\" \")])])],1)]):_c('div',{staticClass:\"has-text-centered\"},[_c('spinner')],1)])]),_c('add-preview-modal',{ref:\"add-preview-modal\",attrs:{\"active\":_vm.modals.addPreview,\"is-loading\":_vm.loading.addPreview,\"is-error\":_vm.errors.addPreview,\"form-data\":_vm.addPreviewFormData},on:{\"cancel\":function($event){_vm.modals.addPreview = false},\"fileselected\":_vm.selectFile,\"confirm\":_vm.closeAddPreviewModal}}),_c('add-preview-modal',{ref:\"add-extra-preview-modal\",attrs:{\"active\":_vm.modals.addExtraPreview,\"is-loading\":_vm.loading.addExtraPreview,\"is-error\":_vm.errors.addExtraPreview,\"form-data\":_vm.addExtraPreviewFormData},on:{\"cancel\":_vm.hideExtraPreviewModal,\"fileselected\":_vm.selectFile,\"confirm\":_vm.createExtraPreview}}),_c('edit-comment-modal',{attrs:{\"active\":_vm.modals.editComment,\"is-loading\":_vm.loading.editComment,\"is-error\":_vm.errors.editComment,\"comment-to-edit\":_vm.commentToEdit,\"team\":_vm.currentTeam},on:{\"confirm\":_vm.confirmEditTaskComment,\"cancel\":_vm.onCancelEditComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteComment,\"is-loading\":_vm.loading.deleteComment,\"is-error\":_vm.errors.deleteComment,\"text\":_vm.$t('tasks.delete_comment'),\"error-text\":_vm.$t('tasks.delete_comment_error')},on:{\"confirm\":_vm.confirmDeleteTaskComment,\"cancel\":_vm.onCancelDeleteComment}}),_c('delete-modal',{attrs:{\"active\":_vm.modals.deleteExtraPreview,\"is-loading\":_vm.loading.deleteExtraPreview,\"is-error\":_vm.errors.deleteExtraPreview,\"text\":_vm.$t('tasks.delete_preview'),\"error-text\":_vm.$t('tasks.delete_preview_error')},on:{\"cancel\":_vm.hideRemoveExtraPreviewModal,\"confirm\":_vm.confirmDeleteTaskPreview}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"fixed-page columns\">\n  <div class=\"page column main-column\">\n    <div class=\"page-header pa1\">\n      <div\n        class=\"flexrow header-title\"\n        v-if=\"currentTask\"\n      >\n        <task-type-name\n          class=\"flexrow-item task-type block\"\n          :task-type=\"currentTaskType\"\n          :production-id=\"currentProduction.id\"\n          v-if=\"currentTaskType\"\n        />\n        <span\n          class=\"flexrow-item ml2\"\n        >\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentTaskPreviews && currentTaskPreviews.length > 0\n              ? { preview_file_id: currentTaskPreviews[0].id }\n              : { }\"\n            :empty-width=\"100\"\n            :empty-height=\"60\"\n            :width=\"100\"\n            :with-link=\"false\"\n          />\n        </span>\n        <div class=\"title flexrow-item\">\n          <router-link :to=\"taskEntityPath\">\n            <page-title :text=\"currentTask ? title : 'Loading...'\" bold />\n          </router-link>\n        </div>\n        <div class=\"filler\">\n        </div>\n        <div class=\"has-text-right block\">\n          {{ $t('tasks.fields.priority') }}:\n          {{ formatPriority(currentTask.priority) }}\n        </div>\n      </div>\n\n      <div\n        class=\"flexrow block mt1 mb1\"\n        v-if=\"currentTask\"\n      >\n        <span class=\"flexrow-item\">{{ $t('tasks.current_status') }}</span>\n        <validation-tag\n          class=\"is-medium flexrow-item\"\n          :task=\"currentTask\"\n          :is-static=\"true\"\n          v-if=\"currentTask\"\n        />\n        <span\n          class=\"flexrow-item\"\n          v-if=\"currentTask.assignees.length > 0\"\n        >\n          {{ $t('tasks.fields.assignees') }}:\n        </span>\n        <span\n          class=\"flexrow-item avatar-wrapper\"\n          :key=\"personId\"\n          v-for=\"personId in currentTask.assignees\"\n        >\n          <people-avatar\n            class=\"flexrow-item\"\n            :key=\"personId\"\n            :person=\"personMap.get(personId)\"\n            :size=\"30\"\n            :font-size=\"16\"\n          />\n       </span>\n       <div class=\"filler\"></div>\n       <subscribe-button\n         class=\"flexrow-item action-button\"\n         :subscribed=\"isAssigned || isSubscribed\"\n         @click=\"toggleSubscribe\"\n         v-if=\"!isAssigned\"\n       />\n      </div>\n    </div>\n\n    <div class=\"task-columns\" ref=\"task-columns\">\n      <div class=\"task-column preview-column\">\n        <div class=\"preview-column-content block\">\n          <div class=\"flexrow preview-header\">\n            <div class=\"flexrow-item\" v-if=\"isPreviews\">\n              <combobox-styled\n                class=\"preview-combo flexrow-item\"\n                :options=\"previewOptions\"\n                v-model=\"selectedPreviewId\"\n              />\n            </div>\n            <div v-else>\n              <em>\n                {{ $t('tasks.no_preview')}}\n              </em>\n            </div>\n\n            <div\n              class=\"set-main-preview flexrow-item flexrow pull-right\"\n              v-if=\"isPreviewButtonVisible\"\n            >\n              <button\n                :class=\"{\n                  button: true,\n                  'flexrow-item': true,\n                  'is-loading': loading.setPreview\n                }\"\n                @click=\"setPreview\"\n                v-if=\"isPreviews && isCurrentUserManager\"\n              >\n                <image-icon class=\"icon\" />\n                <span class=\"text\">\n                  {{ $t('tasks.set_preview') }}\n                </span>\n              </button>\n              <span class=\"error flexrow-item\" v-if=\"errors.setPreview\">\n                {{ $t('tasks.set_preview_error') }}\n              </span>\n            </div>\n            <div\n              class=\"set-main-preview flexrow-item pull-right\"\n              v-if=\"currentTask && currentTask.entity && currentTask.entity.preview_file_id === currentPreviewId\">\n              <em>{{ $t('tasks.set_preview_done') }}</em>\n            </div>\n          </div>\n\n          <div class=\"preview-area mt1\">\n            <div\n              v-if=\"isPreviews\"\n            >\n              <preview-player\n                :previews=\"currentPreview.previews\"\n                :task-type-map=\"taskTypeMap\"\n                :entity-preview-files=\"taskEntityPreviews\"\n                :read-only=\"isCurrentUserArtist\"\n                :last-preview-files=\"lastFivePreviews\"\n                :task=\"currentTask\"\n                :extra-wide=\"true\"\n                @annotation-changed=\"onAnnotationChanged\"\n                @add-extra-preview=\"onAddExtraPreviewClicked\"\n                @remove-extra-preview=\"onRemoveExtraPreviewClicked\"\n                @change-current-preview=\"changeCurrentPreview\"\n                @time-updated=\"onTimeUpdated\"\n                ref=\"preview-player\"\n                v-if=\"currentPreview\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"flexrow-item block mt1 mr0 info-block\">\n          <page-subtitle :text=\"$t('main.info')\" />\n          <div class=\"table-body mt1\">\n            <table class=\"datatable\" v-if=\"currentTask\">\n              <tbody class=\"table-body\">\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.estimation') }}</td>\n                  <td>{{ currentTask.estimation }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.duration') }}</td>\n                  <td>{{ formatDuration(currentTask.duration) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.retake_count') }}</td>\n                  <td>{{ currentTask.retake_count }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.start_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.start_date) }}</td>\n                </tr>\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">{{ $t('tasks.fields.due_date') }}</td>\n                  <td>{{ formatSimpleDate(currentTask.due_date) }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class=\"pa2\">\n        </div>\n      </div>\n\n      <div class=\"task-column comments-column\">\n        <div v-if=\"currentTask\">\n          <div>\n            <add-comment\n              ref=\"add-comment\"\n              :is-error=\"errors.addComment\"\n              :is-loading=\"loading.addComment\"\n              :is-movie=\"isMovie\"\n              :user=\"user\"\n              :team=\"currentTeam\"\n              :task=\"currentTask\"\n              :task-status=\"taskStatusForCurrentUser\"\n              :attached-file-name=\"attachedFileName\"\n              :fps=\"parseInt(currentFps)\"\n              :time=\"currentTime\"\n              :revision=\"currentRevision\"\n              @add-comment=\"addComment\"\n              @add-preview=\"onAddPreviewClicked\"\n              @duplicate-comment=\"onDuplicateComment\"\n              @file-drop=\"selectFile\"\n              @annotation-snapshots-requested=\"extractAnnotationSnapshots\"\n              v-if=\"isCommentingAllowed\"\n            />\n            <div\n              class=\"comments\"\n              v-if=\"currentTaskComments && currentTaskComments.length > 0\"\n            >\n              <comment\n                :comment=\"comment\"\n                :task=\"currentTask\"\n                :highlighted=\"false\"\n                :key=\"comment.id\"\n                :current-user=\"user\"\n                :editable=\"(\n                  comment.person && user.id === comment.person.id ||\n                  isCurrentUserAdmin\n                )\"\n                :is-first=\"index === 0\"\n                :is-last=\"index === pinnedCount\"\n                :is-change=\"isStatusChange(index)\"\n                @ack-comment=\"ackComment\"\n                @pin-comment=\"onPinComment\"\n                @edit-comment=\"onEditComment\"\n                @delete-comment=\"onDeleteComment\"\n                @checklist-updated=\"saveComment\"\n                @time-code-clicked=\"timeCodeClicked\"\n                v-for=\"(comment, index) in currentTaskComments\"\n              />\n            </div>\n            <div class=\"no-comment\" v-else>\n              <em>\n                {{ $t('tasks.no_comment')}}\n              </em>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"has-text-centered\" v-else>\n          <spinner />\n        </div>\n      </div>\n\n    </div>\n\n    <add-preview-modal\n      ref=\"add-preview-modal\"\n      :active=\"modals.addPreview\"\n      :is-loading=\"loading.addPreview\"\n      :is-error=\"errors.addPreview\"\n      :form-data=\"addPreviewFormData\"\n      @cancel=\"modals.addPreview = false\"\n      @fileselected=\"selectFile\"\n      @confirm=\"closeAddPreviewModal\"\n    />\n\n    <add-preview-modal\n      ref=\"add-extra-preview-modal\"\n      :active=\"modals.addExtraPreview\"\n      :is-loading=\"loading.addExtraPreview\"\n      :is-error=\"errors.addExtraPreview\"\n      :form-data=\"addExtraPreviewFormData\"\n      @cancel=\"hideExtraPreviewModal\"\n      @fileselected=\"selectFile\"\n      @confirm=\"createExtraPreview\"\n    />\n\n    <edit-comment-modal\n      :active=\"modals.editComment\"\n      :is-loading=\"loading.editComment\"\n      :is-error=\"errors.editComment\"\n      :comment-to-edit=\"commentToEdit\"\n      :team=\"currentTeam\"\n      @confirm=\"confirmEditTaskComment\"\n      @cancel=\"onCancelEditComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteComment\"\n      :is-loading=\"loading.deleteComment\"\n      :is-error=\"errors.deleteComment\"\n      :text=\"$t('tasks.delete_comment')\"\n      :error-text=\"$t('tasks.delete_comment_error')\"\n      @confirm=\"confirmDeleteTaskComment\"\n      @cancel=\"onCancelDeleteComment\"\n    />\n\n    <delete-modal\n      :active=\"modals.deleteExtraPreview\"\n      :is-loading=\"loading.deleteExtraPreview\"\n      :is-error=\"errors.deleteExtraPreview\"\n      :text=\"$t('tasks.delete_preview')\"\n      :error-text=\"$t('tasks.delete_preview_error')\"\n      @cancel=\"hideRemoveExtraPreviewModal\"\n      @confirm=\"confirmDeleteTaskPreview\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport {\n  ImageIcon\n} from 'vue-feather-icons'\n\nimport { getTaskEntityPath } from '@/lib/path'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport AddComment from '@/components/widgets/AddComment'\nimport AddPreviewModal from '@/components/modals/AddPreviewModal'\nimport Comment from '@/components/widgets/Comment'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled.vue'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditCommentModal from '@/components/modals/EditCommentModal'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport PeopleAvatar from '@/components/widgets/PeopleAvatar'\nimport Spinner from '@/components/widgets/Spinner'\nimport SubscribeButton from '@/components/widgets/SubscribeButton'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\nimport ValidationTag from '@/components/widgets/ValidationTag'\nimport PreviewPlayer from '@/components/previews/PreviewPlayer'\n\nexport default {\n  name: 'task',\n  mixins: [formatListMixin],\n  components: {\n    AddComment,\n    AddPreviewModal,\n    ComboboxStyled,\n    Comment,\n    DeleteModal,\n    EditCommentModal,\n    EntityThumbnail,\n    ImageIcon,\n    PageSubtitle,\n    PageTitle,\n    PeopleAvatar,\n    PreviewPlayer,\n    Spinner,\n    SubscribeButton,\n    TaskTypeName,\n    ValidationTag\n  },\n\n  data () {\n    return {\n      attachedFileName: '',\n      currentTime: 0,\n      selectedTab: 'validation',\n      taskLoading: {\n        isLoading: true,\n        isError: false\n      },\n      modals: {\n        addPreview: false,\n        addExtraPreview: false,\n        deleteExtraPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      loading: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      errors: {\n        addComment: false,\n        addPreview: false,\n        addExtraPreview: false,\n        setPreview: false,\n        deleteTask: false,\n        deleteComment: false,\n        editComment: false\n      },\n      addPreviewFormData: null,\n      addExtraPreviewFormData: null,\n      currentTask: null,\n      currentTaskComments: [],\n      currentTaskPreviews: [],\n      commentToEdit: null,\n      isSubscribed: false,\n      selectedPreviewId: null\n    }\n  },\n\n  created () {\n    this.clearSelectedTasks()\n    this.loadTaskData()\n  },\n\n  mounted () {\n    this.reset()\n    this.$nextTick(() => {\n      if (this.$refs['task-columns']) {\n        this.$refs['task-columns'].scrollTop = 100\n        window.scrollTo(0, 0)\n      }\n    })\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'displayedShots',\n      'displayedAssets',\n      'getTaskComments',\n      'getTaskPreviews',\n      'getTaskComment',\n      'isCurrentUserAdmin',\n      'isCurrentUserArtist',\n      'isCurrentUserClient',\n      'isCurrentUserManager',\n      'isSingleEpisode',\n      'isTVShow',\n      'personMap',\n      'productionMap',\n      'route',\n      'taskEntityPreviews',\n      'taskStatus',\n      'taskStatusForCurrentUser',\n      'taskMap',\n      'taskTypeMap',\n      'user'\n    ]),\n\n    previewOptions () {\n      return this.currentTaskPreviews.map(preview => {\n        return {\n          label: `v${preview.revision}`,\n          value: preview.id\n        }\n      })\n    },\n\n    isPreviewButtonVisible () {\n      return (\n        this.isCurrentUserManager &&\n        this.currentTask &&\n        this.currentTask.entity &&\n        this.currentTask.entity.preview_file_id !== this.currentPreviewId &&\n        ['png', 'mp4'].includes(this.extension)\n      )\n    },\n\n    isMovie () {\n      return this.extension === 'mp4'\n    },\n\n    extension () {\n      return this.currentPreview ? this.currentPreview.extension : ''\n    },\n\n    currentPreviewId () {\n      return this.currentPreview ? this.currentPreview.id : ''\n    },\n\n    currentPreview () {\n      if (this.isPreviews) {\n        let currentPreview = this.currentTaskPreviews[0]\n        const previewId = this.route.params.preview_id\n        if (this.selectedPreviewId) {\n          currentPreview = this.currentTaskPreviews.find((preview) => {\n            return preview.id === previewId\n          })\n        }\n        return currentPreview\n      } else {\n        return null\n      }\n    },\n\n    currentFps () {\n      return this.productionMap.get(this.currentTask.project_id).fps || '25'\n    },\n\n    currentRevision () {\n      return this.currentPreview ? this.currentPreview.revision : 0\n    },\n\n    isCommentingAllowed () {\n      return (\n        this.isCurrentUserManager ||\n        this.isCurrentUserClient ||\n        this.currentTask.assignees.find(\n          (personId) => personId === this.user.id\n        )\n      )\n    },\n\n    taskTypeBorder () {\n      let border = 'transparent'\n      if (this.currentTask) border = this.currentTask.task_type_color\n      return {\n        'border-left': `4px solid ${border}`\n      }\n    },\n\n    deleteTaskPath () {\n      return this.taskPath(this.currentTask, 'task-delete')\n    },\n\n    isPreviews () {\n      return this.currentTaskPreviews && this.currentTaskPreviews.length > 0\n    },\n\n    taskEntityPath () {\n      if (this.currentTask) {\n        const episodeId = this.currentEpisode\n          ? this.currentEpisode.id\n          : this.$route.params.episode_id\n        return getTaskEntityPath(this.currentTask, episodeId)\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    lastFivePreviews () {\n      if (this.currentTaskPreviews) {\n        return this.currentTaskPreviews.slice(0, 5)\n      } else {\n        return []\n      }\n    },\n\n    entityList () {\n      const entity = this.displayedShots.find((entity) => {\n        return entity.id === this.currentTask.entity_id\n      })\n      if (entity) {\n        return this.displayedShots\n      } else {\n        return this.displayedAssets\n      }\n    },\n\n    previousEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n        let firstTraversal = false\n\n        let previousEntityIndex = entityIndex - 1\n        if (previousEntityIndex < 0) {\n          previousEntityIndex = this.entityList.length - 1\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[previousEntityIndex]) {\n            const entity = this.entityList[previousEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            previousEntityIndex--\n            if (previousEntityIndex < 0) {\n              previousEntityIndex = this.entityList.length\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    nextEntity () {\n      if (this.currentTask) {\n        const taskTypeId = this.currentTask.task_type_id\n        let firstTraversal = false\n        const entityIndex = this.entityList.findIndex((entity) => {\n          return entity.id === this.currentTask.entity_id\n        })\n\n        let nextEntityIndex = entityIndex + 1\n        if (nextEntityIndex >= this.entityList.length) {\n          nextEntityIndex = 0\n        }\n\n        let taskId = null\n        while (!taskId) {\n          if (this.entityList[nextEntityIndex]) {\n            const entity = this.entityList[nextEntityIndex]\n            taskId = entity.tasks.find((ctaskId) => {\n              const task = this.taskMap.get(taskId)\n              if (task) {\n                return task.task_type_id === taskTypeId\n              } else {\n                return false\n              }\n            })\n          } else {\n            taskId = this.currentTask.id\n          }\n\n          if (!taskId) {\n            nextEntityIndex++\n            if (nextEntityIndex >= this.entityList.length) {\n              nextEntityIndex = 0\n\n              if (firstTraversal) {\n                return null\n              }\n              firstTraversal = true\n            }\n          }\n        }\n\n        return this.taskPath({ id: taskId })\n      } else {\n        return {\n          name: 'open-productions'\n        }\n      }\n    },\n\n    previewPlayer () {\n      return this.$refs['preview-player']\n    },\n\n    title () {\n      if (this.currentTask) {\n        const type = this.currentTask.entity_type_name\n        let entityName =\n          this.currentTask.full_entity_name || this.currentTask.entity_name\n        if (this.isTVShow && type === 'Shot') {\n          entityName = entityName\n            .split('/')\n            .splice(1)\n            .join('/')\n        }\n        return `${entityName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    windowTitle () {\n      if (this.currentTask) {\n        const taskTypeName = this.currentTask.task_type_name\n        return `${this.title} / ${taskTypeName}`\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    deleteText () {\n      if (this.currentTask) {\n        const taskType = this.taskTypeMap.get(this.currentTask.task_type_id)\n        return this.$t('main.delete_text', {\n          name: `${this.currentTask.entity_name} / ${taskType.name}`\n        })\n      } else {\n        return ''\n      }\n    },\n\n    isAssigned () {\n      if (this.currentTask) {\n        return this.currentTask.assignees.some((assigneeId) => {\n          return assigneeId === this.user.id\n        })\n      } else {\n        return false\n      }\n    },\n\n    currentTaskType () {\n      if (this.currentTask) {\n        return this.taskTypeMap.get(this.currentTask.task_type_id)\n      } else {\n        return null\n      }\n    },\n\n    currentTeam () {\n      return this.currentProduction.team.map(id => this.personMap.get(id))\n    },\n\n    pinnedCount () {\n      return this.currentTaskComments.filter(c => c.pinned).length\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'ackComment',\n      'addCommentPreview',\n      'addCommentExtraPreview',\n      'commentTask',\n      'commentTaskWithPreview',\n      'changeCommentPreview',\n      'clearSelectedTasks',\n      'deleteTask',\n      'deleteTaskPreview',\n      'deleteTaskComment',\n      'editTaskComment',\n      'loadEpisodes',\n      'loadTask',\n      'loadShots',\n      'loadAssets',\n      'loadPreviewFileFormData',\n      'loadTaskComments',\n      'loadTaskSubscribed',\n      'refreshComment',\n      'refreshPreview',\n      'pinComment',\n      'subscribeToTask',\n      'setCurrentEpisode',\n      'unsubscribeFromTask',\n      'updatePreviewAnnotation'\n    ]),\n\n    loadTaskData () {\n      const task = this.getCurrentTask()\n      if (!task) {\n        this.taskLoading = { isLoading: true, isError: false }\n        this.loadTask({ taskId: this.route.params.task_id })\n          .then(task => {\n            let loadingFunction = (callback) => {\n              this.loadAssets()\n                .then(callback)\n            }\n\n            if (task.entity_type_name === 'Shot') {\n              loadingFunction = (callback) => {\n                this.loadEpisodes()\n                  .then(() => {\n                    if (this.isTVShow) {\n                      this.setCurrentEpisode(task.episode.id)\n                    }\n                    this.loadShots(callback)\n                  })\n                  .catch(callback)\n              }\n            }\n            loadingFunction(() => {\n              this.currentTask = task\n              this.loadTaskComments({\n                taskId: task.id,\n                entityId: task.entity_id\n              })\n                .then(() => this.loadTaskSubscribed({ taskId: task.id }))\n                .then((subscribed) => {\n                  this.isSubscribed = subscribed\n                  this.reset()\n                  this.taskLoading = { isLoading: false, isError: false }\n                }).catch((err) => {\n                  console.error(err)\n                  this.taskLoading = { isLoading: false, isError: true }\n                })\n            })\n          })\n      } else {\n        const taskId = this.route.params.task_id\n        this.currentTask = task\n        this.loadTaskComments({ taskId, entityId: task.entity_id })\n          .then(() => this.loadTaskSubscribed({ taskId }))\n          .then(subscribed => {\n            this.isSubscribed = subscribed\n            this.reset()\n          })\n          .catch(err => {\n            console.error(err)\n            this.taskLoading.isError = true\n          })\n      }\n    },\n\n    getCurrentTask () {\n      return this.taskMap.get(this.route.params.task_id)\n    },\n\n    getCurrentComment () {\n      if (this.route.params.comment_id) {\n        return this.getTaskComment(\n          this.route.params.task_id,\n          this.route.params.comment_id\n        )\n      }\n    },\n\n    getCurrentTaskComments () {\n      return this.getTaskComments(this.route.params.task_id)\n    },\n\n    getCurrentTaskPreviews () {\n      return this.getTaskPreviews(this.route.params.task_id)\n    },\n\n    addComment (comment, attachment, checklist, taskStatusId) {\n      const params = {\n        taskId: this.currentTask.id,\n        taskStatusId: taskStatusId,\n        comment: comment,\n        checklist,\n        attachment\n      }\n      let action = 'commentTask'\n      if (this.attachedFileName) action = 'commentTaskWithPreview'\n      this.loading.addComment = true\n      this.errors.addComment = false\n      this.$store.dispatch(action, params)\n        .then(() => {\n          this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          this.resetPreview()\n          this.$refs['add-preview-modal'].reset()\n          this.reset()\n          this.attachedFileName = ''\n          this.loading.addComment = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addComment = true\n          this.loading.addComment = false\n        })\n    },\n\n    reset () {\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      this.currentTask = this.getCurrentTask()\n      setTimeout(() => {\n        if (this.$route.params.preview_id) {\n          this.selectedPreviewId = this.$route.params.preview_id\n        }\n      }, 1000)\n    },\n\n    selectFile (forms) {\n      this.loadPreviewFileFormData(forms)\n      this.attachedFileName = forms\n        .map((form) => form.get('file').name)\n        .join(', ')\n    },\n\n    isHighlighted (comment) {\n      return comment.preview && comment.preview.id === this.currentPreviewId\n    },\n\n    createExtraPreview () {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.errors.addExtraPreview = false\n      this.loading.addExtraPreview = true\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === preview.id) >= 0\n      })\n      this.addCommentExtraPreview({\n        taskId: this.currentTask.id,\n        previewId: this.currentPreview.id,\n        commentId: comment.id\n      })\n        .then(() => {\n          this.loading.addExtraPreview = false\n          this.modals.addExtraPreview = false\n          this.$refs['add-extra-preview-modal'].reset()\n          setTimeout(() => {\n            this.previewPlayer.displayLast()\n          }, 0)\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.addExtraPreview = true\n          this.loading.addExtraPreview = false\n        })\n    },\n\n    resetPreview (changeRoute = true) {\n      const previews = this.currentTaskPreviews\n      const preview = previews.length > 0 ? previews[0] : null\n      this.currentTaskComments = this.getCurrentTaskComments()\n      this.currentTaskPreviews = this.getCurrentTaskPreviews()\n      if (preview && changeRoute) {\n        this.$router.push(this.previewPath(preview.id))\n      }\n    },\n\n    setPreview () {\n      this.loading.setPreview = true\n      this.errors.setPreview = false\n      this.$store.dispatch('setPreview', {\n        taskId: this.currentTask.id,\n        entityId: this.currentTask.entity.id,\n        previewId: this.currentPreviewId\n      })\n        .then(() => {\n          this.loading.setPreview = false\n        })\n        .catch((err) => {\n          console.error(err)\n          this.errors.setPreview = true\n        })\n    },\n\n    confirmEditTaskComment (comment) {\n      this.loading.editComment = true\n      this.errors.editComment = false\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment\n      })\n        .then(() => {\n          this.loading.editComment = false\n          this.modals.editComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.editComment = true\n        })\n    },\n\n    saveComment (comment, checklist) {\n      this.editTaskComment({\n        taskId: this.currentTask.id,\n        comment,\n        checklist\n      })\n    },\n\n    confirmDeleteTaskComment () {\n      this.loading.deleteComment = true\n      this.errors.deleteComment = false\n      const commentId = this.commentToEdit.id\n\n      this.deleteTaskComment({\n        taskId: this.currentTask.id,\n        commentId\n      })\n        .then(() => {\n          this.loading.deleteComment = false\n          this.reset()\n          if (this.isPreviews) this.resetPreview()\n          this.modals.deleteComment = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.deleteComment = false\n          this.errors.deleteComment = true\n        })\n    },\n\n    confirmDeleteTaskPreview () {\n      this.loading.deleteExtraPreview = true\n      this.errors.deleteExtraPreview = false\n      const previewId = this.currentPreviewId\n      const comment = this.getCurrentTaskComments().find((comment) => {\n        return comment.previews.findIndex((p) => p.id === previewId) >= 0\n      })\n\n      this.previewPlayer.displayFirst()\n      this.deleteTaskPreview({\n        taskId: this.currentTask.id,\n        commentId: comment.id,\n        previewId: this.currentExtraPreviewId\n      })\n        .then(() => {\n          this.loading.deleteExtraPreview = false\n          this.resetPreview()\n          this.hideRemoveExtraPreviewModal()\n        })\n        .catch((err) => {\n          console.error(err)\n          this.loading.deleteExtraPreview = false\n          this.errors.deleteExtraPreview = true\n        })\n    },\n\n    onPreviewAdded (eventData) {\n      const taskId = eventData.task_id\n      const commentId = eventData.comment_id\n      const previewId = eventData.preview_file_id\n      const revision = eventData.revision\n      const extension = eventData.extension\n      const comment = this.$store.getters.getTaskComment(taskId, commentId)\n\n      if (\n        this.currentTask &&\n        comment &&\n        (\n          comment.previews.length === 0 ||\n          comment.previews[0].id !== previewId\n        ) &&\n        taskId === this.currentTask.id\n      ) {\n        this.$store.commit('ADD_PREVIEW_END', {\n          preview: {\n            id: previewId,\n            revision,\n            extension: extension\n          },\n          taskId,\n          commentId,\n          comment\n        })\n        this.resetPreview()\n      }\n    },\n\n    toggleSubscribe () {\n      if (this.currentTask && !this.isAssigned) {\n        if (this.isSubscribed) {\n          this.unsubscribeFromTask(this.currentTask.id)\n          this.isSubscribed = false\n        } else {\n          this.subscribeToTask(this.currentTask.id)\n          this.isSubscribed = true\n        }\n      }\n    },\n\n    taskPath (task, section = 'task') {\n      if (!task) {\n        task = this.currentTask\n      } else {\n        task.project_id = this.currentTask.project_id\n        task.episode_id = this.currentTask.episode_id\n      }\n\n      let route = { name: 'open-productions' }\n      if (task) {\n        route = {\n          name: section,\n          params: {\n            production_id: task.project_id,\n            task_id: task.id\n          }\n        }\n\n        if (this.isTVShow && this.currentEpisode) {\n          route.name = `episode-${section}`\n          route.params.episode_id = task.episode_id || this.currentEpisode.id\n        }\n      }\n      return route\n    },\n\n    previewPath (previewId) {\n      const route = this.taskPath(this.currentTask, 'task-preview')\n\n      if (route.params) {\n        route.params.preview_id = previewId\n      }\n      return route\n    },\n\n    onAnnotationChanged ({ preview, additions, deletions, updates }) {\n      const taskId = this.currentTask.id\n      this.updatePreviewAnnotation({\n        taskId, preview, additions, deletions, updates\n      })\n    },\n\n    onAddExtraPreviewClicked () {\n      this.modals.addExtraPreview = true\n    },\n\n    onRemoveExtraPreviewClicked (preview) {\n      this.showRemoveExtraPreviewModal(preview)\n    },\n\n    hideExtraPreviewModal () {\n      this.modals.addExtraPreview = false\n    },\n\n    showRemoveExtraPreviewModal (preview) {\n      this.currentExtraPreviewId = preview.id\n      this.modals.deleteExtraPreview = true\n    },\n\n    hideRemoveExtraPreviewModal () {\n      this.modals.deleteExtraPreview = false\n    },\n\n    onAddPreviewClicked () {\n      this.modals.addPreview = true\n    },\n\n    closeAddPreviewModal () {\n      this.modals.addPreview = false\n    },\n\n    onDuplicateComment (comment) {\n      this.$refs['add-comment'].setValue(comment)\n    },\n\n    onPinComment (comment) {\n      this.pinComment(comment)\n    },\n\n    onEditComment (comment) {\n      this.commentToEdit = comment\n      this.modals.editComment = true\n    },\n\n    onDeleteComment (comment) {\n      this.commentToEdit = comment\n      this.modals.deleteComment = true\n    },\n\n    onCancelEditComment (comment) {\n      this.modals.editComment = false\n    },\n\n    onCancelDeleteComment (comment) {\n      this.modals.deleteComment = false\n    },\n\n    onTimeUpdated (time) {\n      this.currentTime = time\n    },\n\n    changeCurrentPreview (preview) {\n      this.$router.push(this.previewPath(preview.id))\n    },\n\n    onRemoteAcknowledge (eventData, type) {\n      if (this.currentTask) {\n        const comment = this.currentTaskComments.find(\n          c => c.id === eventData.comment_id\n        )\n        const user = this.personMap.get(eventData.person_id)\n        if (comment && user) {\n          if (this.user.id === user.id) {\n            if (\n              (\n                type === 'ack' &&\n                !comment.acknowledgements.includes(user.id)\n              ) ||\n              (\n                type === 'unack' &&\n                comment.acknowledgements.includes(user.id)\n              )\n            ) {\n              this.$store.commit('ACK_COMMENT', { comment, user })\n            }\n          } else {\n            this.$store.commit('ACK_COMMENT', { comment, user })\n          }\n        }\n      }\n    },\n\n    isStatusChange (index) {\n      const comments = this.currentTaskComments\n      const comment = comments[index]\n      return (\n        index === comments.length - 1 ||\n        comment.task_status_id !== comments[index + 1].task_status_id\n      )\n    },\n\n    timeCodeClicked (\n      { versionRevision, minutes, seconds, milliseconds, frame }\n    ) {\n      this.changeCurrentPreview(this.currentTaskPreviews.find(\n        p => p.revision === parseInt(versionRevision)\n      ))\n      setTimeout(() => {\n        this.previewPlayer.setCurrentFrame(frame - 1)\n        this.previewPlayer.focus()\n      }, 20)\n    },\n\n    async extractAnnotationSnapshots () {\n      this.$refs['add-comment'].showAnnotationLoading()\n      const files = await this.previewPlayer.extractAnnotationSnapshots()\n      this.$refs['add-comment'].setAnnotationSnapshots(files)\n      this.$refs['add-comment'].hideAnnotationLoading()\n      return files\n    }\n  },\n\n  watch: {\n    $route () {\n      if (this.$route.params.task_id !== this.currentTask.id) {\n        this.loadTaskData()\n      }\n    },\n\n    selectedPreviewId () {\n      if (this.currentTask) {\n        this.$router.push(this.previewPath(this.selectedPreviewId))\n      }\n    }\n  },\n\n  socket: {\n    events: {\n      'preview-file:add-file' (eventData) {\n        this.onPreviewAdded(eventData)\n      },\n\n      'comment:acknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'ack')\n      },\n\n      'comment:unacknowledge' (eventData) {\n        this.onRemoteAcknowledge(eventData, 'unack')\n      },\n\n      'preview-file:update' (eventData) {\n        const comment = this.currentTaskComments.find(\n          c => (\n            c.previews &&\n            c.previews.length > 0 &&\n            c.previews[0].id === eventData.preview_file_id\n          )\n        )\n        if (comment && this.currentTask) {\n          this.refreshPreview({\n            taskId: this.currentTask.id,\n            previewId: eventData.preview_file_id\n          }).then(preview => {\n            comment.previews[0].validation_status = preview.validation_status\n          })\n        }\n      },\n\n      'comment:new' (eventData) {\n        setTimeout(() => {\n          if (\n            this.getCurrentTaskComments().length !==\n            this.currentTaskComments.length\n          ) {\n            this.currentTaskComments = this.getCurrentTaskComments()\n            this.currentTaskPreviews = this.getCurrentTaskPreviews()\n          }\n        }, 1000)\n      },\n\n      'comment:reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            const reply = comment.replies.find(\n              r => r.id === eventData.reply_id\n            )\n            if (!reply) {\n              this.refreshComment({\n                taskId: this.currentTask.id,\n                commentId: eventData.comment_id\n              })\n                .then(remoteComment => {\n                  comment.replies = remoteComment.replies\n                })\n                .catch(console.error)\n            }\n          }\n        }\n      },\n\n      'comment:delete-reply' (eventData) {\n        if (this.currentTask) {\n          const comment = this.currentTaskComments.find(\n            c => c.id === eventData.comment_id\n          )\n          if (comment) {\n            if (!comment.replies) comment.replies = []\n            this.$store.commit('REMOVE_REPLY_FROM_COMMENT', {\n              comment,\n              reply: { id: eventData.reply_id }\n            })\n          }\n        }\n      }\n    }\n  },\n\n  metaInfo () {\n    let title = 'Loading task... - Kitsu'\n    if (this.currentTask) {\n      const taskTypeName =\n        this.taskTypeMap.get(this.currentTask.task_type_id).name\n      title = `${this.title} / ${taskTypeName} - Kitsu`\n    }\n    return { title }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark .task-information,\n.dark .add-comment,\n.dark .comment,\n.dark .no-comment,\n.dark .column {\n  background: #46494F;\n  border-color: $dark-grey;\n  box-shadow: 0px 0px 6px #333;\n}\n\nh2.subtitle {\n  margin: 0;\n  padding: 0;\n}\n\n.page {\n  background: #F9F9F9;\n  margin-top: 60px;\n  padding: 0;\n}\n\n.page.column {\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\n.page-header {\n  margin: 1em 1em 0 1em;\n}\n\n.navigation-buttons {\n  font-size: 1em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n}\n\n.navigation-buttons .arrow {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.navigation-buttons a {\n  color: $grey;\n}\n\n.selected {\n  border: 0;\n}\n\n.source {\n  color: #AAA;\n  font-size: 0.8em;\n}\n\nvideo {\n  width: 100%;\n}\n\n.validation-buttons button {\n  width: 100%;\n  margin-bottom: 0.3em;\n  border-width: 2px;\n  font-weight: bold;\n}\n\n.preview-row {\n  margin-bottom: 0.5em;\n}\n\n.add-comment {\n  margin-bottom: 1em;\n  padding: 1em;\n  box-shadow: 0px 0px 6px #E0E0E0;\n}\n\n.no-comment {\n  background: white;\n  box-shadow: 0px 0px 6px #E0E0E0;\n  padding: 1em;\n  border-radius: 5px;\n}\n\n.comment {\n  box-shadow: 0px 0px 6px #E0E0E0;\n  margin-top: 0.3em;\n}\n\n.task-columns {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n\n.task-column {\n  padding: 1em;\n}\n\n.comments-column {\n  flex: 1;\n}\n\n.preview-column {\n  overflow: auto;\n  flex: 2;\n}\n\n.preview-column-content {\n  overflow-x: hidden;\n}\n\n.preview-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.page-header .tag {\n  border-radius: 0;\n  font-weight: bold;\n  margin-right: 0.5em;\n}\n\n.assignees {\n  display: flex;\n}\n\n.assignees span {\n  margin-right: 0.2em;\n}\n\n.avatar-wrapper {\n  margin-right: 0.5em;\n}\n\n.entity-thumbnail {\n  margin-right: 0.3em;\n}\n\n.title {\n  margin: 0;\n  flex: 1;\n}\n\n.pull-right {\n  margin-left: auto;\n}\n\n.title a {\n  color: inherit;\n}\n\n.set-main-preview {\n  height: 30px;\n}\n\n.back-link {\n  padding-top: 6px;\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100% - 60px);\n}\n\n.task-columns {\n  display: flex;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.task-column {\n  overflow-y: auto;\n}\n\n.info-block {\n  margin-right: 0;\n}\n\n.task-type.block {\n  margin-bottom: 0;\n}\n\n.entity-thumbnail {\n  margin-top: 5px;\n}\n\n@media screen and (max-width: 768px) {\n  .action-button {\n    display: none;\n  }\n\n  .title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n\n  .header-title {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .header-title .flexrow-item {\n    margin-bottom: 0.5em;\n  }\n\n  .task-column {\n    width: 100%;\n    overflow-y: initial;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=ac79c5e0&scoped=true&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=ac79c5e0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ac79c5e0\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboboxStyled.vue?vue&type=style&index=0&id=597e1434&lang=scss&scoped=true&\""],"sourceRoot":""}